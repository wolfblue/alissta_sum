{"version":3,"sources":["webpack:///src/app/pages/companies/contact-list/contact-list-routing.module.ts","webpack:///src/app/pages/companies/contact-list/contact-list.module.ts","webpack:///src/app/pages/companies/contact-list/contact-list.page.html","webpack:///src/app/pages/companies/contact-list/contact-list.page.ts"],"names":["routes","path","component","ContactListPageRoutingModule","forChild","imports","exports","ContactListPageModule","declarations","ContactListPage","route","companiesService","router","alertCtrl","ref","getContacts","edit","id","navigate","relativeTo","queryParams","contact","drop","index","contacts","findIndex","c","splice","updated","company","__updated","found","find","m","push","detectChanges","create","header","mode","message","buttons","text","role","handler","alert","present","snapshot","params","replaceUrl","primerNombre","strPrimerNombre","segundoNombre","strSegundoNombre","primerApellido","strPrimerApellido","segundoApellido","strSegundoApellido","name","replace","trim","prepareCompany","cancel","listaPersonasContacto","add","selector","templateUrl","styleUrls"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;QAWaC,4B;;;;;YAAAA;;;;yBAAAA,4B;AAA4B,O;AAAA,gBAH9B,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAG8B,EAF7B,4DAE6B;;;;0HAA5BG,4B,EAA4B;AAAA;AAAA,kBAF7B,4DAE6B;AAAA,O;AAFjB,K;;;;;sEAEXA,4B,EAA4B;cAJxC,sDAIwC;eAJ/B;AACRE,iBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERM,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAI+B,Q;;;;;;;;;;;;;;;;;;AChBzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcaC,qB;;;;;YAAAA;;;;yBAAAA,qB;AAAqB,O;AAAA,gBAHvB,CAAC,4DAAD,EAAe,0DAAf,EAA4B,0DAA5B,EAAyC,yFAAzC,CAGuB;;;;0HAArBA,qB,EAAqB;AAAA,uBAFjB,kEAEiB;AAFF,kBADpB,4DACoB,EADN,0DACM,EADO,0DACP,EADoB,yFACpB;AAEE,O;AAH8C,K;;;;;sEAGnEA,qB,EAAqB;cAJjC,sDAIiC;eAJxB;AACRF,iBAAO,EAAE,CAAC,4DAAD,EAAe,0DAAf,EAA4B,0DAA5B,EAAyC,yFAAzC,CADD;AAERG,sBAAY,EAAE,CAAC,kEAAD;AAFN,S;AAIwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiB5B;;AACE;;AAAwB;;AAAmD;;AAC3E;;AAAwB;;AAAgB;;AACxC;;AAAwB;;AAAmB;;AAC3C;;AAAwB;;AAAoB;;AAC5C;;AAAwB;;AAAiB;;AAC3C;;;;;;AAL0B;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;AAlB9B;;AACE;;AACE;;AACE;;AACE;;AAAwB;;AAAwB;;AAChD;;AAAoC;;AAA+B;;AACrE;;AACA;;AAAqF;AAAA;AAAA;AAAA;;AACrF;;AACF;;AACF;;AAEA;;AACE;;AAQA;;AACE;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAqC;;AAAM;;AACjF;;AAAoC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAoB;;AAAQ;;AAClE;;AACF;;AACF;;;;;;;;AAtBgC;;AAAA;;AACY;;AAAA;;AAE5B;;AAAA;;AAME;;AAAA;;;AC1BpB;;;;;QAQaC,e;AAWX,+BACUC,KADV,EAEUC,gBAFV,EAGUC,MAHV,EAIUC,SAJV,EAKUC,GALV,EAKgC;AAAA;;AAJtB,aAAAJ,KAAA,GAAAA,KAAA;AACA,aAAAC,gBAAA,GAAAA,gBAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,SAAA,GAAAA,SAAA;AACA,aAAAC,GAAA,GAAAA,GAAA;AACN;;;;eAEJ,4BAAgB;AACd,eAAKC,WAAL;AACD;AAED;;;;;;eAGA,eAAG;AACD,eAAKC,IAAL;AACD;AAED;;;;;;;;eAKA,cAAKC,EAAL,EAAgB;AACd,eAAKL,MAAL,CAAYM,QAAZ,CAAqB,CAAC,cAAD,CAArB,EAAuC;AAAEC,sBAAU,EAAE,KAAKT,KAAnB;AAA0BU,uBAAW,EAAE;AAAEH,gBAAE,EAAFA;AAAF;AAAvC,WAAvC;AACD;AAED;;;;;;;;eAKM,gBAAOI,OAAP,EAAmB;;;;;;;;AACjBC,sB,GAAO,SAAPA,IAAO,GAAY;;;AACvB,wBAAMC,KAAK,GAAG,KAAI,CAACC,QAAL,CAAcC,SAAd,CAAwB,UAAAC,CAAC;AAAA,6BAAIA,CAAC,KAAKL,OAAV;AAAA,qBAAzB,CAAd;;AACA,yBAAI,CAACG,QAAL,CAAcG,MAAd,CAAqBJ,KAArB,EAA4B,CAA5B;;AAEA,wBAAMK,OAAO,GAAG,CAAH,KAAG,KAAI,CAACC,OAAL,CAAaC,SAAb,MAAsB,IAAtB,IAAsB,aAAtB,GAAsB,EAAtB,GAA0B,EAA1C;AACA,wBAAMC,KAAK,GAAGH,OAAO,CAACI,IAAR,CAAa,UAACC,CAAD;AAAA,6BAAeA,CAAC,KAAK,cAArB;AAAA,qBAAb,CAAd;;AAEA,wBAAI,CAACF,KAAL,EAAY;AACVH,6BAAO,CAACM,IAAR,CAAa,cAAb;AACA,2BAAI,CAACL,OAAL,CAAaC,SAAb,GAAyBF,OAAzB;AACD;;AAED,yBAAI,CAACd,GAAL,CAASqB,aAAT;AACD,mB;;;AAEa,yBAAM,KAAKtB,SAAL,CAAeuB,MAAf,CAAsB;AACxCC,0BAAM,EAAE,UADgC;AAExCC,wBAAI,EAAE,KAFkC;AAGxCC,2BAAO,EAAE,0CAH+B;AAIxCC,2BAAO,EAAE,CACP;AAAEC,0BAAI,EAAE,UAAR;AAAoBC,0BAAI,EAAE,MAA1B;AAAkCC,6BAAO,EAAErB;AAA3C,qBADO,EAEP;AAAEmB,0BAAI,EAAE,UAAR;AAAoBC,0BAAI,EAAE;AAA1B,qBAFO;AAJ+B,mBAAtB,CAAN;;;AAARE,uB;;AAUN,yBAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;AACD;AAED;;;;;;eAGA,kBAAM;AACJ,cAAM5B,EAAE,GAAG,KAAKP,KAAL,CAAWoC,QAAX,CAAoBC,MAApB,CAA2B9B,EAAtC;AACA,eAAKL,MAAL,CAAYM,QAAZ,CAAqB,6BAAsBD,EAAtB,EAArB,EAAkD;AAAE+B,sBAAU,EAAE;AAAd,WAAlD;AACD;AAED;;;;;;;;eAKA,wBAAe3B,OAAf,EAA2B;;;AACzB,cAAM4B,YAAY,GAAG,CAAH,KAAG5B,OAAO,CAAC6B,eAAR,MAAuB,IAAvB,IAAuB,aAAvB,GAAuB,EAAvB,GAA2B,EAAhD;AACA,cAAMC,aAAa,GAAG,CAAH,KAAG9B,OAAO,CAAC+B,gBAAR,MAAwB,IAAxB,IAAwB,aAAxB,GAAwB,EAAxB,GAA4B,EAAlD;AACA,cAAMC,cAAc,GAAG,CAAH,KAAGhC,OAAO,CAACiC,iBAAR,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,EAAzB,GAA6B,EAApD;AACA,cAAMC,eAAe,GAAG,CAAH,KAAGlC,OAAO,CAACmC,kBAAR,MAA0B,IAA1B,IAA0B,aAA1B,GAA0B,EAA1B,GAA8B,EAAtD;AACA,cAAIC,IAAI,aAAMR,YAAN,cAAsBE,aAAtB,cAAuCE,cAAvC,cAAyDE,eAAzD,CAAR;AACAE,cAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,MAAb,EAAqB,GAArB,CAAP;AACAD,cAAI,GAAGA,IAAI,CAACE,IAAL,EAAP;AAEA,iBAAOF,IAAP;AACD;AAED;;;;;;eAGc,uBAAW;;;;;;AACjBxC,oB,GAAK,CAAC,KAAKP,KAAL,CAAWoC,QAAX,CAAoBC,MAApB,CAA2B9B,E;;;AAGtB,yBAAM,KAAKN,gBAAL,CAAsBiD,cAAtB,CAAqC3C,EAArC,CAAN;;;AAAf,uBAAKY,O;;;;;;;AAEL,uBAAKA,OAAL,GAAe,KAAKlB,gBAAL,CAAsBkB,OAArC;;;sBAGG,KAAKA,O;;;;;AACR,uBAAKgC,MAAL;;;;AAKF,uBAAKrC,QAAL,GAAgB,KAAKK,OAAL,CAAaiC,qBAA7B;;;;;;;;AACD;;;;;;;uBArHUrD,e,EAAe,+H,EAAA,8J,EAAA,uH,EAAA,+H,EAAA,gI;AAAA,K;;;YAAfA,e;AAAe,uC;AAAA,e;AAAA,a;AAAA,ijB;AAAA;AAAA;ADb5B;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAW;;AAAuB;;AACpC;;AACF;;AACF;;AACF;;AAEA;;AACE;;AA4BA;;AACE;;AAAgB;AAAA,mBAAS,IAAAsD,GAAA,EAAT;AAAc,WAAd;;AACd;;AACF;;AACF;;AACF;;;;AAjCkC;;AAAA;;;;;;;;;sECLrBtD,e,EAAe;cAL3B,uDAK2B;eALjB;AACTuD,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKiB,Q","file":"contact-list-contact-list-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ContactListPage } from './contact-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContactListPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ContactListPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ContactListPageRoutingModule } from './contact-list-routing.module';\n\nimport { ContactListPage } from './contact-list.page';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, ContactListPageRoutingModule],\n  declarations: [ContactListPage],\n})\nexport class ContactListPageModule {}\n","<ion-header>\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"2\">\n        <ion-toolbar color=\"tertiary\">\n          <ion-buttons slot=\"start\">\n            <ion-back-button color=\"primary\" mode=\"md\" defaultHref=\"/\"></ion-back-button>\n          </ion-buttons>\n        </ion-toolbar>\n      </ion-col>\n      <ion-col size=\"10\">\n        <ion-title>Actualización Contactos</ion-title>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-header>\n\n<ion-content class=\"backgroundContent ion-padding\">\n  <ion-card class=\"ion-no-margin\" *ngFor=\"let c of contacts\">\n    <ion-card-header>\n      <div class=\"header-wrapper\">\n        <div class=\"title\">\n          <ion-item lines=\"none\"> {{ getContactName(c) }} </ion-item>\n          <ion-item lines=\"none\" class=\"role\">{{ c.strPapelRespresentacion }}</ion-item>\n        </div>\n        <ion-icon [attr.name]=\"c.__expanded ? 'chevron-up-outline' : 'chevron-down-outline'\" (click)=\"c.__expanded = !c.__expanded\">\n        </ion-icon>\n      </div>\n    </ion-card-header>\n\n    <ion-card-content>\n      <ng-container *ngIf=\"c.__expanded\">\n        <ion-item lines=\"none\"> {{ c.strSiglaTipoDoc }} {{ c.strNumeroDocumento }} </ion-item>\n        <ion-item lines=\"none\"> {{ c.strSexo }} </ion-item>\n        <ion-item lines=\"none\"> {{ c.strCelular }} </ion-item>\n        <ion-item lines=\"none\"> {{ c.strTelefono }} </ion-item>\n        <ion-item lines=\"none\"> {{ c.strEmail }} </ion-item>\n      </ng-container>\n\n      <ion-item lines=\"none\">\n        <ion-button fill=\"clear\" slot=\"start\" (click)=\"edit(c.strNumeroDocumento)\">Editar</ion-button>\n        <ion-button fill=\"clear\" slot=\"end\" (click)=\"remove(c)\">Eliminar</ion-button>\n      </ion-item>\n    </ion-card-content>\n  </ion-card>\n\n  <ion-fab class=\"ion-padding\" vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n    <ion-fab-button (click)=\"add()\">\n      <ion-icon name=\"add\"></ion-icon>\n    </ion-fab-button>\n  </ion-fab>\n</ion-content>\n","import { ChangeDetectorRef, Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { CompaniesService } from 'src/app/services/companies/companies.service';\n\n/**\n * Componente para la vista de listado de personas de contacto para la empresa actual.\n */\n@Component({\n  selector: 'app-contact-list',\n  templateUrl: './contact-list.page.html',\n  styleUrls: ['./contact-list.page.scss'],\n})\nexport class ContactListPage {\n  /**\n   * Listado de contactos.\n   */\n  contacts: any[];\n\n  /**\n   * Compañía actual.\n   */\n  private company: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private companiesService: CompaniesService,\n    private router: Router,\n    private alertCtrl: AlertController,\n    private ref: ChangeDetectorRef\n  ) {}\n\n  ionViewWillEnter(): void {\n    this.getContacts();\n  }\n\n  /**\n   * Redirige a la vista para crear un nuevo contacto.\n   */\n  add(): void {\n    this.edit();\n  }\n\n  /**\n   * Redirige a la vista de edición de contactos.\n   *\n   * @param id Número del documento del contacto a editar.\n   */\n  edit(id?: string): void {\n    this.router.navigate(['edit-contact'], { relativeTo: this.route, queryParams: { id } });\n  }\n\n  /**\n   * Elimina el contacto indicado de la lista de contactos para esta empresa.\n   *\n   * @param contact\n   */\n  async remove(contact: any): Promise<void> {\n    const drop = (): void => {\n      const index = this.contacts.findIndex(c => c === contact);\n      this.contacts.splice(index, 1);\n\n      const updated = this.company.__updated ?? [];\n      const found = updated.find((m: string) => m === 'contact-data');\n\n      if (!found) {\n        updated.push('contact-data');\n        this.company.__updated = updated;\n      }\n\n      this.ref.detectChanges();\n    };\n\n    const alert = await this.alertCtrl.create({\n      header: 'Atención',\n      mode: 'ios',\n      message: '¿Realmente desea eliminar este contacto?',\n      buttons: [\n        { text: 'Eliminar', role: 'drop', handler: drop },\n        { text: 'Cancelar', role: 'cancel' },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  /**\n   * Cancela la edición de personas de contacto para la empresa.\n   */\n  cancel(): void {\n    const id = this.route.snapshot.params.id;\n    this.router.navigate([`/u/companies/list/${id}`], { replaceUrl: true });\n  }\n\n  /**\n   * Obtiene el nombre completo del contacto.\n   *\n   * @param contact Contacto.\n   */\n  getContactName(contact: any): string {\n    const primerNombre = contact.strPrimerNombre ?? '';\n    const segundoNombre = contact.strSegundoNombre ?? '';\n    const primerApellido = contact.strPrimerApellido ?? '';\n    const segundoApellido = contact.strSegundoApellido ?? '';\n    let name = `${primerNombre} ${segundoNombre} ${primerApellido} ${segundoApellido}`;\n    name = name.replace(/\\s+/g, ' ');\n    name = name.trim();\n\n    return name;\n  }\n\n  /**\n   * Establece el listado de contactos para esta empresa.\n   */\n  private async getContacts(): Promise<void> {\n    const id = +this.route.snapshot.params.id;\n\n    try {\n      this.company = await this.companiesService.prepareCompany(id);\n    } catch {\n      this.company = this.companiesService.company;\n    }\n\n    if (!this.company) {\n      this.cancel();\n\n      return;\n    }\n\n    this.contacts = this.company.listaPersonasContacto;\n  }\n}\n"]}