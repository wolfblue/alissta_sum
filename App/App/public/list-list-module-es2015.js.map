{"version":3,"sources":["./src/app/pages/companies/list/list-routing.module.ts","./src/app/pages/companies/list/list.module.ts","./src/app/pages/companies/list/list.page.ts","./src/app/pages/companies/list/list.page.html"],"names":[],"mappings":"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","file":"list-list-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListPage } from './list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListPageRoutingModule {}\n","import { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\nimport { ListPageRoutingModule } from './list-routing.module';\nimport { ListPage } from './list.page';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, ListPageRoutingModule, PipesModule, ScrollingModule],\n  declarations: [ListPage],\n})\nexport class ListPageModule {}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\nimport { AlertService } from 'src/app/services/alert/alert.service';\nimport { CompaniesService } from 'src/app/services/companies/companies.service';\nimport { StorageService } from 'src/app/storage.service';\n\n/**\n * Componente para la vista de listado de empresas migradas.\n */\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.page.html',\n  styleUrls: ['./list.page.scss'],\n})\nexport class ListPage {\n  /**\n   * Listado de empresas migradas.\n   */\n  companies: any[];\n\n  /**\n   * Término de búsqueda para la casilla de filtrado de empresas.\n   */\n  term: string;\n\n  constructor(\n    private companiesService: CompaniesService,\n    private storageService: StorageService,\n    private alertService: AlertService\n  ) {}\n\n  ionViewWillEnter(): void {\n    this.retrieveCompanies();\n  }\n\n  /**\n   * Obtiene el listado de empresas migradas.\n   */\n  async fetchCompanies(): Promise<void> {\n    const onSuccess = async (response: any): Promise<void> => {\n      this.companies = await this.excludeConfirmed(response);\n    };\n\n    const onError = (error: any): void => {\n      let header: string;\n      let message: string;\n\n      if (error instanceof HttpErrorResponse) {\n        if (error.status === 417) {\n          header = 'Sin datos';\n          message = 'Estimado usuario, no tiene empresas agendadas para actualizar.';\n        } else {\n          header = 'Error de conexión';\n          message = 'Ha ocurrido un error de conexión con el servidor.';\n        }\n      } else {\n        header = 'Memoria llena';\n        message = 'Compruebe que tiene suficiente espacio disponible en el dispositivo.';\n      }\n\n      this.alertService.showAlert(header, message);\n    };\n\n    const loading = await this.alertService.showLoading();\n    const session = await this.storageService.get('sesion');\n\n    this.companiesService\n      .fetchCompanies(session.idRegistro)\n      .pipe(finalize(() => this.alertService.hideLoading(loading)))\n      .subscribe(\n        r => onSuccess(r),\n        e => onError(e)\n      );\n  }\n\n  /**\n   * Establece las empresas migradas que se encuentren en el almacén de datos.\n   */\n  private async retrieveCompanies(): Promise<void> {\n    this.companies = await this.excludeConfirmed(await this.companiesService.companies);\n  }\n\n  /**\n   * Excluye del listado las compañías que ya hayan sido editadas y confirmadas.\n   *\n   * Estas compañías solo tienen pendiente el envío de datos, y pueden verse en el módulo\n   * _Empresas por enviar_.\n   */\n  private async excludeConfirmed(companies: any[]): Promise<any[]> {\n    const updatedCompanies = await this.companiesService.updatedCompanies;\n    const confirmed = updatedCompanies.filter(u => u.__confirmed);\n    const editables = companies.filter(c => !confirmed.find(u => u.Pk_Id_AS_004_Empresas_AMigrar === c.Pk_Id_AS_004_Empresas_AMigrar));\n\n    return editables;\n  }\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"2\">\n        <ion-back-button mode=\"md\" color=\"primary\" defaultHref=\"/\"></ion-back-button>\n      </ion-col>\n      <ion-col size=\"10\">\n        <ion-searchbar animated color=\"primary\" placeholder=\"Buscar\" (ionChange)=\"term = $event.detail.value\"> </ion-searchbar>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n  <!-- Listado de empresas -->\n  <ng-container *ngIf=\"companies?.length; else noCompaniesTmp\">\n    <cdk-virtual-scroll-viewport itemSize=\"150\" minBufferPx=\"750\" maxBufferPx=\"1500\">\n      <ion-list class=\"companies\" lines=\"none\">\n        <ion-item\n          class=\"company ion-margin-bottom\"\n          *cdkVirtualFor=\"let c of companies | filterCompanies : ['strRazonSocial', 'strNumeroDcto', 'stringObservaciones']: term\"\n        >\n          <ng-container *ngTemplateOutlet=\"companyTmp; context: { company: c }\"></ng-container>\n        </ion-item>\n      </ion-list>\n    </cdk-virtual-scroll-viewport>\n  </ng-container>\n\n  <!-- Descargar empresas -->\n  <ion-fab vertical=\"bottom\" horizontal=\"center\" slot=\"fixed\">\n    <ion-fab-button (click)=\"fetchCompanies()\">\n      <ion-icon name=\"cloud-download-outline\"></ion-icon>\n    </ion-fab-button>\n  </ion-fab>\n</ion-content>\n\n<!-- Plantilla para vista sin empresas -->\n<ng-template #noCompaniesTmp>\n  <div class=\"no-companies-wrapper\">\n    <div class=\"message ion-padding\">\n      <img src=\"../../../assets/icon/icono_observaciones.svg\" />\n      <h3>Recuerde sincronizar las empresas que se van actualizar aquí.</h3>\n      <ion-icon name=\"arrow-down-outline\"></ion-icon>\n    </div>\n  </div>\n</ng-template>\n\n<!-- Plantilla de empresa -->\n<ng-template #companyTmp let-company=\"company\">\n  <a class=\"w-100\" [routerLink]=\"[company.Pk_Id_AS_004_Empresas_AMigrar]\">\n    <ion-card class=\"ion-no-margin\">\n      <ion-card-content>\n        <ion-item lines=\"none\">{{ company.strRazonSocial }}</ion-item>\n        <ion-item lines=\"none\">{{ company.str_Sigla_Documento }}: {{ company.strNumeroDcto }}</ion-item>\n        <ion-item lines=\"none\" class=\"observaciones\">Observaciones: {{ company.stringObservaciones }}</ion-item>\n      </ion-card-content>\n    </ion-card>\n  </a>\n</ng-template>\n"],"sourceRoot":"webpack:///"}