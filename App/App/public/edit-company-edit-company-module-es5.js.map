{"version":3,"sources":["webpack:///src/app/pages/companies/edit-company/edit-company-routing.module.ts","webpack:///src/app/pages/companies/edit-company/edit-company.module.ts","webpack:///src/app/pages/companies/edit-company/edit-company.page.html","webpack:///src/app/pages/companies/edit-company/edit-company.page.ts"],"names":["routes","path","component","EditCompanyPageRoutingModule","forChild","imports","exports","EditCompanyPageModule","declarations","EditCompanyPage","navbarService","route","companiesService","router","alertCtrl","popoverCtrl","EMAIL_REGEX","TIPOS_ZONA","label","value","CELLPHONE_REGEX","NUMBER_ONLY","TEL_REGEX","ZIPCODE_REGEX","HINTS","direccion","text","highlightedText","setVisibility","formGroup","undefined","getCompany","invalid","create","header","mode","message","buttons","alert","present","company","eDSedesActualizadas","srtIndicadorZona","indicadorZona","strCelular","celular","strTelefono","telefonoNotificacion","strCorreoElectronico","correo","strCodigoPostal","codigoPostal","Fk_Id_Departamento","departamentoSede","Pk_Id_Departamento","Nombre_Departamento_Sede","Nombre_Departamento","Fk_Id_Municipio","municipioSede","IdMunicipio","Nombre_Municipio_Sede","NombreMunicipio","Nombre_Municipio","updated","__updated","found","find","m","push","cancel","id","snapshot","params","navigate","replaceUrl","controls","reset","key","a","b","event","field","componentProps","popover","prepareCompany","departamentos","municipios","initForm","identificacionEmpresa","str_Sigla_Documento","strNumeroDcto","identificacionEmpresaControl","disabled","razonSocialEmpresaControl","strRazonSocial","idSedeControl","strNombreSede","direccionSedeControl","strDireccion","required","indicadorZonaControl","departamento","departamentoSedeControl","municipio","municipioSedeControl","estadoSedeControl","actividadEconomica","strCodigoActividadEconomica","strActividadEconomicaNombre","actividadEconomicaControl","sectorEconomicoControl","strDescripcionSectorEconomico","celularControl","pattern","maxLength","telefonoNotificacionControl","correoControl","codigoPostalControl","identificacionRepresentante","strSiglaRepresentanteLegal","strNumeroDcto_Representant_Legal","identificacionRepresentanteControl","representanteLegalControl","strNombre_Representant_Legal","razonSocialEmpresa","idSede","direccionSede","estadoSede","sectorEconomico","representanteLegal","selector","templateUrl","styleUrls"],"mappings":"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","file":"edit-company-edit-company-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EditCompanyPage } from './edit-company.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditCompanyPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditCompanyPageRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { MunicipiosFilterPipe } from 'src/app/pipes/municipiosFilter.pipe';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\nimport { EditCompanyPageRoutingModule } from './edit-company-routing.module';\nimport { EditCompanyPage } from './edit-company.page';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, ReactiveFormsModule, PipesModule, EditCompanyPageRoutingModule],\n  declarations: [EditCompanyPage],\n})\nexport class EditCompanyPageModule {}\n","<ion-header>\n  <ion-toolbar>\n    <div class=\"title\">Actualización Datos Empresa</div>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <form [formGroup]=\"formGroup\" (ngSubmit)=\"save()\" *ngIf=\"formGroup\">\n    <ion-card class=\"ion-margin\">\n      <ion-card-content>\n        <ion-list lines=\"none\">\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">TD/Número Identificación Empresa</ion-label>\n            <ion-input formControlName=\"identificacionEmpresa\"></ion-input>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Razón Social Empresa</ion-label>\n            <div class=\"textarea-wrapper\">\n              <ion-textarea autoGrow=\"true\" formControlName=\"razonSocialEmpresa\"></ion-textarea>\n            </div>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">ID Sede</ion-label>\n            <ion-input formControlName=\"idSede\"></ion-input>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">\n              Dirección Empresa Sede Principal\n              <ion-button class=\"tooltip\" (click)=\"showPopover($event, 'direccion')\">\n                <ion-icon name=\"help-outline\" slot=\"icon-only\"></ion-icon>\n              </ion-button>\n            </ion-label>\n            <div class=\"label-link-wrapper\">\n              <a class=\"label-link\" routerLink=\"./../../../edit-address\">Actualizar Dirección</a>\n            </div>\n            <ion-input formControlName=\"direccionSede\" readonly></ion-input>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.direccionSede.hasError('required')\">Dirección es obligatorio.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Indicador de zona</ion-label>\n            <ion-radio-group formControlName=\"indicadorZona\">\n              <ion-item *ngFor=\"let tz of TIPOS_ZONA\">\n                <ion-label>{{ tz.label }}</ion-label>\n                <ion-radio slot=\"start\" [value]=\"tz.value\"></ion-radio>\n              </ion-item>\n            </ion-radio-group>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.indicadorZona.hasError('required')\">Indicador de zona es obligatorio.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Departamento Sede Principal</ion-label>\n            <ion-select\n              mode=\"ios\"\n              interface=\"action-sheet\"\n              cancelText=\"CANCELAR\"\n              formControlName=\"departamentoSede\"\n              (ionChange)=\"changeDepartamento()\"\n              [compareWith]=\"compareWith('departamento')\"\n            >\n              <ion-select-option [value]=\"d\" *ngFor=\"let d of departamentos\"> {{ d.Nombre_Departamento }} </ion-select-option>\n            </ion-select>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.departamentoSede.hasError('required')\">Departamento es obligatorio.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Municipio Sede Principal</ion-label>\n            <ion-select\n              mode=\"ios\"\n              interface=\"action-sheet\"\n              cancelText=\"CANCELAR\"\n              formControlName=\"municipioSede\"\n              [compareWith]=\"compareWith('municipio')\"\n            >\n              <ion-select-option [value]=\"m\" *ngFor=\"let m of municipios | municipiosFilter : formGroup.controls.departamentoSede.value\">\n                {{ m.NombreMunicipio }}\n              </ion-select-option>\n            </ion-select>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.municipioSede.hasError('required')\">Municipio es obligatorio.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Estado Sede</ion-label>\n            <ion-input formControlName=\"estadoSede\"></ion-input>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Código/Nombre AE Ppal</ion-label>\n            <div class=\"textarea-wrapper\">\n              <ion-textarea autoGrow=\"true\" formControlName=\"actividadEconomica\"></ion-textarea>\n            </div>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Sector Económico</ion-label>\n            <div class=\"textarea-wrapper\">\n              <ion-textarea autoGrow=\"true\" formControlName=\"sectorEconomico\"></ion-textarea>\n            </div>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Celular Contacto</ion-label>\n            <ion-input type=\"tel\" maxlength=\"10\" formControlName=\"celular\"></ion-input>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.celular.hasError('pattern')\">Celular inválido.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Teléfono Notificación</ion-label>\n            <ion-input type=\"tel\" ngModel=\"60\" maxlength=\"10\" formControlName=\"telefonoNotificacion\"></ion-input>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.telefonoNotificacion.hasError('pattern')\">Teléfono inválido.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Correo Notificación</ion-label>\n            <ion-input type=\"email\" formControlName=\"correo\"></ion-input>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.correo.hasError('required')\">Correo es obligatorio.</p>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.correo.hasError('pattern')\">Correo inválido.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Código Postal</ion-label>\n            <ion-input formControlName=\"codigoPostal\"></ion-input>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.codigoPostal.hasError('required')\">Código postal es obligatorio.</p>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.codigoPostal.hasError('pattern')\">Código postal es inválido.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">TD/No. Identificación Rpte. Legal</ion-label>\n            <ion-input formControlName=\"identificacionRepresentante\"></ion-input>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Nombre Rpte. Legal</ion-label>\n            <ion-input formControlName=\"representanteLegal\"></ion-input>\n          </ion-item>\n        </ion-list>\n\n        <div class=\"actions-wrapper ion-margin-top\">\n          <ion-button color=\"light\" (click)=\"cancel()\">Cancelar</ion-button>\n          <ion-button type=\"submit\" color=\"primary\">Actualizar</ion-button>\n        </div>\n      </ion-card-content>\n    </ion-card>\n  </form>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController, PopoverController } from '@ionic/angular';\nimport { PopoverComponent } from 'src/app/components/popover/popover.component';\nimport { CompaniesService } from 'src/app/services/companies/companies.service';\nimport { NavbarService } from '../../navbar/navbar.service';\n\n/**\n * Componente para la vista de edición de datos de empresa.\n */\n@Component({\n  selector: 'app-edit-company',\n  templateUrl: './edit-company.page.html',\n  styleUrls: ['./edit-company.page.scss'],\n})\nexport class EditCompanyPage {\n  /**\n   * Formulario.\n   */\n  formGroup: FormGroup;\n\n  /**\n   * Compañía actual.\n   */\n  company: any;\n\n  /**\n   * Listado de departamentos.\n   */\n  departamentos: any[];\n\n  /**\n   * Listado de municipios.\n   */\n  municipios: any[];\n\n  /**\n   * Expresión regular para validar correos electrónicos.\n   */\n  readonly EMAIL_REGEX = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n  /**\n   * Indicadores de zona.\n   */\n  readonly TIPOS_ZONA = [\n    { label: 'Urbana', value: 'U' },\n    { label: 'Rural', value: 'R' },\n  ];\n\n  /**\n   * Expresión regular para validar números de teléfono celular.\n   */\n  private readonly CELLPHONE_REGEX = /^3[\\d]{9}$/;\n\n  /**\n   * Expresión regular para validar solo números.\n   */\n  private readonly NUMBER_ONLY = /^[0-9]{10}$/;\n\n  /**\n   * Expresión regular para validar números de teléfono fijo.\n   */\n  private readonly TEL_REGEX = /^[\\d]{7,10}$/;\n\n  /**\n   * Expresión regular para código postal.\n   */\n  private readonly ZIPCODE_REGEX = /^[\\d]{6}$/;\n\n  /**\n   * Textos de ayuda.\n   */\n  private readonly HINTS = {\n    direccion: {\n      text: 'al dar clic tendrá la posibilidad de actualizar la dirección de la sede principal.',\n      highlightedText: 'Estimado usuario: ',\n    },\n  };\n\n  constructor(\n    private navbarService: NavbarService,\n    private route: ActivatedRoute,\n    private companiesService: CompaniesService,\n    private router: Router,\n    private alertCtrl: AlertController,\n    private popoverCtrl: PopoverController\n  ) {}\n\n  ionViewWillEnter(): void {\n    this.navbarService.setVisibility(false);\n    this.formGroup = undefined;\n    this.getCompany();\n  }\n\n  ionViewWillLeave(): void {\n    this.navbarService.setVisibility(true);\n  }\n\n  /**\n   * Guarda los cambios.\n   */\n  async save(): Promise<void> {\n    if (this.formGroup.invalid) {\n      const alert = await this.alertCtrl.create({\n        header: 'Atención',\n        mode: 'ios',\n        message: 'Compruebe el correcto diligenciamiento de TODOS los campos obligatorios.',\n        buttons: ['ACEPTAR'],\n      });\n\n      await alert.present();\n\n      return;\n    }\n\n    const value = this.formGroup.value;\n    this.company.eDSedesActualizadas.srtIndicadorZona = value.indicadorZona;\n    this.company.strCelular = value.celular;\n    this.company.strTelefono = value.telefonoNotificacion;\n    this.company.eDSedesActualizadas.strTelefono = this.company.strTelefono;\n    this.company.eDSedesActualizadas.strCelular = this.company.strCelular;\n    this.company.strCorreoElectronico = value.correo;\n    this.company.eDSedesActualizadas.strCorreoElectronico = this.company.strCorreoElectronico;\n    this.company.eDSedesActualizadas.strCodigoPostal = value.codigoPostal;\n    this.company.strCodigoPostal = this.company.eDSedesActualizadas.strCodigoPostal;\n    this.company.eDSedesActualizadas.Fk_Id_Departamento = value.departamentoSede.Pk_Id_Departamento;\n    this.company.eDSedesActualizadas.Nombre_Departamento_Sede = value.departamentoSede.Nombre_Departamento;\n    this.company.Fk_Id_Departamento = this.company.eDSedesActualizadas.Fk_Id_Departamento;\n    this.company.Nombre_Departamento = this.company.eDSedesActualizadas.Nombre_Departamento_Sede;\n    this.company.eDSedesActualizadas.Fk_Id_Municipio = value.municipioSede.IdMunicipio;\n    this.company.eDSedesActualizadas.Nombre_Municipio_Sede = value.municipioSede.NombreMunicipio;\n    this.company.Fk_Id_Municipio = this.company.eDSedesActualizadas.Fk_Id_Municipio;\n    this.company.Nombre_Municipio = this.company.eDSedesActualizadas.Nombre_Municipio_Sede;\n\n    const updated = this.company.__updated ?? [];\n    const found = updated.find((m: string) => m === 'company-data');\n\n    if (!found) {\n      updated.push('company-data');\n      this.company.__updated = updated;\n    }\n\n    this.cancel();\n  }\n\n  /**\n   * Cancela la edición de la empresa.\n   */\n  cancel(): void {\n    const id = this.route.snapshot.params.id;\n    this.router.navigate([`/u/companies/list/${id}`], { replaceUrl: true });\n  }\n\n  /**\n   * Al cambiar un departamento, se restablece el control para el municipio también.\n   */\n  changeDepartamento(): void {\n    this.formGroup.controls.municipioSede.reset();\n  }\n\n  /**\n   * Comparación de objetos para establecer valores en selectores de municipios y departamentos.\n   *\n   * @param mode Modo.\n   */\n  compareWith(mode: 'departamento' | 'municipio'): (a: any, b: any) => boolean {\n    const key = mode === 'departamento' ? 'Pk_Id_Departamento' : 'IdMunicipio';\n\n    return (a: any, b: any) => {\n      return a && b ? a[key] === b[key] : a === b;\n    };\n  }\n\n  async showPopover(event: any, field: string): Promise<void> {\n    const popover = await this.popoverCtrl.create({\n      event,\n      component: PopoverComponent,\n      componentProps: { text: this.HINTS[field].text, highlightedText: this.HINTS[field].highlightedText },\n    });\n\n    await popover.present();\n  }\n\n  /**\n   * Establece la empresa de la vista de edición de datos de empresa.\n   */\n  private async getCompany(): Promise<void> {\n    const id = +this.route.snapshot.params.id;\n\n    try {\n      this.company = await this.companiesService.prepareCompany(id);\n    } catch {\n      this.company = this.companiesService.company;\n    }\n\n    if (!this.company) {\n      this.cancel();\n\n      return;\n    }\n\n    this.departamentos = await this.companiesService.departamentos;\n    this.municipios = await this.companiesService.municipios;\n    this.initForm();\n  }\n\n  /**\n   * Inicializa el formulario.\n   */\n  private initForm(): void {\n    const identificacionEmpresa = `${this.company.str_Sigla_Documento} ${this.company.strNumeroDcto}`;\n    const identificacionEmpresaControl = new FormControl({ value: identificacionEmpresa, disabled: true });\n\n    const razonSocialEmpresaControl = new FormControl({ value: this.company.strRazonSocial, disabled: true });\n\n    const idSedeControl = new FormControl({ value: this.company.eDSedesActualizadas.strNombreSede, disabled: true });\n\n    const direccionSedeControl = new FormControl(this.company.eDSedesActualizadas.strDireccion, [Validators.required]);\n\n    const indicadorZonaControl = new FormControl(this.company.eDSedesActualizadas.srtIndicadorZona, [Validators.required]);\n\n    const departamento = {\n      Pk_Id_Departamento: this.company.eDSedesActualizadas.Fk_Id_Departamento,\n      Nombre_Departamento: this.company.eDSedesActualizadas.Nombre_Departamento_Sede,\n    };\n\n    const departamentoSedeControl = new FormControl(departamento, [Validators.required]);\n\n    const municipio = {\n      IdMunicipio: this.company.eDSedesActualizadas.Fk_Id_Municipio,\n      NombreMunicipio: this.company.eDSedesActualizadas.Nombre_Municipio_Sede,\n    };\n\n    const municipioSedeControl = new FormControl(municipio, [Validators.required]);\n\n    const estadoSedeControl = new FormControl({ value: this.company.eDSedesActualizadas.strNombreSede, disabled: true });\n\n    const actividadEconomica = `${this.company.strCodigoActividadEconomica} ${this.company.strActividadEconomicaNombre}`;\n    const actividadEconomicaControl = new FormControl({ value: actividadEconomica, disabled: true });\n\n    const sectorEconomicoControl = new FormControl({ value: this.company.strDescripcionSectorEconomico, disabled: true });\n\n    const celularControl = new FormControl(this.company.strCelular, [\n      Validators.pattern(this.CELLPHONE_REGEX),\n      Validators.pattern(this.NUMBER_ONLY),\n      Validators.maxLength(10),\n    ]);\n\n    const telefonoNotificacionControl = new FormControl(this.company.strTelefono, [\n      Validators.pattern(this.TEL_REGEX),\n      Validators.pattern(this.NUMBER_ONLY),\n      Validators.maxLength(10),\n    ]);\n\n    const correoControl = new FormControl(this.company.strCorreoElectronico, [Validators.required, Validators.pattern(this.EMAIL_REGEX)]);\n\n    const codigoPostalControl = new FormControl(this.company.eDSedesActualizadas.strCodigoPostal, [Validators.pattern(this.ZIPCODE_REGEX)]);\n\n    const identificacionRepresentante = `${this.company.strSiglaRepresentanteLegal} ${this.company.strNumeroDcto_Representant_Legal}`;\n    const identificacionRepresentanteControl = new FormControl({ value: identificacionRepresentante, disabled: true });\n\n    const representanteLegalControl = new FormControl({ value: this.company.strNombre_Representant_Legal, disabled: true });\n\n    this.formGroup = new FormGroup({\n      identificacionEmpresa: identificacionEmpresaControl,\n      razonSocialEmpresa: razonSocialEmpresaControl,\n      idSede: idSedeControl,\n      direccionSede: direccionSedeControl,\n      indicadorZona: indicadorZonaControl,\n      departamentoSede: departamentoSedeControl,\n      municipioSede: municipioSedeControl,\n      estadoSede: estadoSedeControl,\n      actividadEconomica: actividadEconomicaControl,\n      sectorEconomico: sectorEconomicoControl,\n      celular: celularControl,\n      telefonoNotificacion: telefonoNotificacionControl,\n      correo: correoControl,\n      codigoPostal: codigoPostalControl,\n      identificacionRepresentante: identificacionRepresentanteControl,\n      representanteLegal: representanteLegalControl,\n    });\n  }\n}\n"]}