{"version":3,"sources":["webpack:///src/app/pages/educa/manual-event-register/manual-event-register-routing.module.ts","webpack:///src/app/pages/educa/manual-event-register/manual-event-register.module.ts","webpack:///src/app/pages/educa/manual-event-register/manual-event-register.page.html","webpack:///src/app/pages/educa/manual-event-register/manual-event-register.page.ts"],"names":["routes","path","component","loadChildren","then","m","InfoRegisterEventManualPageModule","ManualEventRegisterPageRoutingModule","forChild","imports","exports","ManualEventRegisterPageModule","declarations","ManualEventRegisterPage","formbuilder","alertController","eventService","cacheService","router","modalCtrl","documentsType","hiddenForm","nombreEvento","sessionStorage","createFormConsultUser","getDocumentsTypeUser","formConsultUser","group","identificationTypeCompany","required","identificationNumberCompany","identificationTypeUser","identificationNumberUser","getDocumentType","subscribe","response","Documentos","valid","eventIdSelected","newRegisterEvent","FK_ID_Evento","documentoAsistente","value","getSearchResponsibleEventManual","infoResponsibleManualEvent","JSON","stringify","navigateByUrl","err","error","Alert","toString","create","modal","present","onWillDismiss","result","info","data","confirmationRegister","dataUsuarioQR","parse","registroUsuarioAsistente","strTipoIdentificacionEmpresa","tiEmpr","strNumeroDocumentoEmpresa","numEmpr","strRazonSocial","razonEmpr","strTipoDocumentoEmpleado","tiAsistente","strNumeroDocumentoEmpleado","strNombreEmpleado","numAsistente","FK_ID_Cargo","cargo","FK_ID_Sexo","sexo","dtmFechaNacimiento","fchnac","strTelefono","tele","strEmail","email","registerUserQR","registroNuevoUsuarioAsistente","registerResponsibleQR","resultadoAlerta","mensaje","header","mode","message","buttons","alert","search","openScanQr","selector","templateUrl","styleUrls"],"mappings":"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","file":"default~educa-manual-event-register-manual-event-register-module~manual-event-register-manual-event-~10a14e10-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ManualEventRegisterPage } from './manual-event-register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ManualEventRegisterPage,\n  },\n  {\n    path: 'infoRegisterUserManual',\n    loadChildren: () =>\n      import('../info-register-event-manual/info-register-event-manual.module').then(m => m.InfoRegisterEventManualPageModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManualEventRegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ManualEventRegisterPageRoutingModule } from './manual-event-register-routing.module';\n\nimport { ManualEventRegisterPage } from './manual-event-register.page';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, IonicModule, ManualEventRegisterPageRoutingModule],\n  declarations: [ManualEventRegisterPage],\n})\nexport class ManualEventRegisterPageModule {}\n","<ion-header>\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"2\">\n        <ion-toolbar color=\"tertiary\">\n          <ion-buttons slot=\"start\">\n            <ion-back-button color=\"primary\" mode=\"md\" defaultHref=\"/\"></ion-back-button>\n          </ion-buttons>\n        </ion-toolbar>\n      </ion-col>\n      <ion-col size=\"10\">\n        <ion-title class=\"titulo\">Registro Manual</ion-title>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-header>\n\n<ion-content class=\"ion-padding backgroundContent\" [hidden]=\"hiddenForm\">\n  <div class=\"ion-text-center\">\n    <ion-label class=\"tituloEvento\" *ngIf=\"nombreEvento\">{{nombreEvento}}</ion-label>\n  </div>\n\n  <form [formGroup]=\"formConsultUser\" class=\"formulario\">\n    <div class=\"ion-text-center divTitulo\">\n      <ion-item lines=\"none\" mode=\"ios\">\n        <ion-icon name=\"business\" color=\"primary\" slot=\"start\"></ion-icon>\n        <ion-label>Datos Empresa</ion-label>\n      </ion-item>\n    </div>\n    <ion-item lines=\"none\">\n      <ion-label position=\"stacked\">Tipo de identificación</ion-label>\n      <ion-select\n        formControlName=\"identificationTypeCompany\"\n        placeholder=\"Tipo de identificación\"\n        class=\"bg-light mt-3 rounded pl-1 pr-1\"\n        mode=\"ios\"\n        interface=\"action-sheet\"\n        cancelText=\"CANCELAR\"\n        placeholder=\"Tipo identificación\"\n      >\n        <ion-select-option *ngFor=\"let type of documentsType\" [value]=\"type.SiglaDocumento\">{{type.strTipoDocumento}}</ion-select-option>\n      </ion-select>\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-label position=\"stacked\">Número identificación</ion-label>\n      <ion-input\n        formControlName=\"identificationNumberCompany\"\n        placeholder=\"Número de identificación\"\n        mode=\"ios\"\n        interface=\"action-sheet\"\n        cancelText=\"CANCELAR\"\n        class=\"bg-light mt-3 rounded pl-1 pr-1\"\n      ></ion-input>\n    </ion-item>\n\n    <div class=\"ion-text-center divTitulo\">\n      <ion-item lines=\"none\" mode=\"ios\">\n        <ion-icon name=\"person\" color=\"primary\" slot=\"start\"></ion-icon>\n        <ion-label>Datos Asistente</ion-label>\n      </ion-item>\n    </div>\n    <ion-item lines=\"none\">\n      <ion-label position=\"stacked\">Tipo de identificación</ion-label>\n      <ion-select\n        formControlName=\"identificationTypeUser\"\n        class=\"bg-light mt-3 rounded pl-1 pr-1\"\n        mode=\"ios\"\n        interface=\"action-sheet\"\n        cancelText=\"CANCELAR\"\n        placeholder=\"Tipo identificación\"\n      >\n        <ion-select-option *ngFor=\"let type of documentsType\" [value]=\"type.SiglaDocumento\">{{type.strTipoDocumento}}</ion-select-option>\n      </ion-select>\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-label position=\"stacked\">Número identificación</ion-label>\n      <ion-input\n        formControlName=\"identificationNumberUser\"\n        placeholder=\"Número de identificación\"\n        mode=\"ios\"\n        interface=\"action-sheet\"\n        cancelText=\"CANCELAR\"\n        class=\"bg-light mt-3 rounded pl-1 pr-1\"\n      ></ion-input>\n    </ion-item>\n  </form>\n\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"3\"></ion-col>\n      <ion-col size=\"6\">\n        <ion-button (click)=\"search()\" mode=\"ios\" class=\"btn\" expand=\"block\"> Consultar </ion-button>\n      </ion-col>\n      <ion-col size=\"3\"></ion-col>\n    </ion-row>\n  </ion-grid>\n\n  <ion-fab vertical=\"bottom\" horizontal=\"end\" color=\"secondary\" slot=\"fixed\">\n    <ion-fab-button color=\"secondary\">\n      <ion-icon name=\"qr-code-outline\" (click)=\"openScanQr()\"></ion-icon>\n    </ion-fab-button>\n  </ion-fab>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\n\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { EventService } from '../../../services/event/event.service';\nimport { RegistroAsistenteEvento } from '../../../intarfaces/interfaces';\nimport { CacheService } from '../../../services/cache/cache.service';\nimport { AlertController, ModalController } from '@ionic/angular';\nimport { ScannerQrComponent } from 'src/app/components/scanner-qr/scanner-qr.component';\n\n@Component({\n  selector: 'app-manual-event-register',\n  templateUrl: './manual-event-register.page.html',\n  styleUrls: ['./manual-event-register.page.scss'],\n})\nexport class ManualEventRegisterPage implements OnInit {\n  // Variable para la creación del formulario\n  formConsultUser: FormGroup;\n  // Contiene el nombre de evento\n  nombreEvento: string;\n  // Es un array con los diferentes tipos de documento que se permiten seleccionar\n  documentsType: [] = [];\n  hiddenForm: boolean = false;\n\n  constructor(\n    private formbuilder: FormBuilder,\n    private alertController: AlertController,\n    private eventService: EventService,\n    private cacheService: CacheService,\n    private router: Router,\n    private modalCtrl: ModalController\n  ) {}\n\n  ngOnInit() {\n    this.nombreEvento = sessionStorage.nombreEvento;\n    this.createFormConsultUser();\n    this.getDocumentsTypeUser();\n  }\n\n  /**\n   * Método que permite crear el formulario para la consulta del invitado\n   */\n  createFormConsultUser() {\n    this.formConsultUser = this.formbuilder.group({\n      identificationTypeCompany: ['', Validators.required],\n      identificationNumberCompany: ['', Validators.required],\n      identificationTypeUser: ['', Validators.required],\n      identificationNumberUser: ['', Validators.required],\n    });\n  }\n\n  /**\n   * Este método permite ir a consultar el servicio cuales son los tipos de documentos\n   * existentes en la BD\n   */\n  getDocumentsTypeUser() {\n    this.eventService.getDocumentType().subscribe(response => {\n      this.documentsType = response.Documentos;\n    });\n  }\n\n  /**\n   * El método search como su nombre lo dice es buscar de acuerdo a la información ingresada.\n   * Aqui se deben tener en cuenta dos cosas:\n   * 1. si efectivamente el servicio responde exitoso (true) es por que trajo información del invitado\n   * esto quiere decir que se guarda dicha información en el sessionStorage cuyo nombre es infoResponsibleManualEvent.\n   * Esa información servirá para armar el formulario de registro manual cuandro trae datos\n   * 2. Si el servicio responde un error (417), esto quiere indicar que no esta invitado y que se debe escribir\n   * todos los datos en en registro manual y asi lanzar la peticion.\n   * Por eso en la variable infoResponsibleManualEvent se guarda el err.error equivalente a 'null'.\n   */\n  search() {\n    if (this.formConsultUser.valid) {\n      const eventIdSelected = this.cacheService.newRegisterEvent.FK_ID_Evento;\n      const documentoAsistente = this.formConsultUser.value.identificationNumberUser;\n      this.eventService.getSearchResponsibleEventManual(documentoAsistente, eventIdSelected).subscribe(\n        response => {\n          const infoResponsibleManualEvent = JSON.stringify(response);\n          sessionStorage.infoResponsibleManualEvent = infoResponsibleManualEvent;\n          this.router.navigateByUrl('/u/consultEvent/selectRegisterEvent/registerEventManual/infoRegisterUserManual');\n        },\n        err => {\n          sessionStorage.infoResponsibleManualEvent = err.error;\n          this.router.navigateByUrl('/u/consultEvent/selectRegisterEvent/registerEventManual/infoRegisterUserManual');\n        }\n      );\n    } else {\n      this.Alert();\n    }\n  }\n\n  /**\n   * Desde esta vista tambien se pueden registrar por medio del QR, por ende este metodo,\n   * abre la camara, lee el QR, arma el objeto y lanza la petición para realizar el registro del invitado\n   */\n  async openScanQr() {\n    this.hiddenForm = true;\n    const eventIdSelected = await this.cacheService.newRegisterEvent.FK_ID_Evento.toString();\n\n    const modal = await this.modalCtrl.create({\n      component: ScannerQrComponent,\n    });\n    modal.present();\n    const result = await modal.onWillDismiss();\n    this.hiddenForm = false;\n    const info = result.data.response;\n    if (!info) {\n      this.confirmationRegister('Error.', 'Falló la inscripción del asistente al evento.');\n      return;\n    }\n    const dataUsuarioQR = JSON.parse(info);\n\n    const registroUsuarioAsistente: RegistroAsistenteEvento = {\n      strTipoIdentificacionEmpresa: dataUsuarioQR.tiEmpr,\n      strNumeroDocumentoEmpresa: dataUsuarioQR.numEmpr,\n      strRazonSocial: dataUsuarioQR.razonEmpr,\n      strTipoDocumentoEmpleado: dataUsuarioQR.tiAsistente,\n      strNumeroDocumentoEmpleado: dataUsuarioQR.tiAsistente,\n      strNombreEmpleado: dataUsuarioQR.numAsistente,\n      FK_ID_Cargo: dataUsuarioQR.cargo,\n      FK_ID_Sexo: dataUsuarioQR.sexo,\n      dtmFechaNacimiento: dataUsuarioQR.fchnac,\n      strTelefono: dataUsuarioQR.tele,\n      strEmail: dataUsuarioQR.email,\n      FK_ID_Evento: eventIdSelected,\n    };\n    this.registerUserQR(registroUsuarioAsistente);\n  }\n\n  /**\n   *\n   * Este metodo es el encargado de lanzar la petición para realizar el registro como tal\n   */\n  registerUserQR(registroNuevoUsuarioAsistente: RegistroAsistenteEvento) {\n    this.eventService.registerResponsibleQR(registroNuevoUsuarioAsistente).subscribe(\n      response => {\n        this.confirmationRegister('Exitoso', 'El registro se realizó correctamente.');\n      },\n      err => {\n        this.confirmationRegister('Fallido.', 'No se pudo realizar el registro del asistente al evento');\n      }\n    );\n  }\n\n  /**\n   * Este metodo basicamente muestra la alerta de exito o fallido segun sea el caso al momento de\n   * ejecutar el servicio\n   */\n  async confirmationRegister(resultadoAlerta: string, mensaje: string) {\n    const alert = await this.alertController.create({\n      header: resultadoAlerta,\n      mode: 'ios',\n      message: mensaje,\n      buttons: ['ACEPTAR'],\n    });\n    await alert.present();\n  }\n\n  /**\n   * Este muestra la alerta cuando se lanza la petición y hay algun campo en el formulario vacio.\n   */\n  async Alert() {\n    const alert = await this.alertController.create({\n      header: 'Atención',\n      message: 'Todos los campos son obligatorios.',\n      buttons: ['ACEPTAR'],\n    });\n\n    await alert.present();\n  }\n}\n"]}