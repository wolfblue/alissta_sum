{"version":3,"sources":["webpack:///src/app/pages/exec-log/exec-log-routing.module.ts","webpack:///src/app/pages/exec-log/exec-log.module.ts","webpack:///src/app/pages/exec-log/exec-log.page.html","webpack:///src/app/pages/exec-log/exec-log.page.ts","webpack:///src/app/services/menu-configuracion.service.ts"],"names":["routes","path","component","loadChildren","then","m","PendingVisitsPageModule","TasksToSendPageModule","ReleaseActivitiesPageModule","ExecLogPageRoutingModule","forChild","imports","exports","ExecLogPageModule","declarations","ExecLogPage","menuConfOptions","modalCtrl","storage","optMenuOptions","getMenuExceActivities","optMenuHelpOptions","getMenuHelpExceActivities","uploadInfoUser","itemSelected","title","showResendVerificationCode","get","nameUser","nombreCompleto","nombre1","apellido1","nameUserRegister","create","modal","present","selector","templateUrl","styleUrls","MenuConfiguracionService","http","providedIn"],"mappings":"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","file":"exec-log-exec-log-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ExecLogPage } from './exec-log.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExecLogPage,\n  },\n  {\n    path: 'pending-visits',\n    loadChildren: () => import('../pending-visits/pending-visits.module').then(m => m.PendingVisitsPageModule),\n  },\n  {\n    path: 'tasks-to-send',\n    loadChildren: () => import('../tasks-to-send/tasks-to-send.module').then(m => m.TasksToSendPageModule),\n  },\n  {\n    path: 'releaseActivities',\n    loadChildren: () => import('../release-activities/release-activities.module').then(m => m.ReleaseActivitiesPageModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExecLogPageRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ExecLogPageRoutingModule } from './exec-log-routing.module';\nimport { ExecLogPage } from './exec-log.page';\nimport { ComponentsModule } from '../../components/components.module';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, ComponentsModule, ExecLogPageRoutingModule],\n  declarations: [ExecLogPage],\n})\nexport class ExecLogPageModule {}\n","<app-header></app-header>\n\n<ion-content class=\"backgroundContent\">\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"4\" *ngFor=\"let menuOpt of optMenuOptions | async; let i = index\">\n        <ion-card mode=\"ios\" (click)=\"optionSelectedMenu(menuOpt)\" [routerLink]=\"menuOpt.redirecTo\">\n          <div class=\"vertical-center\">\n            <div class=\"center\">\n              <img [src]=\"menuOpt.icon\" alt=\"\" />\n            </div>\n          </div>\n          <ion-label>\n            <h4 class=\"tituloOpcion\">{{menuOpt.title}}</h4>\n          </ion-label>\n        </ion-card>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"4\" (click)=\"optionSelectedMenu(menuOptHelp)\" *ngFor=\"let menuOptHelp of optMenuHelpOptions | async; let i = index\">\n        <div class=\"vertical-center\">\n          <div class=\"center\">\n            <img [src]=\"menuOptHelp.icon\" alt=\"\" />\n          </div>\n        </div>\n        <ion-label>\n          <h4 class=\"tituloOpcion\">{{menuOptHelp.title}}</h4>\n        </ion-label>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { MenuConfiguracionService } from '../../services/menu-configuracion.service';\nimport { Observable } from 'rxjs';\nimport { Storage } from '@ionic/storage';\nimport { ModalController } from '@ionic/angular';\nimport { ResendVerificationCodeComponent } from '../../components/resend-verification-code/resend-verification-code.component';\n\n/**\n * Componente para la vista de registro de ejecución.\n */\n@Component({\n  selector: 'app-exec-log',\n  templateUrl: './exec-log.page.html',\n  styleUrls: ['./exec-log.page.scss'],\n})\nexport class ExecLogPage implements OnInit {\n  /**\n   * Array de opciones del menú de ejecución de actividades\n   */\n  optMenuOptions: Observable<any[]>;\n\n  /**\n   * Array de opciones del menú de ayuda de ejecución de actividades\n   */\n  optMenuHelpOptions: Observable<any[]>;\n\n  /**\n   * Variable que contiene el nombre del usuario ingresado.\n   */\n  nameUserRegister: string;\n\n  constructor(\n    private menuConfOptions: MenuConfiguracionService,\n    private modalCtrl: ModalController,\n    private storage: Storage\n  ) {}\n\n  ngOnInit() {\n    this.optMenuOptions = this.menuConfOptions.getMenuExceActivities();\n    this.optMenuHelpOptions = this.menuConfOptions.getMenuHelpExceActivities();\n    this.uploadInfoUser();\n  }\n\n  optionSelectedMenu(itemSelected) {\n    switch (itemSelected.title) {\n      case 'Visitas pendientes':\n        break;\n      case 'Tareas por enviar':\n        break;\n      case 'Liberar actividades':\n        break;\n      case 'Recordar código':\n        this.showResendVerificationCode();\n        break;\n      case 'Ayuda PDF':\n        break;\n      case 'Instructivo':\n        break;\n      default:\n        break;\n    }\n  }\n\n  async uploadInfoUser() {\n    const nameUser = await this.storage.get('sesion');\n    const nombreCompleto = nameUser.nombre1 + ' ' + nameUser.apellido1;\n    this.nameUserRegister = nombreCompleto;\n  }\n\n  async showResendVerificationCode() {\n    const modal = await this.modalCtrl.create({\n      component: ResendVerificationCodeComponent,\n    });\n\n    return await modal.present();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MenuConfiguracionService {\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Este metodo permite hacer la petición al archivo donde estan las opciones para el menú de\n   * la vista de configuración\n   */\n  getMenuOpts() {\n    return this.http.get<any[]>('/assets/data/menuConfiguracion.json');\n  }\n\n  /**\n   * Este método permite consultar las opciones que existen en el menú principal home.page.html\n   */\n  getMenuMain() {\n    return this.http.get<any[]>('/assets/data/menuPrincipal-prod.json');\n  }\n\n  /**\n   * Este método permite consultar las opciones que existen en el menú de ejecución de\n   * actividades\n   */\n  getMenuExceActivities() {\n    return this.http.get<any[]>('/assets/data/menuExecuteActi.json');\n  }\n\n  /**\n   * Este método permitre consultar las opciones de ayuda en el menú de ejecución de\n   * actividades\n   */\n\n  getMenuHelpExceActivities() {\n    return this.http.get<any[]>('/assets/data/menuHelpExecuteActi.json');\n  }\n\n  /**\n   * Este método permite consultar las opciones cuando se selecciona una visita\n   */\n  getMenuActivitySelected() {\n    return this.http.get<any[]>('/assets/data/menuVisitActivity.json');\n  }\n}\n"]}