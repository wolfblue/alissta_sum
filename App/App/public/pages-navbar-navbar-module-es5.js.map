{"version":3,"sources":["webpack:///src/app/pages/navbar/navbar-routing.module.ts","webpack:///src/app/pages/navbar/navbar.module.ts","webpack:///src/app/pages/navbar/navbar.page.ts","webpack:///src/app/pages/navbar/navbar.page.html","webpack:///src/app/pages/navbar/navbar.service.ts"],"names":["routes","path","component","children","loadChildren","then","m","ProfilePageModule","HomePageModule","SettingsPageModule","ExecLogPageModule","ConsultEventPageModule","TermsAndConditionsPageModule","SurveyAndSignaturePageModule","SelectRegisterEventPageModule","ManualEventRegisterPageModule","InfoRegisterEventManualPageModule","ListCommunicationsPageModule","TalkPageModule","CreateCommunicationPageModule","CompaniesPageModule","redirectTo","pathMatch","NavbarPageRoutingModule","forChild","imports","exports","NavbarPageModule","declarations","providers","NavbarPage","navbarService","show","navbarServiceSub","subscribe","v","unsubscribe","selector","templateUrl","styleUrls","NavbarService","_show","asObservable","isVisible","next"],"mappings":"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","file":"pages-navbar-navbar-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NavbarPage } from './navbar.page';\n\nconst routes: Routes = [\n  {\n    path: 'u',\n    component: NavbarPage,\n    children: [\n      {\n        path: 'profile',\n        loadChildren: () => import('../profile/profile.module').then(m => m.ProfilePageModule),\n      },\n      {\n        path: 'home',\n        loadChildren: () => import('../home/home.module').then(m => m.HomePageModule),\n      },\n      {\n        path: 'settings',\n        loadChildren: () => import('../settings/settings.module').then(m => m.SettingsPageModule),\n      },\n      {\n        path: 'execLog',\n        loadChildren: () => import('../exec-log/exec-log.module').then(m => m.ExecLogPageModule),\n      },\n      {\n        path: 'consultEvent',\n        loadChildren: () => import('../educa/consult-event/consult-event.module').then(m => m.ConsultEventPageModule),\n      },\n      {\n        path: 'terms-and-conditions',\n        loadChildren: () => import('../terms-and-conditions/terms-and-conditions.module').then(m => m.TermsAndConditionsPageModule),\n      },\n      {\n        path: 'survey-and-signature',\n        loadChildren: () => import('../survey-and-signature/survey-and-signature.module').then(m => m.SurveyAndSignaturePageModule),\n      },\n      {\n        path: 'select-register-event',\n        loadChildren: () =>\n          import('../educa/select-register-event/select-register-event.module').then(m => m.SelectRegisterEventPageModule),\n      },\n      {\n        path: 'manual-event-register',\n        loadChildren: () =>\n          import('../educa/manual-event-register/manual-event-register.module').then(m => m.ManualEventRegisterPageModule),\n      },\n      {\n        path: 'info-register-event-manual',\n        loadChildren: () =>\n          import('../educa/info-register-event-manual/info-register-event-manual.module').then(m => m.InfoRegisterEventManualPageModule),\n      },\n      {\n        path: 'list-communications',\n        loadChildren: () =>\n          import('../communications/list-communications/list-communications.module').then(m => m.ListCommunicationsPageModule),\n      },\n      {\n        path: 'list-communications/:communicationId',\n        loadChildren: () =>\n          import('../communications/list-communications/list-communications.module').then(m => m.ListCommunicationsPageModule),\n      },\n      {\n        path: 'talk/:idTalk',\n        loadChildren: () => import('../communications/talk/talk.module').then(m => m.TalkPageModule),\n      },\n      {\n        path: 'create-communications',\n        loadChildren: () =>\n          import('../communications/create-communication/create-communication.module').then(m => m.CreateCommunicationPageModule),\n      },\n      {\n        path: 'companies',\n        loadChildren: () => import('../companies/companies.module').then(m => m.CompaniesPageModule),\n      },\n    ],\n  },\n  {\n    path: '',\n    redirectTo: 'u/home',\n    pathMatch: 'full',\n  },\n  {\n    path: '**',\n    redirectTo: 'u/home',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NavbarPageRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { NavbarPageRoutingModule } from './navbar-routing.module';\nimport { NavbarPage } from './navbar.page';\nimport { NavbarService } from './navbar.service';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, NavbarPageRoutingModule],\n  declarations: [NavbarPage],\n  providers: [NavbarService],\n})\nexport class NavbarPageModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NavbarService } from './navbar.service';\n\n/**\n * Componente de barra de navegación.\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.page.html',\n  styleUrls: ['./navbar.page.scss'],\n})\nexport class NavbarPage implements OnInit, OnDestroy {\n  /**\n   * Indica si mostrar u ocultar la barra de navegación.\n   */\n  show: boolean;\n\n  /**\n   * Suscripción al servicio de configuración de la barra de navegación.\n   */\n  navbarServiceSub: Subscription;\n\n  constructor(private navbarService: NavbarService) {\n    this.show = true;\n  }\n\n  ngOnInit(): void {\n    this.navbarServiceSub = this.navbarService.show.subscribe(v => (this.show = v));\n  }\n\n  ngOnDestroy(): void {\n    this.navbarServiceSub.unsubscribe();\n  }\n}\n","<ion-tabs>\n  <ion-tab-bar slot=\"top\" class=\"color\" [class.ion-hide]=\"!show\">\n    <!-- Acceso a perfil -->\n    <ion-tab-button tab=\"profile\">\n      <div class=\"iconNavbarPerfil\"></div>\n    </ion-tab-button>\n\n    <!-- Acceso a inicio -->\n    <ion-tab-button tab=\"home\">\n      <div class=\"iconNavbarHome\"></div>\n    </ion-tab-button>\n\n    <!-- Acceso a configuración -->\n    <ion-tab-button tab=\"settings\">\n      <div class=\"iconNavbarSettings\"></div>\n    </ion-tab-button>\n  </ion-tab-bar>\n</ion-tabs>\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * Servicio de configuración de la barra de navegación.\n */\n@Injectable()\nexport class NavbarService {\n  /**\n   * Indica si la barra de navegación debe mostrarse u ocultarse.\n   */\n  get show(): Observable<boolean> {\n    return this._show.asObservable();\n  }\n\n  private _show: Subject<boolean>;\n\n  constructor() {\n    this._show = new Subject();\n  }\n\n  /**\n   * Establece si la barra de navegación debe mostrarse u ocultarse.\n   *\n   * @param isVisible Si es verdadero, la barra se muestra. En caso contrario, se oculta.\n   */\n  setVisibility(isVisible: boolean): void {\n    this._show.next(isVisible);\n  }\n}\n"]}