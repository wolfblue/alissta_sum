{"version":3,"sources":["webpack:///src/app/pages/communications/list-communications/list-communications-routing.module.ts","webpack:///src/app/pages/communications/list-communications/list-communications.module.ts","webpack:///src/app/pages/communications/list-communications/list-communications.page.html","webpack:///src/app/pages/communications/list-communications/list-communications.page.ts"],"names":["routes","path","component","ListCommunicationsPageRoutingModule","forChild","imports","exports","MY_FORMATS","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","ListCommunicationsPageModule","provide","useValue","useClass","deps","declarations","providers","ListCommunicationsPage","router","formBuilder","storage","talkService","route","minDate","Date","customActionSheetOptions","header","subHeader","rolesVisualizarHistoricos","createFormConsultComunication","get","infoUser","getTemasComunicacion","getListTalks","paramsSubscription","unsubscribe","formConsultComunicaciones","group","razonSocial","temaComunicacion","fechaInicial","fechaFinal","subscribe","response","temasComunicacion","temas","saveRolesHistoricos","RolVisHis","event","temaSeleccionado","detail","value","informacion","fechaInicio","fechaInicioIngresada","_d","toISOString","split","fechaInicialIng","fechaModificada","concat","fechaFinalIngresada","fechaFinalIng","searchComunicacion","idRegistro","idRol","IsOk","talks","Respuesta","startDate","endDate","params","param","communicationId","talk","find","PKConversacion","selectTalk","date","getDate","getMonth","getFullYear","selectedTalk","saveSelectedCoversation","navigateByUrl","reset","selectedTopic","buscarComunicacion","cleanFields","selector","templateUrl","styleUrls"],"mappings":"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","file":"communications-list-communications-list-communications-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListCommunicationsPage } from './list-communications.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListCommunicationsPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListCommunicationsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListCommunicationsPageRoutingModule } from './list-communications-routing.module';\n\nimport { ListCommunicationsPage } from './list-communications.page';\n\nimport { MatDatepickerModule, MatNativeDateModule, MatFormFieldModule, MatInputModule } from '@angular/material';\n\nimport { MAT_DATE_LOCALE, MAT_DATE_FORMATS, DateAdapter } from '@angular/material';\nimport { MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\n\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    MatInputModule,\n    ListCommunicationsPageRoutingModule,\n  ],\n  declarations: [ListCommunicationsPage],\n  providers: [\n    { provide: MAT_DATE_LOCALE, useValue: 'es-ES' },\n    {\n      provide: DateAdapter,\n      useClass: MomentDateAdapter,\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS],\n    },\n\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n  ],\n})\nexport class ListCommunicationsPageModule {}\n","<ion-header>\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"2\">\n        <ion-toolbar color=\"tertiary\">\n          <ion-buttons slot=\"start\">\n            <ion-back-button color=\"primary\" mode=\"md\" defaultHref=\"/\"></ion-back-button>\n          </ion-buttons>\n        </ion-toolbar>\n      </ion-col>\n      <ion-col size=\"10\">\n        <ion-title class=\"titulo\">Lista de comunicaciones</ion-title>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-header>\n\n<ion-content>\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"12\">\n        <ion-list>\n          <ion-item lines=\"none\" color=\"secondary\">\n            <!-- <img [src]=\"menuOpt.icon\"> -->\n            <ion-avatar slot=\"start\">\n              <img src=\"../../../../assets/icon/icono_comunicaciones.svg\" class=\"imgMenu\" alt=\"iconItem\" />\n            </ion-avatar>\n            <div class=\"ion-text-center\">\n              <ion-label>Comunicación</ion-label>\n            </div>\n          </ion-item>\n        </ion-list>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n\n  <ion-card>\n    <form>\n      <ion-list [formGroup]=\"formConsultComunicaciones\">\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Razón social o Nit</ion-label>\n          <ion-input class=\"bg-light mt-3 rounded pl-1 pr-1\" formControlName=\"razonSocial\" placeholder=\"Razón social o nit\"></ion-input>\n        </ion-item>\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Tema</ion-label>\n          <ion-select\n            [interfaceOptions]=\"customActionSheetOptions\"\n            cancelText=\"CANCELAR\"\n            formControlName=\"temaComunicacion\"\n            class=\"bg-light mt-3 rounded pl-1 pr-1\"\n            mode=\"ios\"\n            interface=\"action-sheet\"\n            (ionChange)=\"selectedTopic($event)\"\n            placeholder=\"Seleccione un tema\"\n          >\n            <ion-select-option value=\"-1\">Seleccione un tema</ion-select-option>\n            <ion-select-option *ngFor=\"let tema of temasComunicacion\" [value]=\"tema.Valor\">{{tema.Nombre}}</ion-select-option>\n          </ion-select>\n        </ion-item>\n        <ion-item lines=\"none\">\n          <ion-grid style=\"margin: 0px; width: 100%\">\n            <ion-row>\n              <ion-col size=\"6\">\n                <ion-label position=\"stacked\">Fecha Inicio</ion-label>\n                <mat-form-field style=\"width: 100%\" class=\"bg-light mt-3 rounded pl-1 pr-1\">\n                  <input readonly matInput [matDatepicker]=\"picker\" [max]=\"minDate\" formControlName=\"fechaInicial\" />\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                  <mat-datepicker #picker></mat-datepicker>\n                </mat-form-field>\n              </ion-col>\n              <ion-col size=\"6\">\n                <ion-label position=\"stacked\">Fecha Fin</ion-label>\n                <mat-form-field style=\"width: 100%\" class=\"bg-light mt-3 rounded pl-1 pr-1\">\n                  <input readonly matInput [matDatepicker]=\"picker1\" [max]=\"minDate\" formControlName=\"fechaFinal\" />\n                  <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                  <mat-datepicker #picker1></mat-datepicker>\n                </mat-form-field>\n              </ion-col>\n            </ion-row>\n          </ion-grid>\n        </ion-item>\n        <ion-item lines=\"none\">\n          <ion-grid>\n            <ion-row>\n              <ion-col size=\"1\"></ion-col>\n              <ion-col size=\"5\">\n                <ion-button color=\"primary\" (click)=\"buscarComunicacion()\" expand=\"block\">Consultar</ion-button>\n              </ion-col>\n              <ion-col size=\"5\">\n                <ion-button color=\"primary\" (click)=\"cleanFields()\" expand=\"block\">Limpiar</ion-button>\n              </ion-col>\n              <ion-col size=\"1\"></ion-col>\n            </ion-row>\n          </ion-grid>\n        </ion-item>\n      </ion-list>\n    </form>\n  </ion-card>\n\n  <ion-card mode=\"ios\" *ngFor=\"let item of talks; let i = index\" (click)=\"selectTalk(item)\">\n    <ion-item lines=\"none\">\n      <ion-icon style=\"color: orange; width: 2rem; height: 2rem\" name=\"enter-outline\" slot=\"end\"></ion-icon>\n      <ion-grid>\n        <ion-row>\n          <ion-col size=\"12\"><p style=\"font-size: 0.8rem\">{{item.Empresa}}</p></ion-col>\n        </ion-row>\n        <ion-row>\n          <ion-col size=\"12\">\n            <p>{{item.EmpresaTipoDocumento}} {{item.EmpresaDocumento}}</p>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-item>\n\n    <ion-item lines=\"none\">\n      <ion-grid>\n        <ion-row>\n          <ion-col size=\"4\">\n            <strong>Tema:</strong>\n          </ion-col>\n          <ion-col size=\"8\">\n            <p style=\"color: red; font-weight: 400\">{{item.Tema}}</p>\n          </ion-col>\n        </ion-row>\n        <ion-row>\n          <ion-col size=\"8\">\n            <strong style=\"font-size: 0.9rem\">Caracterización PyP:</strong>\n          </ion-col>\n          <ion-col size=\"4\">\n            <p>Regulares</p>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-item>\n  </ion-card>\n</ion-content>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TalkService } from '../../../services/talk/talk.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Storage } from '@ionic/storage';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-list-communications',\n  templateUrl: './list-communications.page.html',\n  styleUrls: ['./list-communications.page.scss'],\n})\nexport class ListCommunicationsPage implements OnInit, OnDestroy {\n  /**\n   * formConsultEvent, es el formulario de consultar el evento.\n   */\n  formConsultComunicaciones: FormGroup;\n\n  /**\n   * Este componente carga la lista de las comunicaciones vigentes para el dia de hoy\n   */\n\n  minDate = new Date();\n\n  customActionSheetOptions: any = {\n    header: 'Temas de conversaciín',\n    subHeader: 'Seleccione el tema de conversación',\n  };\n\n  talks: any;\n\n  temasComunicacion: any;\n  temaSeleccionado: string;\n  infoUser: any;\n\n  rolesVisualizarHistoricos: any[] = [];\n\n  private paramsSubscription: Subscription;\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private storage: Storage,\n    private talkService: TalkService,\n    private route: ActivatedRoute\n  ) {}\n\n  async ngOnInit() {\n    this.createFormConsultComunication();\n    this.infoUser = await this.storage.get('sesion');\n    this.getTemasComunicacion();\n  }\n\n  ionViewDidEnter() {\n    this.getListTalks();\n  }\n\n  ionViewDidLeave() {\n    this.paramsSubscription.unsubscribe();\n  }\n\n  ngOnDestroy(): void {}\n\n  createFormConsultComunication() {\n    this.formConsultComunicaciones = this.formBuilder.group({\n      razonSocial: [''],\n      temaComunicacion: [''],\n      fechaInicial: [''],\n      fechaFinal: [''],\n    });\n  }\n\n  /**\n   * Obtener los temas de comunicación\n   */\n  getTemasComunicacion() {\n    this.talkService.getTemasComunicacion().subscribe(response => {\n      this.temasComunicacion = response.temas;\n      // Guardar los roles que solo sirven para visualizar las comunicaciones y no permiten participar en las comunicaciones\n      this.talkService.saveRolesHistoricos(response.RolVisHis);\n    });\n  }\n\n  /**\n   * Metodo cuando cambia el select de los temas seleccionados\n   */\n  selectedTopic(event) {\n    this.temaSeleccionado = '';\n    this.temaSeleccionado = event.detail.value;\n  }\n\n  /**\n   * Buscar comunicaciones cuidado con el usuario que esta quemado\n   */\n  buscarComunicacion() {\n    const informacion = this.formConsultComunicaciones.value;\n    let temaComunicacion;\n    let fechaInicio;\n    let fechaFinal;\n    if (informacion.temaComunicacion === '') {\n      temaComunicacion = '-1';\n    } else {\n      temaComunicacion = informacion.temaComunicacion;\n    }\n    if (informacion.fechaInicial === '') {\n      fechaInicio = '';\n    } else {\n      const fechaInicioIngresada = informacion.fechaInicial._d.toISOString().split('T')[0];\n      const fechaInicialIng = fechaInicioIngresada.split('-');\n      const fechaModificada = fechaInicialIng[2].concat('/').concat(fechaInicialIng[1]).concat('/').concat(fechaInicialIng[0]);\n      fechaInicio = fechaModificada;\n    }\n\n    if (informacion.fechaFinal === '') {\n      fechaFinal = '';\n    } else {\n      const fechaFinalIngresada = informacion.fechaFinal._d.toISOString().split('T')[0];\n      const fechaFinalIng = fechaFinalIngresada.split('-');\n      const fechaModificada = fechaFinalIng[2].concat('/').concat(fechaFinalIng[1]).concat('/').concat(fechaFinalIng[0]);\n      fechaFinal = fechaModificada;\n    }\n\n    this.talkService\n      .searchComunicacion(\n        informacion.razonSocial,\n        temaComunicacion,\n        // tslint:disable-next-line: max-line-length\n        fechaInicio,\n        fechaFinal,\n        this.infoUser.idRegistro,\n        this.infoUser.idRol\n      )\n      .subscribe(response => {\n        if (response.IsOk === true) {\n          this.talks = response.Respuesta;\n\n          // this.formConsultComunicaciones.get('fechaInicial').reset();\n          // this.formConsultComunicaciones.get('fechaFinal').reset();\n        }\n      });\n  }\n\n  /**\n   * Listar las comunicaciones activas para el día actual.\n   */\n  getListTalks() {\n    const informacion = this.formConsultComunicaciones.value;\n    let temaComunicacion;\n    if (informacion.temaComunicacion === '') {\n      temaComunicacion = '-1';\n    } else {\n      temaComunicacion = informacion.temaComunicacion;\n    }\n    let startDate: string = ''; //this.dateToString(informacion.fechaInicial);\n    let endDate: string = ''; //this.dateToString(informacion.fechaFinal);\n    this.talkService\n      .searchComunicacion(\n        informacion.razonSocial,\n        temaComunicacion,\n        // tslint:disable-next-line: max-line-length\n        startDate,\n        endDate,\n        this.infoUser.idRegistro,\n        this.infoUser.idRol\n      )\n      .subscribe(response => {\n        if (response.IsOk === true) {\n          this.talks = response.Respuesta;\n\n          this.paramsSubscription = this.route.params.subscribe(params => {\n            let param = params['communicationId'];\n            if (param) {\n              let communicationId: number = +param;\n              let talk = this.talks.find(talk => talk.PKConversacion == communicationId);\n              this.selectTalk(talk);\n            }\n          });\n        }\n      });\n  }\n\n  private dateToString(date: Date): string {\n    return date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear();\n  }\n\n  /**\n   * @param selectedTalk este es el metodo que permite seleccionar una conversación para ver los diferentes\n   * comentarios que esta tiene.\n   */\n  selectTalk(selectedTalk) {\n    this.talkService.saveSelectedCoversation(selectedTalk);\n    this.router.navigateByUrl(`u/talk/${selectedTalk.PKConversacion}`);\n  }\n\n  cleanFields(): void {\n    this.formConsultComunicaciones.reset();\n  }\n}\n"]}