{"version":3,"sources":["webpack:///src/app/pages/release-activities/release-activities-routing.module.ts","webpack:///src/app/pages/release-activities/release-activities.module.ts","webpack:///src/app/pages/release-activities/release-activities.page.html","webpack:///src/app/pages/release-activities/release-activities.page.ts"],"names":["routes","path","component","ReleaseActivitiesPageRoutingModule","forChild","imports","exports","ReleaseActivitiesPageModule","declarations","ReleaseActivitiesPage","loadingCtlr","cacheService","alertController","listActivitiesCompany","net","storage","response","numeroDocumento","name","listaActividades","id","codigo","listActivity","actividadesSeleccionadas","isSelectecActivity","lines","listActivities","showIPAddress","get","informacionUsuario","presentLoading","listActivityForCompany","idPersona","toPromise","actividades","loading","dismiss","event","textoBuscar","detail","value","actividadSeleccionada","idSelected","existe","find","item","forEach","element","splice","push","idActividadesSeleccionadas","objLiberar","ListaIdsActividades","direccionIP","ipAddress","CedulaUsuarioModifica","liberarActivities","siLiberoActividades","notification","create","mode","message","present","titulo","notificacion","header","backdropDismiss","buttons","alert","onDidDismiss","search","selector","templateUrl","styleUrls"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;QAWaC,kC;;;;;YAAAA;;;;yBAAAA,kC;AAAkC,O;AAAA,gBAHpC,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAGoC,EAFnC,4DAEmC;;;;0HAAlCG,kC,EAAkC;AAAA;AAAA,kBAFnC,4DAEmC;AAAA,O;AAFvB,K;;;;;sEAEXA,kC,EAAkC;cAJ9C,sDAI8C;eAJrC;AACRE,iBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERM,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAIqC,Q;;;;;;;;;;;;;;;;;;AChB/C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAeaC,2B;;;;;YAAAA;;;;yBAAAA,2B;AAA2B,O;AAAA,gBAH7B,CAAC,4DAAD,EAAe,0DAAf,EAA4B,0DAA5B,EAAyC,+DAAzC,EAAsD,qGAAtD,CAG6B;;;;0HAA3BA,2B,EAA2B;AAAA,uBAFvB,8EAEuB;AAFF,kBAD1B,4DAC0B,EADZ,0DACY,EADC,0DACD,EADc,+DACd,EAD2B,qGAC3B;AAEE,O;AAH2D,K;;;;;sEAGtFA,2B,EAA2B;cAJvC,sDAIuC;eAJ9B;AACRF,iBAAO,EAAE,CAAC,4DAAD,EAAe,0DAAf,EAA4B,0DAA5B,EAAyC,+DAAzC,EAAsD,qGAAtD,CADD;AAERG,sBAAY,EAAE,CAAC,8EAAD;AAFN,S;AAI8B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKtC;;AAEE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;AAiBI;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAW;;AAAQ;;AAAgB;;AAAS;;AAC9C;;AACF;;AACA;;AACE;;AACE;;AAAG;;AAAwB;;AAC7B;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAQ;;AAAqB;;AAAS;;AACnD;;AACF;;AACA;;AACE;;AACE;;AAAG;;AAAiC;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAW;;AAAQ;;AAAqB;;AAAS;;AACjD;;AAAsE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAqC;;AAC7G;;AACF;;AACF;;AACF;;AACF;;;;;;;;AAtBmB;;AAAA;;AAUA;;AAAA;;AAOgB;;AAAA;;;;;;AA5CrC;;AAIE;;AACE;;AACE;;AAAkB;;AAAc;;AAChC;;AAAK;;AAAgB;;AACvB;;AACA;;AACE;;AAAkB;;AAAwB;;AAC1C;;AAAK;;AAA2B;;AAClC;;AACF;;AACA;;AAoCF;;;;;;AA3CW;;AAAA;;AAIA;;AAAA;;AAGU;;AAAA;;;;;;;;;;;;AAfvB;;AACE;;;;AAmDA;;AACE;;AACE;;AAAY;AAAA;;AAAA;;AAAA;AAAA;;AAA6D;;AAAkB;;AAC7F;;AACF;;AACF;;;;;;AAtDI;;AAAA;;;;QClCOC,qB;AA0CX,qCACUC,WADV,EAEUC,YAFV,EAGUC,eAHV,EAIUC,qBAJV,EAKUC,GALV,EAMUC,OANV,EAM0B;AAAA;;AALhB,aAAAL,WAAA,GAAAA,WAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AACA,aAAAC,qBAAA,GAAAA,qBAAA;AACA,aAAAC,GAAA,GAAAA,GAAA;AACA,aAAAC,OAAA,GAAAA,OAAA;AA/CV,aAAAC,QAAA,GAAkB,CAChB;AACEC,yBAAe,EAAE,QADnB;AAEEC,cAAI,EAAE,WAFR;AAGEC,0BAAgB,EAAE,CAChB;AACEC,cAAE,EAAE,CADN;AAEEC,kBAAM,EAAE;AAFV,WADgB,EAKhB;AACED,cAAE,EAAE,CADN;AAEEC,kBAAM,EAAE;AAFV,WALgB;AAHpB,SADgB,EAehB;AACEJ,yBAAe,EAAE,QADnB;AAEEC,cAAI,EAAE,KAFR;AAGEC,0BAAgB,EAAE,CAChB;AACEC,cAAE,EAAE,CADN;AAEEC,kBAAM,EAAE;AAFV,WADgB;AAHpB,SAfgB,CAAlB;AA2BA,aAAAC,YAAA,GAAsB,EAAtB;AAMA,aAAAC,wBAAA,GAAkC,EAAlC;AAEA,aAAAC,kBAAA,GAAqB,KAArB;AAcE,aAAKC,KAAL,GAAa,MAAb;AACD;;;;eAED,4BAAmB;AACjB,eAAKC,cAAL;AACA,eAAKZ,GAAL,CAASa,aAAT;AACD;;;eAED,oBAAW,CAAE;;;eAEP,0BAAiB;;;;;;;AACK,yBAAM,KAAKZ,OAAL,CAAaa,GAAb,CAAiB,QAAjB,CAAN;;;AAA1B,uBAAKC,kB;AACL,uBAAKC,cAAL;;AACoB,yBAAM,KAAKjB,qBAAL,CAA2BkB,sBAA3B,CAAkD,KAAKF,kBAAL,CAAwBG,SAA1E,EAAqFC,SAArF,EAAN;;;AAAdC,6B;AACN,uBAAKZ,YAAL,GAAoBY,WAAW,CAACrB,qBAAhC;AACA,uBAAKsB,OAAL,CAAaC,OAAb;;;;;;;;AACD;;;eAED,gBAAOC,KAAP,EAAc;AACZ,eAAKC,WAAL,GAAmBD,KAAK,CAACE,MAAN,CAAaC,KAAhC;AACD;;;eAED,0BAAiBC,qBAAjB,EAAwC;AAAA;;AACtC,cAAMC,UAAU,GAAGD,qBAAqB,CAACrB,EAAzC;AACA,cAAMuB,MAAM,GAAG,KAAKpB,wBAAL,CAA8BqB,IAA9B,CAAmC,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACzB,EAAL,KAAYsB,UAAhB;AAAA,WAAvC,CAAf;;AACA,cAAIC,MAAJ,EAAY;AACV,iBAAKpB,wBAAL,CAA8BuB,OAA9B,CAAsC,UAAAC,OAAO,EAAI;AAC/C,kBAAMF,IAAI,GAAGE,OAAb;;AACA,kBAAIF,IAAI,KAAKF,MAAb,EAAqB;AACnB,qBAAI,CAACpB,wBAAL,CAA8ByB,MAA9B,CAAqCL,MAArC,EAA6C,CAA7C;AACD;AACF,aALD;AAMD,WAPD,MAOO;AACL,iBAAKpB,wBAAL,CAA8B0B,IAA9B,CAAmCR,qBAAnC;AACD;AACF;;;eAEK,4BAAmB;;;;;;AACvB,uBAAKX,cAAL;AACMoB,4C,GAA6B,E;AACnC,uBAAK3B,wBAAL,CAA8BuB,OAA9B,CAAsC,UAAAC,OAAO,EAAI;AAC/CG,8CAA0B,CAACD,IAA3B,CAAgCF,OAAO,CAAC3B,EAAxC;AACD,mBAFD;AAGM+B,4B,GAAiC;AACrCC,uCAAmB,EAAEF,0BADgB;AAErCG,+BAAW,EAAE,KAAK1C,YAAL,CAAkB2C,SAFM;AAGrCC,yCAAqB,EAAE,KAAK1B,kBAAL,CAAwBG;AAHV,mB;;AAKX,yBAAM,KAAKnB,qBAAL,CAA2B2C,iBAA3B,CAA6CL,UAA7C,EAAyDlB,SAAzD,EAAN;;;AAAtBwB,qC;;AACN,sBAAIA,mBAAJ,EAAyB;AACvB,yBAAKC,YAAL,CAAkB,UAAlB,EAA8B,oDAA9B;AACA,yBAAKhC,cAAL;AACD,mBAHD,MAGO;AACL,yBAAKgC,YAAL,CAAkB,OAAlB,EAA2B,oDAA3B;AACD;;AACD,uBAAKvB,OAAL,CAAaC,OAAb;;;;;;;;AACD;;;eAEK,0BAAiB;;;;;;AACN,yBAAM,KAAK1B,WAAL,CAAiBiD,MAAjB,CAAwB;AAC3CC,wBAAI,EAAE,KADqC;AAE3CC,2BAAO,EAAE;AAFkC,mBAAxB,CAAN;;;AAAf,uBAAK1B,O;oDAIE,KAAKA,OAAL,CAAa2B,OAAb,E;;;;;;;;AACR;;;eAEK,sBAAaC,MAAb,EAAqBC,YAArB,EAAmC;;;;;;;AACzB,yBAAM,KAAKpD,eAAL,CAAqB+C,MAArB,CAA4B;AAC9CM,0BAAM,EAAEF,MADsC;AAE9CG,mCAAe,EAAE,KAF6B;AAG9CN,wBAAI,EAAE,KAHwC;AAI9CC,2BAAO,EAAEG,YAJqC;AAK9CG,2BAAO,EAAE,CAAC,SAAD;AALqC,mBAA5B,CAAN;;;AAARC,uB;AAQNA,uBAAK,CAACC,YAAN;;AAEA,yBAAMD,KAAK,CAACN,OAAN,EAAN;;;;;;;;AACD;;;;;;;uBAhIUrD,qB,EAAqB,iI,EAAA,2I,EAAA,+H,EAAA,kM,EAAA,iJ,EAAA,uH;AAAA,K;;;YAArBA,qB;AAAqB,6C;AAAA,e;AAAA,a;AAAA,itB;AAAA;AAAA;ADblC;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AAA0B;;AAAmB;;AAC/C;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAA6D;AAAA,mBAAa,IAAA6D,MAAA,QAAb;AAA2B,WAA3B;;AAA6B;;AAE1F;;AAwBA;;AA0DF;;;;AAlFyB;;AAAA;;AAwBb;;AAAA;;;;;;;;;;sEC/BC7D,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT8D,kBAAQ,EAAE,wBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q","file":"release-activities-release-activities-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ReleaseActivitiesPage } from './release-activities.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReleaseActivitiesPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReleaseActivitiesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ReleaseActivitiesPageRoutingModule } from './release-activities-routing.module';\n\nimport { ReleaseActivitiesPage } from './release-activities.page';\nimport { PipesModule } from '../../pipes/pipes.module';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, PipesModule, ReleaseActivitiesPageRoutingModule],\n  declarations: [ReleaseActivitiesPage],\n})\nexport class ReleaseActivitiesPageModule {}\n","<ion-header>\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"2\">\n        <ion-toolbar color=\"tertiary\">\n          <ion-buttons slot=\"start\">\n            <ion-back-button color=\"primary\" mode=\"md\" defaultHref=\"/\"></ion-back-button>\n          </ion-buttons>\n        </ion-toolbar>\n      </ion-col>\n      <ion-col size=\"10\">\n        <ion-title class=\"titulo\">Liberar Actividades</ion-title>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n  <ion-searchbar animated color=\"primary\" placeholder=\"Buscar\" (ionChange)=\"search($event)\"></ion-searchbar>\n\n  <ion-slides mode=\"ios\" *ngIf=\"listActivity.length === 0\">\n    <!-- <ion-slides mode=\"ios\" *ngIf=\"showListPendingVisit\"> -->\n    <ion-slide>\n      <ion-grid>\n        <ion-row>\n          <ion-col size=\"12\">\n            <div class=\"ion-text-center\">\n              <img class=\"imgIcono\" src=\"../../../assets/icon/icono_observaciones.svg\" alt=\"\" />\n            </div>\n          </ion-col>\n        </ion-row>\n        <ion-row>\n          <ion-col size=\"12\">\n            <strong>\n              <h1 class=\"tituloSlide\">\n                No tiene actividades para liberar, debes de migrar actividades desde la web para poderlas liberar.\n              </h1>\n            </strong>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-slide>\n  </ion-slides>\n\n  <ion-list *ngIf=\"listActivity.length > 0\">\n    <ion-row\n      class=\"ion-margin-bottom\"\n      *ngFor=\"let company of listActivity | searchCompanyList: textoBuscar : ['numeroDocumento', 'name']; let i = index\"\n    >\n      <ion-col size=\"12\">\n        <div class=\"ion-text-center\">\n          <div class=\"bold\">Nombre Empresa</div>\n          <div>{{company.name}}</div>\n        </div>\n        <div class=\"ion-text-center\">\n          <div class=\"bold\">Documento Identificaci√≥n</div>\n          <div>{{company.numeroDocumento}}</div>\n        </div>\n      </ion-col>\n      <ion-col size=\"12\" *ngFor=\"let activity of company.listaActividadesMigradas; let j = index\">\n        <ion-card mode=\"ios\">\n          <ion-card-content mode=\"ios\">\n            <ion-list>\n              <ion-item lines=\"none\">\n                <ion-grid>\n                  <ion-row>\n                    <ion-col size=\"12\">\n                      <ion-label><strong>c√≥digo actividad</strong></ion-label>\n                    </ion-col>\n                  </ion-row>\n                  <ion-row>\n                    <ion-col size=\"12\">\n                      <p>{{activity.idActividad}}</p>\n                    </ion-col>\n                  </ion-row>\n                  <ion-row>\n                    <ion-col size=\"12\">\n                      <ion-label><strong>Descripci√≥n actividad</strong></ion-label>\n                    </ion-col>\n                  </ion-row>\n                  <ion-row>\n                    <ion-col size=\"12\">\n                      <p>{{activity.descripcionActividad}}</p>\n                    </ion-col>\n                  </ion-row>\n                </ion-grid>\n              </ion-item>\n              <ion-item lines=\"none\">\n                <ion-label><strong>Seleccionar actividad</strong></ion-label>\n                <ion-checkbox slot=\"end\" [value]=\"isSelectecActivity\" color=\"primary\" (click)=\"activitySelected(activity)\"></ion-checkbox>\n              </ion-item>\n            </ion-list>\n          </ion-card-content>\n        </ion-card>\n      </ion-col>\n    </ion-row>\n    <ion-row>\n      <ion-col size=\"12\">\n        <ion-button (click)=\"liberarActividad()\" expand=\"block\" color=\"primary\"> Liberar actividad </ion-button>\n      </ion-col>\n    </ion-row>\n  </ion-list>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { ActivityListCompanyService } from '../../services/activities/activityListCompany/activity-list-company.service';\nimport { liberarActividades } from '../../intarfaces/interfaces';\nimport { CacheService } from '../../services/cache/cache.service';\nimport { NetworkService } from '../../services/network/network.service';\n\n@Component({\n  selector: 'app-release-activities',\n  templateUrl: './release-activities.page.html',\n  styleUrls: ['./release-activities.page.scss'],\n})\nexport class ReleaseActivitiesPage implements OnInit {\n  response: any[] = [\n    {\n      numeroDocumento: '123456',\n      name: 'Coca cola',\n      listaActividades: [\n        {\n          id: 1,\n          codigo: 'Codigo 1',\n        },\n        {\n          id: 2,\n          codigo: 'Codigo 2',\n        },\n      ],\n    },\n    {\n      numeroDocumento: '789012',\n      name: 'ADA',\n      listaActividades: [\n        {\n          id: 3,\n          codigo: 'Codigo 3',\n        },\n      ],\n    },\n  ];\n\n  listActivity: any[] = [];\n\n  textoBuscar: string;\n\n  lines: string;\n\n  actividadesSeleccionadas: any[] = [];\n\n  isSelectecActivity = false;\n\n  loading: any;\n\n  informacionUsuario: any;\n\n  constructor(\n    private loadingCtlr: LoadingController,\n    private cacheService: CacheService,\n    private alertController: AlertController,\n    private listActivitiesCompany: ActivityListCompanyService,\n    private net: NetworkService,\n    private storage: Storage\n  ) {\n    this.lines = 'none';\n  }\n\n  ionViewWillEnter() {\n    this.listActivities();\n    this.net.showIPAddress();\n  }\n\n  ngOnInit() {}\n\n  async listActivities() {\n    this.informacionUsuario = await this.storage.get('sesion');\n    this.presentLoading();\n    const actividades = await this.listActivitiesCompany.listActivityForCompany(this.informacionUsuario.idPersona).toPromise();\n    this.listActivity = actividades.listActivitiesCompany;\n    this.loading.dismiss();\n  }\n\n  search(event) {\n    this.textoBuscar = event.detail.value;\n  }\n\n  activitySelected(actividadSeleccionada) {\n    const idSelected = actividadSeleccionada.id;\n    const existe = this.actividadesSeleccionadas.find(item => item.id === idSelected);\n    if (existe) {\n      this.actividadesSeleccionadas.forEach(element => {\n        const item = element;\n        if (item === existe) {\n          this.actividadesSeleccionadas.splice(existe, 1);\n        }\n      });\n    } else {\n      this.actividadesSeleccionadas.push(actividadSeleccionada);\n    }\n  }\n\n  async liberarActividad() {\n    this.presentLoading();\n    const idActividadesSeleccionadas = [];\n    this.actividadesSeleccionadas.forEach(element => {\n      idActividadesSeleccionadas.push(element.id);\n    });\n    const objLiberar: liberarActividades = {\n      ListaIdsActividades: idActividadesSeleccionadas,\n      direccionIP: this.cacheService.ipAddress,\n      CedulaUsuarioModifica: this.informacionUsuario.idPersona,\n    };\n    const siLiberoActividades = await this.listActivitiesCompany.liberarActivities(objLiberar).toPromise();\n    if (siLiberoActividades) {\n      this.notification('Atenci√≥n', 'Se logr√≥ liberar la(s) actividad(es) seleccionadas');\n      this.listActivities();\n    } else {\n      this.notification('Error', 'Ocurrio un error al tratar de liberar la actividad');\n    }\n    this.loading.dismiss();\n  }\n\n  async presentLoading() {\n    this.loading = await this.loadingCtlr.create({\n      mode: 'ios',\n      message: 'Cargando',\n    });\n    return this.loading.present();\n  }\n\n  async notification(titulo, notificacion) {\n    const alert = await this.alertController.create({\n      header: titulo,\n      backdropDismiss: false,\n      mode: 'ios',\n      message: notificacion,\n      buttons: ['ACEPTAR'],\n    });\n\n    alert.onDidDismiss();\n\n    await alert.present();\n  }\n}\n"]}