{"version":3,"sources":["webpack:///src/app/pages/company-info/company-info-routing.module.ts","webpack:///src/app/pages/company-info/company-info.module.ts","webpack:///src/app/pages/company-info/company-info.page.html","webpack:///src/app/pages/company-info/company-info.page.ts"],"names":["routes","path","component","loadChildren","then","m","CommentsPageModule","CompanyInfoPageRoutingModule","forChild","imports","exports","CompanyInfoPageModule","declarations","CompanyInfoPage","formBuilder","geolocation","cacheService","storage","alertController","router","infoCompany","departments","cities","getCities","COMMENTS_PATH","RECOMMENDATION_PATH","JSON","parse","sessionStorage","companySelected","get","departamento","detail","value","departamentoDescripcion","changeDepartment","createFormInfoCompany","getSaveInfoCompany","formInfoCompany","patchValue","addressCompany","direccion","phoneContact","telefonoContacto","Department","municipality","minicipioDescripcion","latitud","longitud","controls","locationCompany","setValue","group","required","getCurrentPosition","response","coords","latitude","longitude","error","code","clearValidators","updateValueAndValidity","create","header","backdropDismiss","mode","message","buttons","alert","present","event","departmentSelected","result","filter","x","NombreDepartamento","invalid","showAlertInfoCompany","depart","find","dep","Nombre","departId","IdDepartamento","munic","municipioId","IdMunicipio","coordenadas","split","infoCompanySelected","nombre","name","tipoDocumento","tipoDocumentoDescripcion","numeroDocumento","telefono","emailContacto","emailContact","departamentoId","municipio","saveInfoCompany","getNextPage","navigateByUrl","actividadesSeleccionadas","activitiesSelectedForExec","found","a","siniestro","id","next","selector","templateUrl","styleUrls"],"mappings":"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","file":"company-info-company-info-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CompanyInfoPage } from './company-info.page';\nconst routes: Routes = [\n  {\n    path: '',\n    component: CompanyInfoPage,\n  },\n  {\n    path: 'comments',\n    loadChildren: () => import('../comments/comments.module').then(m => m.CommentsPageModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CompanyInfoPageRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { CompanyInfoPageRoutingModule } from './company-info-routing.module';\nimport { CompanyInfoPage } from './company-info.page';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, IonicModule, CompanyInfoPageRoutingModule],\n  declarations: [CompanyInfoPage],\n})\nexport class CompanyInfoPageModule {}\n","<ion-header>\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"2\">\n        <ion-toolbar color=\"tertiary\">\n          <ion-buttons slot=\"start\">\n            <ion-back-button color=\"primary\" mode=\"md\" defaultHref=\"/\"></ion-back-button>\n          </ion-buttons>\n        </ion-toolbar>\n      </ion-col>\n      <ion-col size=\"10\">\n        <ion-title class=\"titulo\">Información de la empresa</ion-title>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-header>\n\n<ion-content>\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"12\">\n        <strong><ion-label class=\"ion-text-center bold\" position=\"stacked\" *ngIf=\"infoCompany\">{{infoCompany.name}}</ion-label></strong>\n      </ion-col>\n    </ion-row>\n    <ion-row>\n      <ion-col size=\"12\">\n        <strong>\n          <ion-label class=\"ion-text-center bold\" position=\"stacked\" *ngIf=\"infoCompany\"\n            >{{infoCompany.tipoDocumentoDescripcion}} {{infoCompany.numeroDocumento}}</ion-label\n          >\n        </strong>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n\n  <ion-list lines=\"none\">\n    <form [formGroup]=\"formInfoCompany\" *ngIf=\"formInfoCompany\">\n      <!-- Dirección de la empresa -->\n      <ion-item class=\"p-0 mt-3\">\n        <ion-label position=\"stacked\">Dirección donde se realiza la asesoría</ion-label>\n        <ion-input formControlName=\"addressCompany\" class=\"bg-light mt-3 rounded pl-1 pr-1\"></ion-input>\n      </ion-item>\n\n      <!-- Coordenadas de la ubicación de la empresa -->\n      <ion-item class=\"p-0 mt-3\">\n        <ion-label position=\"stacked\">Ubicación donde se realiza la asesoría</ion-label>\n        <ion-grid class=\"m-0 w-100 p-0\">\n          <ion-row>\n            <ion-col size=\"10\">\n              <ion-input class=\"bg-light mt-3 rounded pl-1 pr-1\" readonly formControlName=\"locationCompany\"></ion-input>\n            </ion-col>\n            <!-- <ion-col size=\"2\"> -->\n            <!-- <ion-button class=\"iconButton\" (click)=\"getGeolocation()\" expand=\"block\" color=\"primary\"> -->\n            <!-- <ion-icon name=\"locate-outline\"></ion-icon> -->\n            <!-- <img src=\"../../../assets/icon/GPS.svg\" alt=\"gps\"> -->\n            <!-- </ion-button> -->\n            <!-- </ion-col> -->\n\n            <ion-col size=\"2\">\n              <!-- <ion-icon name=\"locate-outline\"></ion-icon> -->\n              <img src=\"../../../assets/icon/GPS.svg\" (click)=\"getGeolocation()\" alt=\"gps\" />\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </ion-item>\n\n      <!-- Teléfonos de contacto de la empresa -->\n      <ion-item class=\"p-0 mt-3\">\n        <ion-label position=\"stacked\">Teléfonos de contacto</ion-label>\n        <ion-input class=\"bg-light mt-3 rounded pl-1 pr-1\" type=\"number\" inputmode=\"numeric\" formControlName=\"phoneContact\"></ion-input>\n      </ion-item>\n\n      <!-- Departamento de la dirección de la empresa -->\n      <ion-item class=\"p-0 mt-3\">\n        <ion-label position=\"stacked\">Departamento</ion-label>\n        <!-- <ion-input class=\"bg-light mt-3 rounded pl-1 pr-1\" formControlName=\"Department\"></ion-input> -->\n        <ion-select\n          placeholder=\"Departamento\"\n          type=\"text\"\n          class=\"bg-light mt-3 rounded pl-1 pr-1\"\n          name=\"department\"\n          id=\"department\"\n          mode=\"ios\"\n          interface=\"action-sheet\"\n          cancelText=\"CANCELAR\"\n          (ionChange)=\"changeDepartment($event)\"\n          formControlName=\"Department\"\n        >\n          <ion-select-option [value]=\"department.Nombre\" *ngFor=\"let department of departments\">{{department.Nombre}}</ion-select-option>\n        </ion-select>\n      </ion-item>\n\n      <!-- Ciudad o municipio de la dirección de la empresa -->\n      <ion-item class=\"p-0 mt-3\">\n        <ion-label position=\"stacked\">Ciudad/Municipio</ion-label>\n        <!-- <ion-input class=\"bg-light mt-3 rounded pl-1 pr-1\"\n                 formControlName=\"municipality\"></ion-input> -->\n        <ion-select\n          placeholder=\"Municipio/ciudad\"\n          type=\"text\"\n          class=\"bg-light mt-3 rounded pl-1 pr-1\"\n          name=\"municipality\"\n          mode=\"ios\"\n          interface=\"action-sheet\"\n          cancelText=\"CANCELAR\"\n          id=\"municipality\"\n          formControlName=\"municipality\"\n        >\n          <ion-select-option [value]=\"municipality.Nombre\" *ngFor=\"let municipality of getCities\"\n            >{{municipality.Nombre}}</ion-select-option\n          >\n        </ion-select>\n      </ion-item>\n    </form>\n  </ion-list>\n  <!-- Botón de continuar -->\n  <div class=\"ion-text-center\">\n    <ion-button color=\"primary\" mode=\"ios\" expand=\"small\" class=\"btn\" (click)=\"next()\">Continuar</ion-button>\n  </div>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { AlertController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { CacheService } from '../../services/cache/cache.service';\n\n@Component({\n  selector: 'app-company-info',\n  templateUrl: './company-info.page.html',\n  styleUrls: ['./company-info.page.scss'],\n})\nexport class CompanyInfoPage implements OnInit {\n  infoCompany: any = {};\n\n  formInfoCompany: FormGroup;\n\n  coords: string;\n\n  // departments = DEPARTMENTS;\n  departments = [];\n\n  // cities = CITIES;\n  cities = [];\n\n  getCities: any[] = [];\n\n  /**\n   * Ruta de la vista de comentarios.\n   */\n  private readonly COMMENTS_PATH = '/u/execLog/pending-visits/visit-id/company-info/comments';\n\n  /**\n   * Ruta de la vista de recomendaciones.\n   */\n  private readonly RECOMMENDATION_PATH = '/u/execLog/pending-visits/visit-id/recommendation';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private geolocation: Geolocation,\n    private cacheService: CacheService,\n    private storage: Storage,\n    public alertController: AlertController,\n    private router: Router\n  ) {}\n\n  async ionViewWillEnter() {\n    this.infoCompany = JSON.parse(sessionStorage.companySelected);\n    this.departments = await this.storage.get('departamentos');\n    this.cities = await this.storage.get('municipios');\n    const departamento = {\n      detail: {\n        value: this.infoCompany.departamentoDescripcion,\n      },\n    };\n    this.changeDepartment(departamento);\n  }\n\n  ionViewDidEnter() {\n    this.createFormInfoCompany();\n    const infoCompany = this.cacheService.getSaveInfoCompany();\n\n    this.formInfoCompany.patchValue({\n      addressCompany: this.infoCompany.direccion,\n      phoneContact: this.infoCompany.telefonoContacto,\n      Department: this.infoCompany.departamentoDescripcion,\n      municipality: this.infoCompany.minicipioDescripcion,\n    });\n\n    if (!!infoCompany.latitud && !!infoCompany.longitud) {\n      this.formInfoCompany.controls.locationCompany.setValue(`${infoCompany.latitud},${infoCompany.longitud}`);\n    }\n  }\n\n  ngOnInit() {}\n\n  createFormInfoCompany() {\n    this.formInfoCompany = this.formBuilder.group({\n      addressCompany: ['', Validators.required],\n      phoneContact: ['', Validators.required],\n      Department: ['', Validators.required],\n      municipality: ['', Validators.required],\n      locationCompany: ['', Validators.required],\n    });\n  }\n\n  getGeolocation() {\n    this.geolocation\n      .getCurrentPosition()\n      .then(response => {\n        this.coords = response.coords.latitude + ',' + response.coords.longitude;\n        this.formInfoCompany.controls.locationCompany.setValue(this.coords);\n      })\n      .catch(async error => {\n        if (error.code === 1) {\n          // Si se produce un error de este tipo es porque se está intentando acceder al servicio\n          // de ubicación desde un origen inseguro. Se asume que entonces se está ejecutando la aplicación\n          // desde el servidor de desarrollo de Ionic. A continuación se invalida la obligatoriedad para\n          // este campo\n\n          this.formInfoCompany.controls.locationCompany.clearValidators();\n          this.formInfoCompany.controls.locationCompany.updateValueAndValidity();\n\n          return;\n        }\n\n        const alert = await this.alertController.create({\n          header: 'Atención',\n          backdropDismiss: false,\n          mode: 'ios',\n          message: 'No se ha podido determinar la ubicación de su dispositivo. Intente nuevamente.',\n          buttons: ['ACEPTAR'],\n        });\n\n        alert.present();\n      });\n  }\n\n  changeDepartment(event) {\n    const departmentSelected = event.detail.value;\n    this.getCities = [];\n    const result = this.cities.filter(x => x.NombreDepartamento === departmentSelected);\n    this.getCities = result;\n  }\n\n  async showAlertInfoCompany() {\n    const alert = await this.alertController.create({\n      mode: 'ios',\n      header: 'Alerta',\n      message: 'Todos los campos son obligatorios.',\n      buttons: ['ACEPTAR'],\n    });\n\n    await alert.present();\n  }\n\n  next() {\n    if (this.formInfoCompany.invalid) {\n      this.showAlertInfoCompany();\n\n      return;\n    }\n\n    const depart = this.departments.find(dep => dep.Nombre === this.formInfoCompany.value.Department);\n    const departId = depart.IdDepartamento;\n    const munic = this.cities.find(munic => munic.NombreDepartamento === this.formInfoCompany.value.Department);\n    const municipioId = munic.IdMunicipio;\n    const coordenadas = this.formInfoCompany.value.locationCompany.split(',');\n\n    const infoCompanySelected = {\n      nombre: this.infoCompany.name,\n      tipoDocumento: this.infoCompany.tipoDocumentoDescripcion,\n      numeroDocumento: this.infoCompany.numeroDocumento,\n      direccion: this.formInfoCompany.value.addressCompany,\n      latitud: coordenadas[0],\n      longitud: coordenadas[1],\n      telefono: this.formInfoCompany.value.phoneContact,\n      emailContacto: this.formInfoCompany.value.emailContact,\n      departamento: this.formInfoCompany.value.Department,\n      departamentoId: departId,\n      municipio: this.formInfoCompany.value.municipality,\n      municipioId: municipioId,\n    };\n\n    this.cacheService.saveInfoCompany(infoCompanySelected);\n    const path = this.getNextPage();\n    this.router.navigateByUrl(path);\n  }\n\n  /**\n   * Determina la ruta de la siguiente página de acuerdo a si en el conjunto de actividades\n   * seleccionada existe alguna con recomendaciones, por lo que hay que mostrar el formulario\n   * de recomendaciones. De no existir ninguna, sigue a la vista de comentarios de la visita.\n   */\n  private getNextPage(): string {\n    const actividadesSeleccionadas = this.cacheService.activitiesSelectedForExec;\n    const found = actividadesSeleccionadas.find(a => a.siniestro);\n    const path = found ? `${this.RECOMMENDATION_PATH}/${found.id}` : this.COMMENTS_PATH;\n\n    return path;\n  }\n}\n"]}