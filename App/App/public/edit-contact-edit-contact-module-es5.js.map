{"version":3,"sources":["webpack:///src/app/pages/companies/edit-contact/edit-contact-routing.module.ts","webpack:///src/app/pages/companies/edit-contact/edit-contact.module.ts","webpack:///src/app/pages/companies/edit-contact/edit-contact.page.html","webpack:///src/app/pages/companies/edit-contact/edit-contact.page.ts"],"names":["routes","path","component","EditContactPageRoutingModule","forChild","imports","exports","EditContactPageModule","declarations","EditContactPage","navbarService","route","companiesService","router","alertCtrl","EMAIL_REGEX","TIPOS_REPRESENTACION","label","value","TIPOS_DOCUMENTO","TIPOS_SEXO","setVisibility","formGroup","undefined","getCompany","invalid","create","header","mode","message","buttons","alert","present","contacto","strPapelRespresentacion","representacion","strSiglaTipoDoc","tipoDocumento","strNumeroDocumento","numeroDocumento","strPrimerNombre","primerNombre","strSegundoNombre","segundoNombre","strPrimerApellido","primerApellido","strSegundoApellido","segundoApellido","strSexo","sexo","strCelular","celular","strTelefono","telefono","strEmail","correo","intTipoDocumento","contactos","company","listaPersonasContacto","index","findIndex","c","push","updated","__updated","found","find","m","cancel","id","snapshot","params","navigate","replaceUrl","prepareCompany","initForm","contact","getCurrentContact","r","representacionControl","required","d","tipoDocumentoControl","numeroDocumentoControl","primerNombreControl","segundoNombreControl","primerApellidoControl","segundoApellidoControl","s","sexoControl","correoControl","pattern","celularControl","telefonoControl","documento","queryParams","selector","templateUrl","styleUrls"],"mappings":"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","file":"edit-contact-edit-contact-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditContactPage } from './edit-contact.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditContactPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditContactPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditContactPageRoutingModule } from './edit-contact-routing.module';\n\nimport { EditContactPage } from './edit-contact.page';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, ReactiveFormsModule, EditContactPageRoutingModule],\n  declarations: [EditContactPage],\n})\nexport class EditContactPageModule {}\n","<ion-header>\n  <ion-toolbar>\n    <div class=\"title\">Actualización Persona Contacto Empresa</div>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <form [formGroup]=\"formGroup\" (ngSubmit)=\"save()\" *ngIf=\"formGroup\">\n    <ion-card class=\"ion-margin\">\n      <ion-card-content>\n        <ion-list lines=\"none\">\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Papel/Representación</ion-label>\n            <ion-select mode=\"ios\" interface=\"action-sheet\" cancelText=\"CANCELAR\" formControlName=\"representacion\">\n              <ion-select-option [value]=\"t\" *ngFor=\"let t of TIPOS_REPRESENTACION\"> {{ t.label }} </ion-select-option>\n            </ion-select>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.representacion.hasError('required')\">Representación es obligatorio.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Tipo Documento</ion-label>\n            <ion-select mode=\"ios\" interface=\"action-sheet\" cancelText=\"CANCELAR\" formControlName=\"tipoDocumento\">\n              <ion-select-option [value]=\"t\" *ngFor=\"let t of TIPOS_DOCUMENTO\"> {{ t.label }} </ion-select-option>\n            </ion-select>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.tipoDocumento.hasError('required')\">Tipo documento es obligatorio.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Número Documento</ion-label>\n            <ion-input formControlName=\"numeroDocumento\"></ion-input>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.numeroDocumento.hasError('required')\">Número documento es obligatorio.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Primer Nombre</ion-label>\n            <ion-input formControlName=\"primerNombre\"></ion-input>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.primerNombre.hasError('required')\">Primer nombre es obligatorio.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Segundo Nombre</ion-label>\n            <ion-input formControlName=\"segundoNombre\"></ion-input>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Primer Apellido</ion-label>\n            <ion-input formControlName=\"primerApellido\"></ion-input>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.primerApellido.hasError('required')\">Primer apellido es obligatorio.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Segundo Apellido</ion-label>\n            <ion-input formControlName=\"segundoApellido\"></ion-input>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Sexo</ion-label>\n            <ion-select mode=\"ios\" interface=\"action-sheet\" cancelText=\"CANCELAR\" formControlName=\"sexo\">\n              <ion-select-option [value]=\"t\" *ngFor=\"let t of TIPOS_SEXO\"> {{ t.label }} </ion-select-option>\n            </ion-select>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.sexo.hasError('required')\">Sexo es obligatorio.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Email Notificación</ion-label>\n            <ion-input type=\"email\" formControlName=\"correo\"></ion-input>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.correo.hasError('required')\">Email notificación es obligatorio.</p>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.correo.hasError('pattern')\">Email notificación es inválido.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Celular</ion-label>\n            <ion-input type=\"tel\" formControlName=\"celular\"></ion-input>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.celular.hasError('required')\">Celular es obligatorio.</p>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.celular.hasError('pattern')\">Celular es inválido.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Teléfono Notificación</ion-label>\n            <ion-input type=\"tel\" formControlName=\"telefono\"></ion-input>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.telefono.hasError('required')\">Teléfono notificación es obligatorio.</p>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.telefono.hasError('pattern')\">Teléfono notificación es inválido.</p>\n          </ion-item>\n        </ion-list>\n\n        <div class=\"actions-wrapper ion-margin-top\">\n          <ion-button color=\"light\" (click)=\"cancel()\">Cancelar</ion-button>\n          <ion-button type=\"submit\" color=\"primary\">Actualizar</ion-button>\n        </div>\n      </ion-card-content>\n    </ion-card>\n  </form>\n</ion-content>\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { CompaniesService } from 'src/app/services/companies/companies.service';\nimport { NavbarService } from '../../navbar/navbar.service';\n\n/**\n * Controlador de la vista de edición de contacto.\n */\n@Component({\n  selector: 'app-edit-contact',\n  templateUrl: './edit-contact.page.html',\n  styleUrls: ['./edit-contact.page.scss'],\n})\nexport class EditContactPage {\n  /**\n   * Formulario.\n   */\n  formGroup: FormGroup;\n\n  /**\n   * Compañía actual.\n   */\n  company: any;\n\n  /**\n   * Expresión regular para validar correos electrónicos.\n   */\n  readonly EMAIL_REGEX = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n  /**\n   * Tipos de papel o representación.\n   */\n  readonly TIPOS_REPRESENTACION = [\n    { label: 'Representante Legal', value: 'Representante Legal' },\n    { label: 'Reponsable SG-SST', value: 'Reponsable SG-SST' },\n    { label: 'COPASST', value: 'COPASST' },\n    { label: 'Talento Humano', value: 'Talento Humano' },\n  ];\n\n  /**\n   * Tipos de documento.\n   */\n  readonly TIPOS_DOCUMENTO = [\n    { label: 'CC', value: '1' },\n    { label: 'NI', value: '2' },\n    { label: 'CE', value: '3' },\n    { label: 'NU', value: '4' },\n    { label: 'PA', value: '5' },\n    { label: 'TI', value: '6' },\n    { label: 'PE', value: '7' },\n    { label: 'PT', value: '8' }\n  ];\n\n  /**\n   * Tipos de sexo.\n   */\n  readonly TIPOS_SEXO = [\n    { label: 'Masculino', value: 'Masculino' },\n    { label: 'Femenino', value: 'Femenino' },\n  ];\n\n  constructor(\n    private navbarService: NavbarService,\n    private route: ActivatedRoute,\n    private companiesService: CompaniesService,\n    private router: Router,\n    private alertCtrl: AlertController\n  ) {}\n\n  ionViewWillEnter(): void {\n    this.navbarService.setVisibility(false);\n    this.formGroup = undefined;\n    this.getCompany();\n  }\n\n  ionViewWillLeave(): void {\n    this.navbarService.setVisibility(true);\n  }\n\n  /**\n   * Guarda los cambios.\n   */\n  async save(): Promise<void> {\n    if (this.formGroup.invalid) {\n      const alert = await this.alertCtrl.create({\n        header: 'Atención',\n        mode: 'ios',\n        message: 'Compruebe el correcto diligenciamiento de TODOS los campos obligatorios.',\n        buttons: ['ACEPTAR'],\n      });\n\n      await alert.present();\n\n      return;\n    }\n\n    const value = this.formGroup.value;\n\n    const contacto = {\n      strPapelRespresentacion: value.representacion.value,\n      strSiglaTipoDoc: value.tipoDocumento.label,\n      strNumeroDocumento: value.numeroDocumento,\n      strPrimerNombre: value.primerNombre,\n      strSegundoNombre: value.segundoNombre,\n      strPrimerApellido: value.primerApellido,\n      strSegundoApellido: value.segundoApellido,\n      strSexo: value.sexo.value,\n      strCelular: value.celular,\n      strTelefono: value.telefono,\n      strEmail: value.correo,\n      intTipoDocumento: value.tipoDocumento.value,\n    };\n\n    const contactos = this.company.listaPersonasContacto ?? [];\n    const index = contactos.findIndex((c: any) => c.strNumeroDocumento === contacto.strNumeroDocumento);\n\n    if (index > -1) {\n      contactos[index] = contacto;\n    } else {\n      contactos.push(contacto);\n    }\n\n    this.company.listaPersonasContacto = contactos;\n\n    const updated = this.company.__updated ?? [];\n    const found = updated.find((m: string) => m === 'contact-data');\n\n    if (!found) {\n      updated.push('contact-data');\n      this.company.__updated = updated;\n    }\n\n    this.cancel();\n  }\n\n  /**\n   * Cancela la edición de la empresa.\n   */\n  cancel(): void {\n    const id = this.route.snapshot.params.id;\n    this.router.navigate([`/u/companies/list/${id}/contact-list`], { replaceUrl: true });\n  }\n\n  /**\n   * Establece la empresa de la vista de edición de datos de empresa.\n   */\n  private async getCompany(): Promise<void> {\n    const id = +this.route.snapshot.params.id;\n\n    try {\n      this.company = await this.companiesService.prepareCompany(id);\n    } catch {\n      this.company = this.companiesService.company;\n    }\n\n    if (!this.company) {\n      this.cancel();\n\n      return;\n    }\n\n    this.initForm();\n  }\n\n  /**\n   * Inicializa el formulario.\n   */\n  private initForm(): void {\n    const contact = this.getCurrentContact();\n\n    const representacion = this.TIPOS_REPRESENTACION.find(r => r.value === contact.strPapelRespresentacion);\n    const representacionControl = new FormControl(representacion, [Validators.required]);\n\n    const tipoDocumento = this.TIPOS_DOCUMENTO.find(d => d.value === contact.intTipoDocumento);\n    const tipoDocumentoControl = new FormControl(tipoDocumento, [Validators.required]);\n\n    const numeroDocumentoControl = new FormControl(contact.strNumeroDocumento, [Validators.required]);\n    const primerNombreControl = new FormControl(contact.strPrimerNombre, [Validators.required]);\n    const segundoNombreControl = new FormControl(contact.strSegundoNombre);\n    const primerApellidoControl = new FormControl(contact.strPrimerApellido, [Validators.required]);\n    const segundoApellidoControl = new FormControl(contact.strSegundoApellido);\n\n    const sexo = this.TIPOS_SEXO.find(s => s.value === contact.strSexo);\n    const sexoControl = new FormControl(sexo, [Validators.required]);\n\n    const correoControl = new FormControl(contact.strEmail, [Validators.required, Validators.pattern(this.EMAIL_REGEX)]);\n    const celularControl = new FormControl(contact.strCelular, [Validators.required, Validators.pattern(/^3\\d{9}$/)]);\n    const telefonoControl = new FormControl(contact.strTelefono, [Validators.required, Validators.pattern(/^\\d{7,10}$/)]);\n\n    this.formGroup = new FormGroup({\n      representacion: representacionControl,\n      tipoDocumento: tipoDocumentoControl,\n      numeroDocumento: numeroDocumentoControl,\n      primerNombre: primerNombreControl,\n      segundoNombre: segundoNombreControl,\n      primerApellido: primerApellidoControl,\n      segundoApellido: segundoApellidoControl,\n      sexo: sexoControl,\n      correo: correoControl,\n      celular: celularControl,\n      telefono: telefonoControl,\n    });\n  }\n\n  /**\n   * Obtiene el contacto que se va a editar, si se trata de una edición.\n   */\n  private getCurrentContact(): any {\n    const documento = this.route.snapshot.queryParams.id;\n\n    if (!documento) {\n      return {};\n    }\n\n    const contactos = this.company.listaPersonasContacto ?? [];\n    const contacto = contactos.find((c: any) => c.strNumeroDocumento === documento);\n\n    return contacto || {};\n  }\n}\n"]}