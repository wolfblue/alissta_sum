{"version":3,"sources":["./src/app/pages/exec-log/exec-log-routing.module.ts","./src/app/pages/exec-log/exec-log.module.ts","./src/app/pages/exec-log/exec-log.page.ts","./src/app/pages/exec-log/exec-log.page.html","./src/app/services/menu-configuracion.service.ts"],"names":[],"mappings":"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","file":"exec-log-exec-log-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ExecLogPage } from './exec-log.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExecLogPage,\n  },\n  {\n    path: 'pending-visits',\n    loadChildren: () => import('../pending-visits/pending-visits.module').then(m => m.PendingVisitsPageModule),\n  },\n  {\n    path: 'tasks-to-send',\n    loadChildren: () => import('../tasks-to-send/tasks-to-send.module').then(m => m.TasksToSendPageModule),\n  },\n  {\n    path: 'releaseActivities',\n    loadChildren: () => import('../release-activities/release-activities.module').then(m => m.ReleaseActivitiesPageModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExecLogPageRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ExecLogPageRoutingModule } from './exec-log-routing.module';\nimport { ExecLogPage } from './exec-log.page';\nimport { ComponentsModule } from '../../components/components.module';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, ComponentsModule, ExecLogPageRoutingModule],\n  declarations: [ExecLogPage],\n})\nexport class ExecLogPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MenuConfiguracionService } from '../../services/menu-configuracion.service';\nimport { Observable } from 'rxjs';\nimport { Storage } from '@ionic/storage';\nimport { ModalController } from '@ionic/angular';\nimport { ResendVerificationCodeComponent } from '../../components/resend-verification-code/resend-verification-code.component';\n\n/**\n * Componente para la vista de registro de ejecución.\n */\n@Component({\n  selector: 'app-exec-log',\n  templateUrl: './exec-log.page.html',\n  styleUrls: ['./exec-log.page.scss'],\n})\nexport class ExecLogPage implements OnInit {\n  /**\n   * Array de opciones del menú de ejecución de actividades\n   */\n  optMenuOptions: Observable<any[]>;\n\n  /**\n   * Array de opciones del menú de ayuda de ejecución de actividades\n   */\n  optMenuHelpOptions: Observable<any[]>;\n\n  /**\n   * Variable que contiene el nombre del usuario ingresado.\n   */\n  nameUserRegister: string;\n\n  constructor(\n    private menuConfOptions: MenuConfiguracionService,\n    private modalCtrl: ModalController,\n    private storage: Storage\n  ) {}\n\n  ngOnInit() {\n    this.optMenuOptions = this.menuConfOptions.getMenuExceActivities();\n    this.optMenuHelpOptions = this.menuConfOptions.getMenuHelpExceActivities();\n    this.uploadInfoUser();\n  }\n\n  optionSelectedMenu(itemSelected) {\n    switch (itemSelected.title) {\n      case 'Visitas pendientes':\n        break;\n      case 'Tareas por enviar':\n        break;\n      case 'Liberar actividades':\n        break;\n      case 'Recordar código':\n        this.showResendVerificationCode();\n        break;\n      case 'Ayuda PDF':\n        break;\n      case 'Instructivo':\n        break;\n      default:\n        break;\n    }\n  }\n\n  async uploadInfoUser() {\n    const nameUser = await this.storage.get('sesion');\n    const nombreCompleto = nameUser.nombre1 + ' ' + nameUser.apellido1;\n    this.nameUserRegister = nombreCompleto;\n  }\n\n  async showResendVerificationCode() {\n    const modal = await this.modalCtrl.create({\n      component: ResendVerificationCodeComponent,\n    });\n\n    return await modal.present();\n  }\n}\n","<app-header></app-header>\n\n<ion-content class=\"backgroundContent\">\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"4\" *ngFor=\"let menuOpt of optMenuOptions | async; let i = index\">\n        <ion-card mode=\"ios\" (click)=\"optionSelectedMenu(menuOpt)\" [routerLink]=\"menuOpt.redirecTo\">\n          <div class=\"vertical-center\">\n            <div class=\"center\">\n              <img [src]=\"menuOpt.icon\" alt=\"\" />\n            </div>\n          </div>\n          <ion-label>\n            <h4 class=\"tituloOpcion\">{{menuOpt.title}}</h4>\n          </ion-label>\n        </ion-card>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"4\" (click)=\"optionSelectedMenu(menuOptHelp)\" *ngFor=\"let menuOptHelp of optMenuHelpOptions | async; let i = index\">\n        <div class=\"vertical-center\">\n          <div class=\"center\">\n            <img [src]=\"menuOptHelp.icon\" alt=\"\" />\n          </div>\n        </div>\n        <ion-label>\n          <h4 class=\"tituloOpcion\">{{menuOptHelp.title}}</h4>\n        </ion-label>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MenuConfiguracionService {\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Este metodo permite hacer la petición al archivo donde estan las opciones para el menú de\n   * la vista de configuración\n   */\n  getMenuOpts() {\n    return this.http.get<any[]>('/assets/data/menuConfiguracion.json');\n  }\n\n  /**\n   * Este método permite consultar las opciones que existen en el menú principal home.page.html\n   */\n  getMenuMain() {\n    return this.http.get<any[]>('/assets/data/menuPrincipal-prod.json');\n  }\n\n  /**\n   * Este método permite consultar las opciones que existen en el menú de ejecución de\n   * actividades\n   */\n  getMenuExceActivities() {\n    return this.http.get<any[]>('/assets/data/menuExecuteActi.json');\n  }\n\n  /**\n   * Este método permitre consultar las opciones de ayuda en el menú de ejecución de\n   * actividades\n   */\n\n  getMenuHelpExceActivities() {\n    return this.http.get<any[]>('/assets/data/menuHelpExecuteActi.json');\n  }\n\n  /**\n   * Este método permite consultar las opciones cuando se selecciona una visita\n   */\n  getMenuActivitySelected() {\n    return this.http.get<any[]>('/assets/data/menuVisitActivity.json');\n  }\n}\n"],"sourceRoot":"webpack:///"}