{"version":3,"sources":["webpack:///src/app/pages/companies/details/details-routing.module.ts","webpack:///src/app/pages/companies/details/details.module.ts","webpack:///src/app/pages/companies/details/details.page.html","webpack:///src/app/pages/companies/details/details.page.ts","webpack:///src/app/services/companies/checkChanges.guard.ts"],"names":["routes","path","canDeactivate","component","DetailsPageRoutingModule","forChild","imports","exports","DetailsPageModule","declarations","DetailsPage","companiesService","route","router","alertCtrl","ngZone","popoverCtrl","HINTS","direccion","text","highlightedText","actividad","sector","bypass","formGroup","undefined","getCompany","selection","controls","nextPage","value","navigate","relativeTo","updated","company","__updated","length","discardChanges","guardar","saveChanges","result","create","backdropDismiss","header","mode","message","buttons","_alert","present","descartar","Promise","resolve","handler","alert","dismiss","then","role","key","find","m","_confirm","run","event","field","componentProps","popover","id","snapshot","params","prepareCompany","initForm","nextPageControl","selector","templateUrl","styleUrls","CheckChangesGuard","canNavigate","providedIn"],"mappings":"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","file":"details-details-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CheckChangesGuard } from 'src/app/services/companies/checkChanges.guard';\nimport { DetailsPage } from './details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    canDeactivate: [CheckChangesGuard],\n    component: DetailsPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DetailsPageRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { DetailsPageRoutingModule } from './details-routing.module';\nimport { DetailsPage } from './details.page';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, IonicModule, DetailsPageRoutingModule, ComponentsModule],\n  declarations: [DetailsPage],\n})\nexport class DetailsPageModule {}\n","<ion-header>\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"2\">\n        <ion-toolbar color=\"tertiary\">\n          <ion-buttons slot=\"start\">\n            <ion-back-button color=\"primary\" mode=\"md\" defaultHref=\"/\"></ion-back-button>\n          </ion-buttons>\n        </ion-toolbar>\n      </ion-col>\n      <ion-col size=\"10\">\n        <div class=\"title\"><div class=\"title-wrapper\">Solicitud Actualización Empresa</div></div>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-header>\n\n<ion-content class=\"backgroundContent ion-padding\">\n  <form [formGroup]=\"formGroup\" *ngIf=\"formGroup\">\n    <ion-card class=\"ion-no-margin\" *ngIf=\"company\">\n      <ion-card-header>\n        <div class=\"header-wrapper\">\n          <div class=\"title\">\n            <ion-item lines=\"none\">\n              <span class=\"razon-social\">{{ company.strRazonSocial }}</span>\n            </ion-item>\n            <ion-item lines=\"none\">{{ company.str_Sigla_Documento }}: {{ company.strNumeroDcto }}</ion-item>\n          </div>\n          <ion-icon [attr.name]=\"showDetails ? 'chevron-up-outline' : 'chevron-down-outline'\" (click)=\"showDetails = !showDetails\">\n          </ion-icon>\n        </div>\n      </ion-card-header>\n      <ion-card-content>\n        <ion-item lines=\"none\">\n          <div class=\"field with-help\">\n            <h4>\n              Dirección Empresa Sede Principal\n              <ion-button class=\"tooltip\" (click)=\"showPopover($event, 'direccion')\">\n                <ion-icon name=\"help-outline\" slot=\"icon-only\"></ion-icon>\n              </ion-button>\n            </h4>\n            {{ company.eDSedesActualizadas.strDireccion }}\n          </div>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <div class=\"field\">\n            <h4>Indicador de zona</h4>\n            {{ company.eDSedesActualizadas.srtIndicadorZona === 'R' ? 'Rural' : 'Urbana' }}\n          </div>\n        </ion-item>\n\n        <ng-container *ngIf=\"showDetails\">\n          <ion-item lines=\"none\">\n            <div class=\"field\">\n              <h4>Departamento Sede Principal</h4>\n              {{ company.eDSedesActualizadas.Nombre_Departamento_Sede }}\n            </div>\n          </ion-item>\n\n          <ion-item lines=\"none\">\n            <div class=\"field\">\n              <h4>Municipio Sede Principal</h4>\n              {{ company.eDSedesActualizadas.Nombre_Municipio_Sede }}\n            </div>\n          </ion-item>\n\n          <ion-item lines=\"none\">\n            <div class=\"field with-help\">\n              <h4>\n                Código/A.E. Principal\n                <ion-button class=\"tooltip\" (click)=\"showPopover($event, 'actividad')\">\n                  <ion-icon name=\"help-outline\" slot=\"icon-only\"></ion-icon>\n                </ion-button>\n              </h4>\n              <span class=\"codigo-actividad\">{{ company.strCodigoActividadEconomica }}</span>\n              - {{ company.strActividadEconomicaNombre }}\n            </div>\n          </ion-item>\n\n          <ion-item lines=\"none\">\n            <div class=\"field with-help\">\n              <h4>\n                Sector Económico\n                <ion-button class=\"tooltip\" (click)=\"showPopover($event, 'sector')\">\n                  <ion-icon name=\"help-outline\" slot=\"icon-only\"></ion-icon>\n                </ion-button>\n              </h4>\n              {{ company.strDescripcionSectorEconomico }}\n            </div>\n          </ion-item>\n\n          <ion-item lines=\"none\">\n            <div class=\"field\">\n              <h4>Celular Contacto</h4>\n              {{ company.strCelular }}\n            </div>\n          </ion-item>\n\n          <ion-item lines=\"none\">\n            <div class=\"field\">\n              <h4>Teléfono Notificación</h4>\n              {{ company.strTelefono }}\n            </div>\n          </ion-item>\n\n          <ion-item lines=\"none\">\n            <div class=\"field\">\n              <h4>Correo Notificación</h4>\n              <span class=\"correo-notificacion\">{{ company.strCorreoElectronico }}</span>\n            </div>\n          </ion-item>\n\n          <ion-item lines=\"none\">\n            <div class=\"field\">\n              <h4>Código Postal</h4>\n              {{ company.eDSedesActualizadas.strCodigoPostal }}\n            </div>\n          </ion-item>\n\n          <ion-item lines=\"none\">\n            <div class=\"field\">\n              <h4>TD/No. Identificación Representante Legal</h4>\n              {{ company.strSiglaRepresentanteLegal }} - {{ company.strNumeroDcto_Representant_Legal }}\n            </div>\n          </ion-item>\n\n          <ion-item lines=\"none\">\n            <div class=\"field\">\n              <h4>Nombre Representante Legal</h4>\n              {{ company.strNombre_Representant_Legal }}\n            </div>\n          </ion-item>\n\n          <ion-item lines=\"none\">\n            <div class=\"field\">\n              <h4>Observaciones</h4>\n              <ion-textarea autoGrow=\"true\" readonly=\"true\" [value]=\"company.stringObservaciones\"></ion-textarea>\n            </div>\n          </ion-item>\n        </ng-container>\n\n        <ion-radio-group formControlName=\"nextPage\">\n          <ion-item lines=\"none\">\n            <ion-label class=\"radio-label\">\n              <ion-icon\n                class=\"icon-updated\"\n                name=\"checkmark-circle-outline\"\n                slot=\"start\"\n                *ngIf=\"hasChangedModule('company-data')\"\n              ></ion-icon>\n              Actualizar Datos Empresas\n            </ion-label>\n            <ion-radio slot=\"end\" value=\"companyData\"></ion-radio>\n          </ion-item>\n\n          <ion-item lines=\"none\">\n            <ion-label class=\"radio-label\">\n              <ion-icon name=\"checkmark-circle-outline\" slot=\"start\" *ngIf=\"hasChangedModule('contact-data')\"></ion-icon>\n              Actualizar Personas Contacto\n            </ion-label>\n            <ion-radio slot=\"end\" value=\"contactData\"></ion-radio>\n          </ion-item>\n        </ion-radio-group>\n      </ion-card-content>\n    </ion-card>\n\n    <ion-button class=\"ion-margin-bottom\" expand=\"block\" (click)=\"confirm()\"> Confirmar Datos </ion-button>\n\n    <ion-button class=\"ion-margin-bottom\" expand=\"block\" (click)=\"nextPage()\" *ngIf=\"!!formGroup.controls.nextPage.value\">\n      Continuar Proceso\n    </ion-button>\n  </form>\n</ion-content>\n","import { Component, NgZone } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController, PopoverController } from '@ionic/angular';\nimport { PopoverComponent } from 'src/app/components/popover/popover.component';\nimport { CompaniesService } from 'src/app/services/companies/companies.service';\n\n/**\n * Componente para la vista de detalles de empresa.\n */\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.page.html',\n  styleUrls: ['./details.page.scss'],\n})\nexport class DetailsPage {\n  /**\n   * Formulario.\n   */\n  formGroup: FormGroup;\n\n  /**\n   * Compañía actual.\n   */\n  company: any;\n\n  /**\n   * Indica si mostrar u ocultar detalles de esta empresa en la tarjeta.\n   */\n  showDetails: boolean;\n\n  /**\n   * Indica si deben saltarse las comprobaciones de cambios de empresa al salir de esta vista.\n   * Estas comprobaciones se saltan cuando se sigue editando la empresa en otras vistas, como\n   * la de datos de empresa o contacto.\n   */\n  private bypass: boolean;\n\n  /**\n   * Textos de ayuda.\n   */\n  private readonly HINTS = {\n    direccion: {\n      text: 'al dar clic tendrá la posibilidad de actualizar la dirección de la sede principal.',\n      highlightedText: 'Estimado usuario: ',\n    },\n    actividad: {\n      text: 'Para la modificación de la actividad económica de la empresa, se debe realizar a través de un proceso de reclasificación de empresa ante POSITIVA.',\n      highlightedText: 'Recuerde: ',\n    },\n    sector: {\n      text: 'Para la modificación del sector económico de la empresa, se debe realizar a través de un proceso de reclasificación de empresa ante POSITIVA.',\n      highlightedText: 'Recuerde: ',\n    },\n  };\n\n  constructor(\n    private companiesService: CompaniesService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private alertCtrl: AlertController,\n    private ngZone: NgZone,\n    private popoverCtrl: PopoverController\n  ) {}\n\n  ionViewWillEnter(): void {\n    this.bypass = false;\n    this.formGroup = undefined;\n    this.getCompany();\n  }\n\n  /**\n   * Navega a la siguiente vista de acuerdo a la selección del usuario.\n   */\n  nextPage(): void {\n    const selection = this.formGroup.controls.nextPage.value;\n    let path: string;\n\n    switch (selection) {\n      case 'companyData':\n        path = './edit-company';\n\n        break;\n      case 'contactData':\n        path = './contact-list';\n\n        break;\n    }\n\n    this.bypass = true;\n    this.router.navigate([path], { relativeTo: this.route });\n  }\n\n  /**\n   * Comprueba que no hayan cambios pendientes por guardar. En caso de que los haya, consulta al\n   * usuario si desea guardarlos para después o descartarlos.\n   *\n   * Regresa un valor booleano que indica si puede o no realizarse la navegación.\n   */\n  async canNavigate(): Promise<boolean> {\n    if (this.bypass) {\n      return true;\n    }\n\n    const updated = this.company?.__updated ?? [];\n\n    if (!updated.length) {\n      this.companiesService.discardChanges();\n\n      return true;\n    }\n\n    const guardar = async (): Promise<void> => {\n      result = await this.companiesService.saveChanges();\n\n      if (!result) {\n        const _alert = await this.alertCtrl.create({\n          backdropDismiss: false,\n          header: 'Atención',\n          mode: 'ios',\n          message: 'No tiene espacio suficiente en el dispositivo. Intente liberar memoria.',\n          buttons: ['ACEPTAR'],\n        });\n\n        await _alert.present();\n      }\n    };\n\n    const descartar = (): void => {\n      this.companiesService.discardChanges();\n      result = true;\n    };\n\n    let result: boolean;\n\n    return new Promise(async resolve => {\n      const alert = await this.alertCtrl.create({\n        header: 'Atención',\n        mode: 'ios',\n        backdropDismiss: false,\n        message: 'Tiene cambios pendientes por guardar. ¿Desea guardarlos para después o descartarlos?',\n        buttons: [\n          {\n            text: 'Guardar',\n            handler: () => {\n              alert.dismiss().then(async () => {\n                await guardar();\n                resolve(result);\n              });\n\n              return false;\n            },\n            role: 'save',\n          },\n          {\n            text: 'Descartar',\n            handler: () => {\n              alert.dismiss().then(async () => {\n                descartar();\n                resolve(result);\n              });\n\n              return false;\n            },\n            role: 'cancel',\n          },\n        ],\n      });\n\n      await alert.present();\n    });\n  }\n\n  /**\n   * Indica si se han hecho cambios en el módulo indicado.\n   *\n   * @param key Nombre del módulo.\n   */\n  hasChangedModule(key: string): boolean {\n    const updated = this.company.__updated ?? [];\n\n    return updated.find((m: string) => m === key) !== undefined;\n  }\n\n  /**\n   * Realiza la confirmación de los datos y presenta el resumen de carga.\n   */\n  async confirm(): Promise<void> {\n    const _confirm = (): void => {\n      this.ngZone.run(() => {\n        this.bypass = true;\n        this.router.navigate(['./signature'], { relativeTo: this.route });\n      });\n    };\n\n    const alert = await this.alertCtrl.create({\n      header: 'Estimado Usuario',\n      mode: 'ios',\n      backdropDismiss: false,\n      message: '¿Está seguro de la confirmación de sus datos?',\n      buttons: [\n        { text: 'Aceptar', role: 'accept', handler: _confirm },\n        { text: 'Cancelar', role: 'cancel' },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async showPopover(event: any, field: string): Promise<void> {\n    const popover = await this.popoverCtrl.create({\n      event,\n      component: PopoverComponent,\n      componentProps: { text: this.HINTS[field].text, highlightedText: this.HINTS[field].highlightedText },\n    });\n\n    await popover.present();\n  }\n\n  /**\n   * Establece la empresa de la vista de detalles.\n   */\n  private async getCompany(): Promise<void> {\n    const id = +this.route.snapshot.params.id;\n\n    try {\n      this.company = await this.companiesService.prepareCompany(id);\n    } catch {\n      this.company = this.companiesService.company;\n    }\n\n    if (!this.company) {\n      this.router.navigate(['../']);\n\n      return;\n    }\n\n    this.initForm();\n  }\n\n  /**\n   * Inicializa el formulario.\n   */\n  private initForm(): void {\n    const nextPageControl = new FormControl();\n    this.formGroup = new FormGroup({ nextPage: nextPageControl });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { DetailsPage } from 'src/app/pages/companies/details/details.page';\n\n/**\n * Comprueba si hay cambios pendientes por guardar en la empresa en edición actual.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckChangesGuard implements CanDeactivate<DetailsPage> {\n  async canDeactivate(component: DetailsPage): Promise<boolean> {\n    return await component.canNavigate();\n  }\n}\n"]}