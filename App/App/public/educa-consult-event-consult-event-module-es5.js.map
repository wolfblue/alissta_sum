{"version":3,"sources":["webpack:///src/app/pages/educa/consult-event/consult-event-routing.module.ts","webpack:///src/app/pages/educa/consult-event/consult-event.module.ts","webpack:///src/app/pages/educa/consult-event/consult-event.page.html","webpack:///src/app/pages/educa/consult-event/consult-event.page.ts"],"names":["routes","path","component","loadChildren","then","m","SelectRegisterEventPageModule","ConsultEventPageRoutingModule","forChild","imports","exports","ConsultEventPageModule","declarations","ConsultEventPage","formBuilder","eventService","cacheService","loadingCtlr","storage","alertController","geolocation","router","dateMin","Date","months","branchOffices","municipalities","eventsBranchOffice","dateEvent","toISOString","split","createFormConsultEvent","getBranchsEvent","formConsultEvent","group","value","disabled","required","branchOffice","municipality","event","geo","geoText","presentLoading","setTimeout","getBranchOfficeEvent","subscribe","response","Sucursales","loading","dismiss","err","branchSelected","branchOfficeId","detail","undefined","indexOf","getMunicipyBrachOffice","Municipios","municipySelected","municipyId","getEventForMunicipy","Eventos","get","documentUsuarioRegistrado","sessionStorage","nombreEvento","Evento","valid","newRegisterResponsibleEvent","FK_ID_Evento","controls","Fk_Id_Evento","strDocumentoUsuario","idPersona","dtmFechaRegistro","strGeoposicionamiento","saveRegisterEvent","createEventResponsible","navigateByUrl","reset","Alert","checked","getCurrentPosition","coords","latitude","longitude","setValue","error","create","mode","message","present","header","buttons","alert","selectEvent","selector","templateUrl","styleUrls"],"mappings":"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","file":"educa-consult-event-consult-event-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ConsultEventPage } from './consult-event.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConsultEventPage,\n  },\n  {\n    path: 'selectRegisterEvent',\n    loadChildren: () => import('../select-register-event/select-register-event.module').then(m => m.SelectRegisterEventPageModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ConsultEventPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ConsultEventPageRoutingModule } from './consult-event-routing.module';\n\nimport { ConsultEventPage } from './consult-event.page';\n\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatNativeDateModule } from '@angular/material/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ConsultEventPageRoutingModule,\n    MatExpansionModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n  ],\n  declarations: [ConsultEventPage],\n})\nexport class ConsultEventPageModule {}\n","<ion-header>\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"2\">\n        <ion-toolbar color=\"tertiary\">\n          <ion-buttons slot=\"start\">\n            <ion-back-button color=\"primary\" mode=\"md\" defaultHref=\"/\"></ion-back-button>\n          </ion-buttons>\n        </ion-toolbar>\n      </ion-col>\n      <ion-col size=\"10\">\n        <ion-title class=\"titulo\">Consultar Evento</ion-title>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n  <form [formGroup]=\"formConsultEvent\" *ngIf=\"formConsultEvent\">\n    <ion-list>\n      <ion-item lines=\"none\" class=\"item\" mode=\"ios\">\n        <ion-icon name=\"calendar\" color=\"primary\" slot=\"start\"></ion-icon>\n        <ion-label position=\"stacked\">Fecha evento</ion-label>\n      </ion-item>\n      <ion-datetime\n        mode=\"ios\"\n        [value]=\"dateEvent\"\n        display-format=\"DD MMM YYYY\"\n        monthShortNames=\"Enero, Febrero, Marzo, Abril, Mayo, Junio, Julio, Agosto, Septiembre, Octubre, Noviembre, Diciembre\"\n        [min]=\"dateMin\"\n        [pickerOptions]=\"customPickerOption\"\n        class=\"bg-light mt-3 rounded pl-1 pr-1 ion-padding\"\n        formControlName=\"dateEvent\"\n        placeholder=\"DD MM AAAA\"\n      >\n      </ion-datetime>\n\n      <!-- datapiker with angular material -->\n      <!-- <mat-form-field  color=\"primary\" class=\"bg-light mt-3 rounded pl-1 pr-1 ion-padding\">\n        <mat-label>Fecha evento</mat-label>\n        <input readonly \n               matInput \n               formControlName=\"dateEvent\" \n               [min]=\"dateEvent\"  \n               [matDatepicker]=\"picker\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker (selectedChanged)=\"DateChange($event)\"></mat-datepicker>\n      </mat-form-field> -->\n\n      <ion-item lines=\"none\" class=\"item\" mode=\"ios\">\n        <ion-icon name=\"business\" color=\"primary\" slot=\"start\"></ion-icon>\n        <ion-label position=\"stacked\">Sucursal</ion-label>\n      </ion-item>\n      <ion-select\n        formControlName=\"branchOffice\"\n        class=\"bg-light mt-3 rounded pl-1 pr-1\"\n        mode=\"ios\"\n        interface=\"action-sheet\"\n        cancelText=\"CANCELAR\"\n        (ionChange)=\"selectedBranchOffice($event)\"\n        placeholder=\"Sucursal\"\n      >\n        <ion-select-option *ngFor=\"let branchs of branchOffices\" [value]=\"branchs.FK_Id_Sucursal\"> {{branchs.Sucursal}} </ion-select-option>\n      </ion-select>\n\n      <ion-item lines=\"none\" class=\"item\" mode=\"ios\">\n        <ion-thumbnail class=\"ionthumbnail\" slot=\"start\">\n          <ion-img class=\"imgMunicipio\" src=\"../../../assets/icon/mapa.svg\"></ion-img>\n        </ion-thumbnail>\n        <ion-label position=\"stacked\">Municipio</ion-label>\n      </ion-item>\n\n      <ion-select\n        formControlName=\"municipality\"\n        class=\"bg-light mt-3 rounded pl-1 pr-1\"\n        mode=\"ios\"\n        interface=\"action-sheet\"\n        cancelText=\"CANCELAR\"\n        (ionChange)=\"selectedMunicipy($event)\"\n        placeholder=\"Municipio\"\n      >\n        <ion-select-option *ngFor=\"let municipality of municipalities\" [value]=\"municipality.FK_Id_Municipio\"\n          >{{municipality.Municipio}}</ion-select-option\n        >\n      </ion-select>\n\n      <ion-item lines=\"none\" class=\"item\" mode=\"ios\">\n        <ion-icon name=\"reader\" color=\"primary\" slot=\"start\"></ion-icon>\n        <ion-label position=\"stacked\">Evento</ion-label>\n      </ion-item>\n\n      <ion-select\n        formControlName=\"event\"\n        class=\"bg-light mt-3 rounded pl-1 pr-1\"\n        mode=\"ios\"\n        interface=\"action-sheet\"\n        cancelText=\"CANCELAR\"\n        placeholder=\"Evento\"\n      >\n        <ion-select-option *ngFor=\"let event of eventsBranchOffice\" [value]=\"event\"> {{event.Evento}} </ion-select-option>\n      </ion-select>\n\n      <ion-item lines=\"none\" style=\"height: 50px\" mode=\"ios\">\n        <ion-icon name=\"pin\" color=\"primary\" slot=\"start\"></ion-icon>\n        <ion-label> Geoposición </ion-label>\n        <ion-toggle color=\"primary\" formControlName=\"geo\" class=\"bg-light mt-3 rounded\" (ionChange)=\"changeGeo($event)\"> </ion-toggle>\n      </ion-item>\n\n      <ion-item lines=\"none\" mode=\"ios\">\n        <ion-input type=\"hidden\" formControlName=\"geoText\"></ion-input>\n      </ion-item>\n    </ion-list>\n  </form>\n\n  <!-- <pre>{{ formConsultEvent.value | json }}</pre> -->\n\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"3\"></ion-col>\n      <ion-col size=\"6\">\n        <ion-button (click)=\"selectEvent()\" mode=\"ios\" class=\"btn\" expand=\"block\"> Seleccionar </ion-button>\n      </ion-col>\n      <ion-col size=\"3\"></ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { responsableEvento } from 'src/app/intarfaces/interfaces';\nimport { CacheService } from '../../../services/cache/cache.service';\nimport { EventService } from '../../../services/event/event.service';\n\n@Component({\n  selector: 'app-consult-event',\n  templateUrl: './consult-event.page.html',\n  styleUrls: ['./consult-event.page.scss'],\n})\nexport class ConsultEventPage implements OnInit {\n  /**\n   * formConsultEvent, es el formulario de consultar el evento.\n   */\n  formConsultEvent: FormGroup;\n\n  /**\n   * dataEvent, la variable de la fecha actual del sistema\n   * dateMin, para validar que el usuario no seleccione una fecha pasada\n   * customPickerOptions, para que las opciones del iondatetime sean personalizadas.\n   */\n  dateEvent;\n  dateMin = Date();\n  customPickerOption: any;\n  months = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];\n\n  /**\n   * Variable que almacenara las sucursales\n   */\n  branchOffices: any[] = [];\n\n  /**\n   * Variable que almacena los municipios\n   */\n  municipalities: any[] = [];\n\n  /**\n   * Variable que almacena los eventos\n   */\n  eventsBranchOffice: any[] = [];\n  eventSelectedList: any;\n\n  loading: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private eventService: EventService,\n    private cacheService: CacheService,\n    private loadingCtlr: LoadingController,\n    private storage: Storage,\n    private alertController: AlertController,\n    private geolocation: Geolocation,\n    private router: Router\n  ) {}\n\n  ionViewWillEnter() {\n    this.dateEvent = new Date().toISOString();\n    this.dateMin = this.dateEvent.split('T')[0];\n  }\n\n  ionViewDidEnter() {\n    this.createFormConsultEvent();\n    this.getBranchsEvent();\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Método para crear el formulario para consultar el evento\n   */\n\n  createFormConsultEvent() {\n    this.formConsultEvent = this.formBuilder.group({\n      dateEvent: [{ value: this.dateEvent, disabled: true }, Validators.required],\n      branchOffice: ['', Validators.required],\n      municipality: ['', Validators.required],\n      event: ['', Validators.required],\n      geo: [false, Validators.required],\n      geoText: [''],\n    });\n  }\n\n  /**\n   * Cargar las sucursales de los eventos acorde a la fecha del sistema\n   */\n  async getBranchsEvent(): Promise<void> {\n    await this.presentLoading();\n\n    setTimeout(() => {\n      this.eventService.getBranchOfficeEvent().subscribe(\n        response => {\n          this.branchOffices = response.Sucursales;\n          this.loading.dismiss();\n        },\n        err => {\n          this.loading.dismiss();\n        }\n      );\n    }, 1500);\n  }\n\n  /**\n   * Cuando seleccionan una sucursal y de esta manera cargan los municipios\n   */\n  async selectedBranchOffice(branchSelected: any): Promise<void> {\n    const branchOfficeId = branchSelected.detail.value;\n\n    if ([undefined, null, ''].indexOf(branchOfficeId) > -1) {\n      return;\n    }\n\n    await this.presentLoading();\n\n    setTimeout(() => {\n      this.eventService.getMunicipyBrachOffice(branchOfficeId).subscribe(\n        response => {\n          this.municipalities = [];\n          this.municipalities = response.Municipios;\n          this.loading.dismiss();\n        },\n        err => {\n          this.loading.dismiss();\n        }\n      );\n    }, 1500);\n  }\n\n  /**\n   * Cuando selecciona un municipio y de esta manera cargan los eventos que hay en el municipio.\n   */\n  async selectedMunicipy(municipySelected: any): Promise<void> {\n    const municipyId = municipySelected.detail.value;\n\n    if ([undefined, null, ''].indexOf(municipyId) > -1) {\n      return;\n    }\n\n    await this.presentLoading();\n\n    this.eventService.getEventForMunicipy(municipyId).subscribe(\n      response => {\n        this.eventsBranchOffice = [];\n        this.eventsBranchOffice = response.Eventos;\n        this.loading.dismiss();\n      },\n      err => {\n        this.loading.dismiss();\n      }\n    );\n  }\n\n  /**\n   * Cuando se se da click a seleccionar al evento para realizar el registro\n   * Este metodo primero saca la información del usuario que esta en el storage en una variable llamada sesion\n   * Se crea un objeto newRegisterResponsibleEvent el cual se enviara para guardar el registro de\n   * responsable del evento, si es exitoso lo redirecciona a selectRegisterEvent\n   */\n  async selectEvent() {\n    const documentUsuarioRegistrado = await this.storage.get('sesion');\n    setTimeout(() => {\n      sessionStorage.nombreEvento = this.formConsultEvent.value.event.Evento;\n      if (this.formConsultEvent.valid) {\n        const newRegisterResponsibleEvent: responsableEvento = {\n          FK_ID_Evento: this.formConsultEvent.controls.event.value.Fk_Id_Evento,\n          strDocumentoUsuario: documentUsuarioRegistrado.idPersona,\n          dtmFechaRegistro: this.formConsultEvent.controls.dateEvent.value,\n          strGeoposicionamiento: this.formConsultEvent.controls.geoText.value,\n        };\n        this.cacheService.saveRegisterEvent(newRegisterResponsibleEvent);\n        this.eventService.createEventResponsible(newRegisterResponsibleEvent).subscribe(\n          response => {\n            this.router.navigateByUrl('/u/consultEvent/selectRegisterEvent');\n          },\n          err => {\n            this.router.navigateByUrl('/u/consultEvent/selectRegisterEvent');\n          }\n        );\n        this.formConsultEvent.reset();\n      } else {\n        this.Alert();\n      }\n    }, 1000);\n  }\n\n  /**\n   * Al seleccionar el posicionamiento de geolocalización\n   */\n  async changeGeo(event): Promise<void> {\n    if (event.detail.checked) {\n      await this.presentLoading();\n\n      this.geolocation\n        .getCurrentPosition()\n        .then(response => {\n          const coords = response.coords.latitude + ',' + response.coords.longitude;\n          this.formConsultEvent.controls.geoText.setValue(coords);\n          this.loading.dismiss();\n        })\n        .catch(error => {\n          this.loading.dismiss();\n        });\n    } else {\n      this.formConsultEvent.controls.geoText.setValue('');\n    }\n  }\n\n  async presentLoading() {\n    this.loading = await this.loadingCtlr.create({\n      mode: 'ios',\n      message: 'Cargando',\n    });\n    return this.loading.present();\n  }\n\n  async Alert() {\n    const alert = await this.alertController.create({\n      header: 'Atención',\n      mode: 'ios',\n      message: 'Todos los campos son obligatorios.',\n      buttons: ['ACEPTAR'],\n    });\n\n    await alert.present();\n  }\n}\n"]}