{"version":3,"sources":["webpack:///src/app/pages/home/home-routing.module.ts","webpack:///src/app/pages/home/home.module.ts","webpack:///src/app/pages/home/home.page.html","webpack:///src/app/pages/home/home.page.ts","webpack:///src/app/services/menu-configuracion.service.ts","webpack:///src/app/storage.service.ts"],"names":["routes","path","component","HomePageRoutingModule","forChild","imports","exports","HomePageModule","declarations","providers","HomePage","router","toastController","alertController","menuService","faio","platform","storageService","isShowLoginWithFinger","isLoginWithFinger","isAutologin","optMenuMain","getMenuMain","ready","then","isAvailable","ava","get","result","e","console","log","set","presentAlertConfirm","error","create","header","mode","message","buttons","text","handler","toastConfirmBiometric","role","remove","alertCancelBiometric","alert","present","duration","toast","menuSelected","title","navigateByUrl","selector","templateUrl","styleUrls","MenuConfiguracionService","http","providedIn","StorageService","storage","key","value","clear"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;QAWaC,qB;;;;;YAAAA;;;;yBAAAA,qB;AAAqB,O;AAAA,gBAHvB,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAGuB,EAFtB,4DAEsB;;;;0HAArBG,qB,EAAqB;AAAA;AAAA,kBAFtB,4DAEsB;AAAA,O;AAFV,K;;;;;sEAEXA,qB,EAAqB;cAJjC,sDAIiC;eAJxB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERM,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAIwB,Q;;;;;;;;;;;;;;;;;;AChBlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcaC,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,iBAFd,CAAC,+DAAD,C;AAAQ,gBAFV,CAAC,4DAAD,EAAe,0DAAf,EAA4B,0DAA5B,EAAyC,qFAAzC,EAA2D,0EAA3D,CAEU;;;;0HAERA,c,EAAc;AAAA,uBAHV,mDAGU;AAHF,kBADb,4DACa,EADC,0DACD,EADc,0DACd,EAD2B,qFAC3B,EAD6C,0EAC7C;AAGE,O;AAJgE,K;;;;;sEAI9EA,c,EAAc;cAL1B,sDAK0B;eALjB;AACRF,iBAAO,EAAE,CAAC,4DAAD,EAAe,0DAAf,EAA4B,0DAA5B,EAAyC,qFAAzC,EAA2D,0EAA3D,CADD;AAERG,sBAAY,EAAE,CAAC,mDAAD,CAFN;AAGRC,mBAAS,EAAE,CAAC,+DAAD;AAHH,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRnB;;AAA0C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACxC;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAyB;;AAAiB;;AAC5C;;AACF;;;;;;AANuC;;AAAA;;AAA5B;;AAIkB;;AAAA;;;;;;AAR/B;;AACE;;AAUF;;;;;;AAVuB;;AAAA;;;ACE7B;;;;;QAQaC,Q;AAYX,wBACUC,MADV,EAEUC,eAFV,EAGUC,eAHV,EAIUC,WAJV,EAKUC,IALV,EAMUC,QANV,EAOUC,cAPV,EAOwC;AAAA;;AAN9B,aAAAN,MAAA,GAAAA,MAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAC,IAAA,GAAAA,IAAA;AACA,aAAAC,QAAA,GAAAA,QAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AAbV,aAAAC,qBAAA,GAAwB,KAAxB;AAEA,aAAAC,iBAAA,GAAoB,KAApB;AAEA,aAAAC,WAAA,GAAc,KAAd;AAUI;;;;eAEJ,oBAAW;AAAA;;AACT,eAAKC,WAAL,GAAmB,KAAKP,WAAL,CAAiBQ,WAAjB,EAAnB;AAEA,eAAKN,QAAL,CAAcO,KAAd,GAAsBC,IAAtB,CAA2B,YAAM;AAC/B,iBAAI,CAACT,IAAL,CACGU,WADH,GAEGD,IAFH,CAEQ,UAACE,GAAD,EAAc;AAClB,mBAAI,CAACT,cAAL,CACGU,GADH,CACO,mBADP,EAEGH,IAFH,CAEQ,UAAAI,MAAM,EAAI;AACd,oBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB,uBAAI,CAACT,iBAAL,GAAyBS,MAAzB;AACD;AACF,eANH,WAOS,UAAAC,CAAC,EAAI;AACVC,uBAAO,CAACC,GAAR,CAAY,YAAYF,CAAxB;AACD,eATH;;AAUA,mBAAI,CAACZ,cAAL,CACGU,GADH,CACO,qBADP,EAEGH,IAFH,CAEQ,UAAAI,MAAM,EAAI;AACd,oBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB,uBAAI,CAACT,iBAAL,GAAyBS,MAAzB;AACD;AACF,eANH,WAOS,UAAAC,CAAC,EAAI;AACVC,uBAAO,CAACC,GAAR,CAAY,YAAYF,CAAxB;AACD,eATH;;AAUA,mBAAI,CAACZ,cAAL,CACGU,GADH,CACO,WADP,EAEGH,IAFH,CAEQ,UAAAI,MAAM,EAAI;AACd,oBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB,uBAAI,CAACR,WAAL,GAAmBQ,MAAnB;AACD,iBAFD,MAEO;AACL,uBAAI,CAACX,cAAL,CAAoBe,GAApB,CAAwB,WAAxB,EAAqC,IAArC;AACD;;AACD,oBAAI,CAAC,KAAI,CAACd,qBAAN,IAA+B,CAAC,KAAI,CAACC,iBAArC,IAA0D,CAAC,KAAI,CAACC,WAApE,EAAiF;AAC/E,uBAAI,CAACa,mBAAL;AACD;AACF,eAXH,WAYS,UAAAJ,CAAC,EAAI;AACVC,uBAAO,CAACC,GAAR,CAAY,YAAYF,CAAxB;AACD,eAdH;AAeD,aAtCH,WAuCS,UAACK,KAAD,EAAgB;AACrBJ,qBAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,aAzCH;AA0CD,WA3CD;AA4CD;;;eAEK,+BAAsB;;;;;;;;;AACZ,yBAAM,KAAKrB,eAAL,CAAqBsB,MAArB,CAA4B;AAC9CC,0BAAM,EAAE,cADsC;AAE9CC,wBAAI,EAAE,KAFwC;AAG9CC,2BAAO,EACL,uCACA,+CADA,GAEA,iEAN4C;AAO9CC,2BAAO,EAAE,CACP;AACEC,0BAAI,EAAE,IADR;AAEEC,6BAAO,EAAE,mBAAM;AACb,8BAAI,CAACxB,cAAL,CAAoBe,GAApB,CAAwB,qBAAxB,EAA+C,IAA/C;;AACA,8BAAI,CAACf,cAAL,CAAoBe,GAApB,CAAwB,gBAAxB,EAA0C,IAA1C;;AACA,8BAAI,CAACU,qBAAL;AACD;AANH,qBADO,EASP;AACEF,0BAAI,EAAE,UADR;AAEEG,0BAAI,EAAE,QAFR;AAGEF,6BAAO,EAAE,mBAAM;AACb,8BAAI,CAACxB,cAAL,CAAoBe,GAApB,CAAwB,qBAAxB,EAA+C,KAA/C;;AACA,8BAAI,CAACf,cAAL,CAAoBe,GAApB,CAAwB,gBAAxB,EAA0C,KAA1C;;AACA,8BAAI,CAACf,cAAL,CAAoB2B,MAApB,CAA2B,UAA3B;;AACA,8BAAI,CAAC3B,cAAL,CAAoB2B,MAApB,CAA2B,UAA3B;;AACA,8BAAI,CAAC3B,cAAL,CAAoB2B,MAApB,CAA2B,YAA3B;;AACA,8BAAI,CAACC,oBAAL;AACD;AAVH,qBATO;AAPqC,mBAA5B,CAAN;;;AAARC,uB;;AA8BN,yBAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;AACD;;;eAEK,iCAAwB;;;;;;;AACd,yBAAM,KAAKnC,eAAL,CAAqBuB,MAArB,CAA4B;AAC9CG,2BAAO,EAAE,yBADqC;AAE9CU,4BAAQ,EAAE;AAFoC,mBAA5B,CAAN;;;AAARC,uB;AAINA,uBAAK,CAACF,OAAN;;;;;;;;AACD;;;eAEK,gCAAuB;;;;;;;AACb,yBAAM,KAAKlC,eAAL,CAAqBsB,MAArB,CAA4B;AAC9CC,0BAAM,EAAE,YADsC;AAE9CE,2BAAO,EAAE,yDAFqC;AAG9CC,2BAAO,EAAE,CACP;AACEC,0BAAI,EAAE;AADR,qBADO;AAHqC,mBAA5B,CAAN;;;AAARM,uB;;AASN,yBAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;AACD;;;eAED,4BAAmBG,YAAnB,EAAiC;AAC/B,kBAAQA,YAAY,CAACC,KAArB;AACE,iBAAK,gBAAL;AACE,mBAAKxC,MAAL,CAAYyC,aAAZ,CAA0B,uBAA1B;AAEA;;AACF,iBAAK,mCAAL;AACE,mBAAKzC,MAAL,CAAYyC,aAAZ,CAA0B,WAA1B;AAEA;;AACF,iBAAK,kBAAL;AACE,mBAAKzC,MAAL,CAAYyC,aAAZ,CAA0B,gBAA1B;AAEA;;AACF,iBAAK,0BAAL;AACE,mBAAKzC,MAAL,CAAYyC,aAAZ,CAA0B,aAA1B;AAEA;AAhBJ;AAkBD;;;;;;;uBAjJU1C,Q,EAAQ,uH,EAAA,+H,EAAA,+H,EAAA,8J,EAAA,iJ,EAAA,wH,EAAA,uI;AAAA,K;;;YAARA,Q;AAAQ,+B;AAAA,c;AAAA,a;AAAA,qP;AAAA;AAAA;ADhBrB;;AAEA;;AACE;;AACE;;AACE;;;;AAYF;;AACF;;AACF;;;;AAdwB;;AAAA;;;;;;;;;;sECWXA,Q,EAAQ;cALpB,uDAKoB;eALV;AACT2C,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,kBAFJ;AAGTC,mBAAS,EAAE,CAAC,kBAAD;AAHF,S;AAKU,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBrB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,wB;AACX,wCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAoB;AAExC;;;;;;;;eAIA,uBAAc;AACZ,iBAAO,KAAKA,IAAL,CAAU9B,GAAV,CAAqB,qCAArB,CAAP;AACD;AAED;;;;;;eAGA,uBAAc;AACZ,iBAAO,KAAK8B,IAAL,CAAU9B,GAAV,CAAqB,sCAArB,CAAP;AACD;AAED;;;;;;;eAIA,iCAAwB;AACtB,iBAAO,KAAK8B,IAAL,CAAU9B,GAAV,CAAqB,mCAArB,CAAP;AACD;AAED;;;;;;;eAKA,qCAA4B;AAC1B,iBAAO,KAAK8B,IAAL,CAAU9B,GAAV,CAAqB,uCAArB,CAAP;AACD;AAED;;;;;;eAGA,mCAA0B;AACxB,iBAAO,KAAK8B,IAAL,CAAU9B,GAAV,CAAqB,qCAArB,CAAP;AACD;;;;;;;uBAxCU6B,wB,EAAwB,uH;AAAA,K;;;aAAxBA,wB;AAAwB,eAAxBA,wBAAwB,K;AAAA,kBAFvB;;;;;sEAEDA,wB,EAAwB;cAHpC,wDAGoC;eAHzB;AACVE,oBAAU,EAAE;AADF,S;AAGyB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCAxBC,c;AACX,8BAAoBC,OAApB,EAAsC;AAAA;;AAAlB,aAAAA,OAAA,GAAAA,OAAA;AAAoB;;;;eAElC,aAAIC,GAAJ,EAAiBC,KAAjB,EAA2B;;;;;;;;AAIpB,yBAAM,KAAKF,OAAL,CAAa5B,GAAb,CAAiB6B,GAAjB,EAAsBC,KAAtB,CAAN;;;AAATlC,wB;;;;;;;AAEAA,wBAAM,GAAG,KAAT;;;oDAGKA,MAAM,KAAK,K;;;;;;;;AACnB;;;eAEK,aAAIiC,GAAJ,EAAe;;;;;;;;AAIR,yBAAM,KAAKD,OAAL,CAAajC,GAAb,CAAiBkC,GAAjB,CAAN;;;AAATjC,wB;;;;;;;;;oDAGKA,M;;;;;;;;AACR;;;eAED,gBAAOiC,GAAP,EAAoB;AAClB,eAAKD,OAAL,CAAahB,MAAb,CAAoBiB,GAApB;AACD;;;eAED,iBAAQ;AACN,eAAKD,OAAL,CAAaG,KAAb;AACD;;;;;;;uBA/BUJ,c,EAAc,8G;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVD,oBAAU,EAAE;AADF,S;AAGe,Q","file":"home-home-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomePageRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Device } from '@ionic-native/device/ngx';\nimport { IonicModule } from '@ionic/angular';\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { HomePage } from './home.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, ComponentsModule, HomePageRoutingModule],\n  declarations: [HomePage],\n  providers: [Device],\n})\nexport class HomePageModule {}\n","<app-header></app-header>\n\n<ion-content class=\"backgroundContent\">\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"6\" *ngFor=\"let menuOpt of optMenuMain | async; let i = index\">\n        <ion-card mode=\"ios\" *ngIf=\"menuOpt.show\" (click)=\"optionSelectedMenu(menuOpt)\">\n          <div class=\"vertical-center\">\n            <div class=\"center\">\n              <img [src]=\"menuOpt.icon\" alt=\"\" [class.padding-8]=\"menuOpt.title === 'Actualizar Datos Empresa'\" />\n            </div>\n          </div>\n          <ion-label>\n            <h4 class=\"tituloOpcion\">{{menuOpt.title}}</h4>\n          </ion-label>\n        </ion-card>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MenuConfiguracionService } from '../../services/menu-configuracion.service';\nimport { Router } from '@angular/router';\nimport { Platform, ToastController, AlertController } from '@ionic/angular';\nimport { FingerprintAIO } from '@ionic-native/fingerprint-aio/ngx';\nimport { StorageService } from 'src/app/storage.service';\n\n/**\n * Componente de la vista de inicio.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n})\nexport class HomePage implements OnInit {\n  /**\n   * Array de opciones del menú de configuración\n   */\n  optMenuMain: Observable<any[]>;\n\n  isShowLoginWithFinger = false;\n\n  isLoginWithFinger = false;\n\n  isAutologin = false;\n\n  constructor(\n    private router: Router,\n    private toastController: ToastController,\n    private alertController: AlertController,\n    private menuService: MenuConfiguracionService,\n    private faio: FingerprintAIO,\n    private platform: Platform,\n    private storageService: StorageService\n  ) {}\n\n  ngOnInit() {\n    this.optMenuMain = this.menuService.getMenuMain();\n\n    this.platform.ready().then(() => {\n      this.faio\n        .isAvailable()\n        .then((ava: any) => {\n          this.storageService\n            .get('isLoginWithFinger')\n            .then(result => {\n              if (result != null) {\n                this.isLoginWithFinger = result;\n              }\n            })\n            .catch(e => {\n              console.log('error: ' + e);\n            });\n          this.storageService\n            .get('showLoginWithFinger')\n            .then(result => {\n              if (result != null) {\n                this.isLoginWithFinger = result;\n              }\n            })\n            .catch(e => {\n              console.log('error: ' + e);\n            });\n          this.storageService\n            .get('autologin')\n            .then(result => {\n              if (result != null) {\n                this.isAutologin = result;\n              } else {\n                this.storageService.set('autologin', true);\n              }\n              if (!this.isShowLoginWithFinger && !this.isLoginWithFinger && !this.isAutologin) {\n                this.presentAlertConfirm();\n              }\n            })\n            .catch(e => {\n              console.log('error: ' + e);\n            });\n        })\n        .catch((error: any) => {\n          console.log(error);\n        });\n    });\n  }\n\n  async presentAlertConfirm() {\n    const alert = await this.alertController.create({\n      header: '¡Bienvenido!',\n      mode: 'ios',\n      message:\n        '<strong>Hola! </strong>Detectamos ' +\n        'que tu dispositivo cuenta con TouchID/FaceID ' +\n        '¿Te gustaría iniciar sesión la próxima vez con esta tecnología?',\n      buttons: [\n        {\n          text: 'Si',\n          handler: () => {\n            this.storageService.set('showLoginWithFinger', true);\n            this.storageService.set('activateFinger', true);\n            this.toastConfirmBiometric();\n          },\n        },\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          handler: () => {\n            this.storageService.set('showLoginWithFinger', false);\n            this.storageService.set('activateFinger', false);\n            this.storageService.remove('valueOne');\n            this.storageService.remove('valueTwo');\n            this.storageService.remove('valueThree');\n            this.alertCancelBiometric();\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  async toastConfirmBiometric() {\n    const toast = await this.toastController.create({\n      message: 'TouchID/FaceID Activado',\n      duration: 2000,\n    });\n    toast.present();\n  }\n\n  async alertCancelBiometric() {\n    const alert = await this.alertController.create({\n      header: '¡Recuerda!',\n      message: 'Puedes cambiar tus ajustes desde el menú configuración.',\n      buttons: [\n        {\n          text: 'Aceptar',\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  optionSelectedMenu(menuSelected) {\n    switch (menuSelected.title) {\n      case 'Comunicaciones':\n        this.router.navigateByUrl('u/list-communications');\n\n        break;\n      case 'Registro ejecución de actividades':\n        this.router.navigateByUrl('u/execLog');\n\n        break;\n      case 'Eventos Positiva':\n        this.router.navigateByUrl('u/consultEvent');\n\n        break;\n      case 'Actualizar Datos Empresa':\n        this.router.navigateByUrl('u/companies');\n\n        break;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MenuConfiguracionService {\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Este metodo permite hacer la petición al archivo donde estan las opciones para el menú de\n   * la vista de configuración\n   */\n  getMenuOpts() {\n    return this.http.get<any[]>('/assets/data/menuConfiguracion.json');\n  }\n\n  /**\n   * Este método permite consultar las opciones que existen en el menú principal home.page.html\n   */\n  getMenuMain() {\n    return this.http.get<any[]>('/assets/data/menuPrincipal-prod.json');\n  }\n\n  /**\n   * Este método permite consultar las opciones que existen en el menú de ejecución de\n   * actividades\n   */\n  getMenuExceActivities() {\n    return this.http.get<any[]>('/assets/data/menuExecuteActi.json');\n  }\n\n  /**\n   * Este método permitre consultar las opciones de ayuda en el menú de ejecución de\n   * actividades\n   */\n\n  getMenuHelpExceActivities() {\n    return this.http.get<any[]>('/assets/data/menuHelpExecuteActi.json');\n  }\n\n  /**\n   * Este método permite consultar las opciones cuando se selecciona una visita\n   */\n  getMenuActivitySelected() {\n    return this.http.get<any[]>('/assets/data/menuVisitActivity.json');\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Storage } from '@ionic/storage';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StorageService {\r\n  constructor(private storage: Storage) {}\r\n\r\n  async set(key: string, value: any): Promise<boolean> {\r\n    let result: any;\r\n\r\n    try {\r\n      result = await this.storage.set(key, value);\r\n    } catch {\r\n      result = false;\r\n    }\r\n\r\n    return result !== false;\r\n  }\r\n\r\n  async get(key: string): Promise<any> {\r\n    let result: any;\r\n\r\n    try {\r\n      result = await this.storage.get(key);\r\n    } catch {}\r\n\r\n    return result;\r\n  }\r\n\r\n  remove(key: string) {\r\n    this.storage.remove(key);\r\n  }\r\n\r\n  clear() {\r\n    this.storage.clear();\r\n  }\r\n}\r\n"]}