{"version":3,"sources":["webpack:///src/app/pages/communications/talk/talk-routing.module.ts","webpack:///src/app/pages/communications/talk/talk.module.ts","webpack:///src/app/pages/communications/talk/talk.page.html","webpack:///src/app/pages/communications/talk/talk.page.ts"],"names":["routes","path","component","TalkPageRoutingModule","forChild","imports","exports","TalkPageModule","declarations","TalkPage","alertController","talkService","cacheService","formBuilder","storage","popoverController","toastCtrl","elemRef","iconHabilitarUsuario","mostrarUsuarioSeleccionado","usuariosInactivosSeleccionados","idsUsuariosInactivosSeleccionados","ids√úsuariosPrivadosSeleccionados","mostrarOpcionesMenu","ocultarFooterPorRolesHistoricos","rolesHistoricos","getRolesHistoricos","getInfoUser","idUsuario","encontro","find","item","setTimeout","shadow","document","querySelector","usuarioPrivadoSelected","informacionConversacionSeleccionada","getSelectedConversation","createFormSend","validarEstadoUsuario","y","ionItems","elements","nativeElement","querySelectorAll","x","getElementsByClassName","getInfoConversation","formEnvioMensaje","group","send","mensajePrivado","pPKConversacion","PKConversacion","get","infoUsuarioIngresado","idUSuario","idRegistro","getMensajes","subscribe","response","IsOk","mostrarMensajes","Respuesta","mensajesConversacion","mensajes","forEach","element","mensaje","Privado","length","push","EsPrivadoPorMi","FKUsuario","parseInt","lista","closeSlidingItems","Usuarios","Estado","ip","changeStateUser","PKConversacionUsuario","notification","event","valorIngresado","data","usuariosInactivos","getUsuariosInactivos","create","cssClass","header","mode","inputs","buttons","text","handler","console","log","alert","present","onWillDismiss","values","undefined","usuarioSeleccionado","value","setValue","dataIngresada","usuariosConversacion","objUsuario","name","UsuarioNombre","type","label","handlerData","data2","usuarios","objUsuarios","valor","usuariosSeleccionados","usuario","i","toString","slidingItem","mensajeAResponser","close","message","duration","toast","nuevoMensaje","presentToastEmptyConversation","usuariosPrivados","idMensajePadre","PKConversacionMensaje","usuariosPrivadosRespuesta","PKUsuario","Mensaje","UidMensajeRespuesta","LstUsuariosMensajePrivado","LstUsuariosActivar","IP","saveMessageConversation","reset","idUser","usuariosLeidos","mostrarUsuariosLeidos","Leido","usuariosSinLeer","mostrarUsuariosNoLeidos","FechaCorta","nombre","EsPrivadoParaMi","filter","user","objEliminarMensaje","Eliminar","deleteMessage","alertNoSePudoEliminar","id","placeholder","editarMensaje","objMensajeAEditar","alertNoSePudoEditar","titulo","notificacion","backdropDismiss","onDidDismiss","activarUsuario","selector","templateUrl","styleUrls"],"mappings":"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","file":"communications-talk-talk-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TalkPage } from './talk.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TalkPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TalkPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { TalkPageRoutingModule } from './talk-routing.module';\nimport { TalkPage } from './talk.page';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, IonicModule, TalkPageRoutingModule],\n  declarations: [TalkPage],\n})\nexport class TalkPageModule {}\n","<ion-header>\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"2\">\n        <ion-toolbar color=\"tertiary\">\n          <ion-buttons slot=\"start\">\n            <ion-back-button color=\"primary\" mode=\"md\" defaultHref=\"u/list-communications\"></ion-back-button>\n          </ion-buttons>\n        </ion-toolbar>\n      </ion-col>\n      <ion-col size=\"10\">\n        <ion-title class=\"titulo\">Conversaci√≥n</ion-title>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-header>\n\n<ion-content #content>\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"12\">\n        <ion-list>\n          <ion-item lines=\"none\" color=\"secondary\">\n            <!-- <img [src]=\"menuOpt.icon\"> -->\n            <ion-avatar slot=\"start\">\n              <img src=\"../../../../assets/icon/icono_comunicaciones.svg\" class=\"imgMenu\" alt=\"iconItem\" />\n            </ion-avatar>\n            <div class=\"ion-text-center\">\n              <ion-label>Comunicaci√≥n</ion-label>\n            </div>\n          </ion-item>\n        </ion-list>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n\n  <ion-card mode=\"ios\" colines=\"none\" lor=\"tertiary\">\n    <ion-item lines=\"none\">\n      <ion-list>\n        <ion-item lines=\"none\" style=\"padding-top: 35px\">\n          <strong><ion-label position=\"stacked\">Raz√≥n Social</ion-label></strong>\n          <p>{{informacionConversacionSeleccionada.Empresa}}</p>\n        </ion-item>\n        <ion-item lines=\"none\">\n          <strong><ion-label position=\"stacked\">Tipo - N√∫mero documento</ion-label></strong>\n          <p>{{informacionConversacionSeleccionada.EmpresaTipoDocumento}} - {{informacionConversacionSeleccionada.EmpresaDocumento}}</p>\n        </ion-item>\n        <ion-item lines=\"none\">\n          <strong><ion-label position=\"stacked\">Tema de conversaci√≥n</ion-label></strong>\n          <p>{{informacionConversacionSeleccionada.Tema}}</p>\n        </ion-item>\n      </ion-list>\n      <ion-icon start=\"end\" (click)=\"activarUsuario()\" [name]=\"iconHabilitarUsuario\"></ion-icon>\n    </ion-item>\n  </ion-card>\n\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"12\">\n        <ion-list>\n          <ion-item lines=\"none\" color=\"secondary\">\n            <!-- <img [src]=\"menuOpt.icon\"> -->\n            <ion-avatar slot=\"start\">\n              <img src=\"../../../../assets/icon/icono_comunicaciones.svg\" class=\"imgMenu\" alt=\"iconItem\" />\n            </ion-avatar>\n            <div class=\"ion-text-center\">\n              <ion-label>Mensaje</ion-label>\n            </div>\n          </ion-item>\n        </ion-list>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n\n  <ion-list *ngFor=\"let item of mensajes\" #Lista>\n    <ion-item-sliding #slidingItem>\n      <ion-item-options side=\"start\">\n        <ion-item-option mode=\"ios\">\n          <svg\n            style=\"width: 2rem; height: 2rem; color: white\"\n            (click)=\"responderMensaje(item, slidingItem)\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"currentColor\"\n            class=\"bi bi-reply-fill\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path\n              d=\"M5.921 11.9 1.353 8.62a.719.719 0 0 1 0-1.238L5.921 4.1A.716.716 0 0 1 7 4.719V6c1.5 0 6 0 7 8-2.5-4.5-7-4-7-4v1.281c0 .56-.606.898-1.079.62z\"\n            />\n          </svg>\n          <!--<ion-icon slot=\"icon-only\" (click)=\"responderMensaje(item, slidingItem)\" name=\"open-outline\"></ion-icon>-->\n        </ion-item-option>\n      </ion-item-options>\n      <ion-item-options (ionSwipe)=\"cambioOptions(item)\">\n        <ion-item-option mode=\"ios\" side=\"end\">\n          <ion-icon slot=\"icon-only\" (click)=\"editarMensaje(item, slidingItem)\" name=\"create-outline\"></ion-icon>\n          <ion-icon slot=\"icon-only\" (click)=\"eliminarMensaje(item, slidingItem)\" name=\"trash-outline\"></ion-icon>\n        </ion-item-option>\n      </ion-item-options>\n\n      <ion-item\n        [color]=\"conversationColor(item)\"\n        [ngClass]=\"{ itemBackgroundPrivadoParaMi: item.EsPrivadoParaMi === true, itemBackgroundPrivadoPorMi: item.EsPrivadoPorMi === true } \"\n      >\n        <ion-grid [ngStyle]=\"{ 'text-align': textAlignConversation(item) }\">\n          <ion-row>\n            <ion-col size=\"12\">\n              <div class=\"parrafoMensaje\">\n                <p>\n                  <i style=\"font-size: 0.8rem\">{{item.UsuarioNombre}}</i>\n                </p>\n              </div>\n            </ion-col>\n          </ion-row>\n          <ion-row>\n            <ion-col size=\"12\">\n              <div class=\"parrafoMensaje\">\n                <p>\n                  <i style=\"font-size: 0.8rem\">{{item.FechaCorta}}</i>\n                </p>\n              </div>\n            </ion-col>\n          </ion-row>\n          <ion-row *ngIf=\"item.EsPrivadoParaMi || item.EsPrivadoPorMi \">\n            <ion-col size=\"12\">\n              <div class=\"parrafoMensaje\">\n                <p>\n                  <i style=\"font-size: 12px; color: #516f7a\">Comunicaci√≥n privada</i>\n                </p>\n              </div>\n            </ion-col>\n          </ion-row>\n          <ion-row *ngIf=\"item.MensajePadre\">\n            <ion-col size=\"12\">\n              <div>\n                <p>\n                  <i style=\"font-size: 12px; color: #516f7a\">\"{{item.MensajePadre.Mensaje}}\"</i>\n                </p>\n              </div>\n            </ion-col>\n          </ion-row>\n          <ion-row>\n            <ion-col size=\"12\">\n              <div>\n                <p>{{item.Mensaje}}</p>\n              </div>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n        <div style=\"width: fit-content; height: fit-content; margin-left: 1rem\">\n          <div style=\"width: inherit; height: inherit; margin-bottom: 1rem\">\n            <svg\n              (click)=\"mostrarInfoMensaje(item)\"\n              style=\"width: 2rem; height: 2rem; color: orange\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"currentColor\"\n              class=\"bi bi-chat-text\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path\n                d=\"M2.678 11.894a1 1 0 0 1 .287.801 10.97 10.97 0 0 1-.398 2c1.395-.323 2.247-.697 2.634-.893a1 1 0 0 1 .71-.074A8.06 8.06 0 0 0 8 14c3.996 0 7-2.807 7-6 0-3.192-3.004-6-7-6S1 4.808 1 8c0 1.468.617 2.83 1.678 3.894zm-.493 3.905a21.682 21.682 0 0 1-.713.129c-.2.032-.352-.176-.273-.362a9.68 9.68 0 0 0 .244-.637l.003-.01c.248-.72.45-1.548.524-2.319C.743 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7-3.582 7-8 7a9.06 9.06 0 0 1-2.347-.306c-.52.263-1.639.742-3.468 1.105z\"\n              />\n              <path\n                d=\"M4 5.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zM4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8zm0 2.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 1-.5-.5z\"\n              />\n            </svg>\n            <!-- <ion-icon style=\"width: 2rem; height: 2rem;\" slot=\"end\" (click)=\"mostrarInfoMensaje(item)\" name=\"add-circle-outline\"></ion-icon>-->\n          </div>\n          <div style=\"width: inherit; height: inherit\">\n            <ion-icon\n              style=\"width: 2rem; height: 2rem\"\n              *ngIf=\"!allUsersReadMessage(item)\"\n              [ngStyle]=\"{'color': (item.LeidoPorMi || item.FKUsuario != idUsuario) ? 'orange':''}\"\n              slot=\"end\"\n              name=\"checkmark\"\n            ></ion-icon>\n            <ion-icon\n              style=\"width: 2rem; height: 2rem; color: orange\"\n              *ngIf=\"allUsersReadMessage(item)\"\n              name=\"checkmark-done-outline\"\n              slot=\"end\"\n            ></ion-icon>\n          </div>\n        </div>\n      </ion-item>\n    </ion-item-sliding>\n  </ion-list>\n</ion-content>\n\n<ion-footer class=\"ion-no-border\" *ngIf=\"ocultarFooterPorRolesHistoricos\">\n  <form [formGroup]=\"formEnvioMensaje\">\n    <!-- <ion-item lines=\"none\">\n      <ion-label position=\"stacked\">Personas para mensaje privado.</ion-label>\n      <ion-select  \n                  class=\"bg-light mt-3 rounded pl-1 pr-1\" \n                  mode=\"ios\"\n                  formControlName=\"mensajePrivado\"\n                  interface=\"action-sheet\" \n                  cancelText=\"CANCELAR\"\n                  placeholder=\"Personas para mensajes privados\">\n        <ion-select-option \n                          value=\"prueba\"> Prueba </ion-select-option>\n      </ion-select>\n    </ion-item> -->\n    <ion-item color=\"tertiary\" class=\"itemResponder\" *ngIf=\"mensajeAResponser\">\n      <ion-label position=\"stacked\">Respondiendo a {{mensajeAResponser.UsuarioNombre}}</ion-label>\n      <p>{{mensajeAResponser.Mensaje}}</p>\n      <ion-icon name=\"close-circle-outline\" (click)=\"cerrarMensajeResponder()\" size=\"small\" slot=\"end\"></ion-icon>\n    </ion-item>\n\n    <ion-item lines=\"none\">\n      <ion-grid>\n        <ion-row *ngIf=\"usuarioPrivadoSelected\">\n          <ion-col size=\"12\">\n            <ion-item lines=\"none\">\n              <p style=\"font-size: 13px; margin: 0px\"><i>Mensaje privado a: {{usuarioPrivadoSelected}}</i></p>\n              <ion-icon name=\"close-circle-outline\" (click)=\"cleanPrivateSelected()\" size=\"small\" slot=\"end\"></ion-icon>\n            </ion-item>\n          </ion-col>\n        </ion-row>\n        <ion-row>\n          <ion-col size=\"12\">\n            <!-- <textarea style=\"width: 300px; height: 100p;\" formControlName=\"send\" (keyup)=\"onKeyDownHandler($event)\" class=\"bg-light mt-3 pl-1 textMensaje\" rows=\"5\"></textarea> -->\n            <textarea\n              style=\"height: 100p; border-radius: 10px\"\n              formControlName=\"send\"\n              (input)=\"onKeyDownHandler($event)\"\n              class=\"bg-light mt-3 pl-1 textMensaje\"\n              rows=\"5\"\n            ></textarea>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-item>\n  </form>\n\n  <ion-grid>\n    <ion-row justify-content-around>\n      <ion-col size=\"6\">\n        <ion-button (click)=\"openModalUserPrivate()\" expand=\"block\" color=\"tertiary\"> Privado </ion-button>\n      </ion-col>\n      <ion-col size=\"6\">\n        <ion-button expand=\"block\" color=\"primary\" (click)=\"enviarMensaje(this.formEnvioMensaje.value)\"> Enviar </ion-button>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-footer>\n","import { AfterViewInit, Component, ElementRef, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { IonItem, IonItemSliding, IonList, ToastController } from '@ionic/angular';\nimport { AlertController } from '@ionic/angular';\nimport { PopoverController } from '@ionic/angular';\nimport { InactiveUsersTalkComponent } from '../../../components/inactive-users-talk/inactive-users-talk.component';\nimport { TalkService } from '../../../services/talk/talk.service';\nimport { Storage } from '@ionic/storage';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CacheService } from '../../../services/cache/cache.service';\nimport { injectStyles } from 'shadow-dom-inject-styles';\n\n@Component({\n  selector: 'app-talk',\n  templateUrl: './talk.page.html',\n  styleUrls: ['./talk.page.scss'],\n})\nexport class TalkPage implements OnInit, AfterViewInit {\n  formEnvioMensaje: FormGroup;\n\n  @ViewChild('content') private content: any;\n  @ViewChild('Lista') lista: IonList;\n  mensajeAResponser: any;\n  enviarNuevoMensaje: string;\n  iconHabilitarUsuario = 'lock-open-outline';\n  mensajes: any;\n  mostrarUsuarioSeleccionado = false;\n  usuarioSeleccionado: any;\n  usuarioPrivadoSelected: any;\n  informacionConversacionSeleccionada: any;\n  usuariosInactivosSeleccionados: any[] = [];\n  idsUsuariosInactivosSeleccionados: any[] = [];\n  ids√úsuariosPrivadosSeleccionados: any[] = [];\n\n  mostrarOpcionesMenu = true;\n\n  ocultarFooterPorRolesHistoricos = true;\n\n  idUsuario: number;\n\n  @ViewChildren(IonItem) ionItems: QueryList<IonItem>;\n\n  constructor(\n    public alertController: AlertController,\n    private talkService: TalkService,\n    private cacheService: CacheService,\n    private formBuilder: FormBuilder,\n    private storage: Storage,\n    public popoverController: PopoverController,\n    private toastCtrl: ToastController,\n    private elemRef: ElementRef\n  ) {}\n\n  async ionViewWillEnter() {\n    const rolesHistoricos = this.talkService.getRolesHistoricos();\n    this.idUsuario = await this.getInfoUser();\n\n    const encontro = rolesHistoricos.find(item => item === this.idUsuario);\n\n    if (encontro) {\n      this.ocultarFooterPorRolesHistoricos = false;\n    }\n\n    setTimeout(() => {\n      debugger;\n      let shadow = document.querySelector('.conversation-color') as HTMLElement;\n    }, 200);\n  }\n\n  ngOnInit() {\n    this.usuarioPrivadoSelected = '';\n    this.informacionConversacionSeleccionada = this.talkService.getSelectedConversation();\n    this.createFormSend();\n    this.validarEstadoUsuario();\n  }\n\n  ngAfterViewInit() {\n    debugger;\n    let y = this.ionItems;\n\n    let shadow = document.querySelector('.conversation-color') as HTMLElement;\n\n    let elements = this.elemRef.nativeElement.querySelectorAll('.conversation-color');\n    let x = document.getElementsByClassName('conversation-color');\n  }\n\n  ionViewDidEnter() {\n    debugger;\n\n    this.getInfoConversation();\n\n    let y = this.ionItems;\n\n    let shadow = document.querySelector('.conversation-color') as HTMLElement;\n\n    let elements = this.elemRef.nativeElement.querySelectorAll('.conversation-color');\n    let x = document.getElementsByClassName('conversation-color');\n  }\n\n  createFormSend() {\n    this.formEnvioMensaje = this.formBuilder.group({\n      send: [''],\n      mensajePrivado: [''],\n    });\n  }\n\n  async getInfoConversation() {\n    const pPKConversacion = this.informacionConversacionSeleccionada.PKConversacion;\n    const infoUsuarioIngresado = await this.storage.get('sesion');\n    const idUSuario = infoUsuarioIngresado.idRegistro;\n    debugger;\n    // tslint:disable-next-line: deprecation\n    this.talkService.getMensajes(pPKConversacion, idUSuario).subscribe(async response => {\n      debugger;\n      if (response.IsOk === true) {\n        const mensajesConversacion = await this.mostrarMensajes(response.Respuesta);\n        this.mensajes = mensajesConversacion;\n      }\n    });\n  }\n\n  async mostrarMensajes(mensajes) {\n    debugger;\n    const idUsuario = await this.getInfoUser();\n    const mensajesConversacion = [];\n    mensajes.forEach(element => {\n      debugger;\n      const mensaje = element;\n      if (mensaje.Privado.length === 0) {\n        mensajesConversacion.push(mensaje);\n      } else {\n        if (mensaje.EsPrivadoPorMi) {\n          mensajesConversacion.push(mensaje);\n        } else {\n          const encontro = mensaje.Privado.find(item => item.FKUsuario === idUsuario);\n          if (encontro) {\n            mensajesConversacion.push(mensaje);\n          }\n        }\n      }\n    });\n\n    return mensajesConversacion;\n  }\n\n  async cambioOptions(item) {\n    const infoUsuarioIngresado = await this.storage.get('sesion');\n    const idUSuario = parseInt(infoUsuarioIngresado.idRegistro, 10);\n    if (item.FKUsuario !== idUSuario) {\n      this.lista.closeSlidingItems();\n    }\n  }\n\n  async validarEstadoUsuario() {\n    const infoUsuarioIngresado = await this.storage.get('sesion');\n    const idUSuario = parseInt(infoUsuarioIngresado.idRegistro, 10);\n    const encontro = this.informacionConversacionSeleccionada.Usuarios.find(item => item.FKUsuario === idUSuario);\n    if (encontro) {\n      if (encontro.Estado === 'A') {\n        this.iconHabilitarUsuario = 'lock-open-outline';\n      } else {\n        this.iconHabilitarUsuario = 'lock-closed-outline';\n      }\n    }\n  }\n\n  async activarUsuario() {\n    // const ip = this.cacheService.getIpAddress();\n    const ip = '';\n    const infoUsuarioIngresado = await this.storage.get('sesion');\n    const idUSuario = parseInt(infoUsuarioIngresado.idRegistro, 10);\n\n    const encontro = this.informacionConversacionSeleccionada.Usuarios.find(item => item.FKUsuario === idUSuario);\n\n    if (encontro) {\n      if (encontro.Estado === 'A') {\n        this.iconHabilitarUsuario = 'lock-open-outline';\n        // tslint:disable-next-line: max-line-length\n        this.talkService\n          .changeStateUser(encontro.PKConversacionUsuario, this.informacionConversacionSeleccionada.PKConversacion, 'I', ip, idUSuario)\n          .subscribe(response => {\n            if (response.IsOk === true) {\n              this.iconHabilitarUsuario = 'lock-closed-outline';\n              this.notification('Atenci√≥n', 'Se actualiz√≥ el estado del usuario');\n            }\n          });\n      } else {\n        this.iconHabilitarUsuario = 'lock-closed-outline';\n        // tslint:disable-next-line: max-line-length\n        this.talkService\n          .changeStateUser(encontro.PKConversacionUsuario, this.informacionConversacionSeleccionada.PKConversacion, 'A', ip, idUSuario)\n          .subscribe(response => {\n            if (response.IsOk === true) {\n              this.iconHabilitarUsuario = 'lock-open-outline';\n              this.notification('Atenci√≥n', 'Se actualiz√≥ el estado del usuario');\n            }\n          });\n      }\n    }\n  }\n\n  async onKeyDownHandler(event) {\n    let valorIngresado = event.data;\n    if (valorIngresado === '@') {\n      const usuariosInactivos = this.getUsuariosInactivos();\n\n      if (usuariosInactivos.length > 0) {\n        const alert = await this.alertController.create({\n          cssClass: 'my-custom-class',\n          header: 'Usuarios Inactivos',\n          mode: 'ios',\n          inputs: usuariosInactivos,\n          buttons: [\n            {\n              text: 'Cancelar',\n              cssClass: 'secondary',\n              handler: () => {\n                console.log('Confirm Cancel');\n              },\n            },\n            {\n              text: 'Aceptar',\n              handler: () => {\n                console.log('Confirm Aceptar');\n              },\n            },\n          ],\n        });\n\n        await alert.present();\n        const { data } = await alert.onWillDismiss();\n        if (data.values !== undefined) {\n          this.usuariosInactivosSeleccionados.push(data.values);\n          this.mostrarUsuarioSeleccionado = true;\n          this.usuarioSeleccionado = data.values;\n          if (this.formEnvioMensaje.get('send').value === '') {\n            this.formEnvioMensaje.get('send').setValue(`@${this.usuarioSeleccionado}`);\n          } else {\n            const dataIngresada = this.formEnvioMensaje.get('send').value;\n            this.formEnvioMensaje.get('send').setValue(`@${this.usuarioSeleccionado} ${dataIngresada}`);\n          }\n        }\n      } else {\n        this.notification('Atenci√≥n', 'La comunicaci√≥n seleccionada no tiene usuarios inactivos');\n      }\n    }\n    valorIngresado = '';\n  }\n\n  getUsuariosInactivos() {\n    const usuariosInactivos = [];\n    const usuariosConversacion = this.talkService.getSelectedConversation();\n    usuariosConversacion.Usuarios.forEach(element => {\n      if (element.Estado === 'I') {\n        const objUsuario = {\n          name: `${element.UsuarioNombre}`,\n          type: 'radio',\n          label: `${element.UsuarioNombre}`,\n          value: `${element.UsuarioNombre}`,\n        };\n        usuariosInactivos.push(objUsuario);\n      }\n    });\n\n    return usuariosInactivos;\n  }\n\n  async openModalUserPrivate() {\n    let data2: any;\n    // tslint:disable-next-line: no-shadowed-variable\n    const handlerData = data => {\n      data2 = data;\n    };\n    const usuarios = [];\n    this.informacionConversacionSeleccionada.Usuarios.forEach(element => {\n      const objUsuarios = {\n        name: `${element.UsuarioNombre}`,\n        type: 'checkbox',\n        label: `${element.UsuarioNombre}`,\n        value: `${element.UsuarioNombre}`,\n        valor: `${element}`,\n      };\n      usuarios.push(objUsuarios);\n    });\n\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      mode: 'ios',\n      header: 'Seleccione persona para el mensaje privado',\n      inputs: usuarios,\n      buttons: [\n        {\n          text: 'Cancelar',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          },\n        },\n        {\n          text: 'Aceptar',\n          handler: handlerData,\n        },\n      ],\n    });\n\n    await alert.present();\n\n    const { data } = await alert.onWillDismiss();\n\n    if (data.values.length >= 1) {\n      const usuariosSeleccionados = data.values;\n\n      this.ids√úsuariosPrivadosSeleccionados = [];\n      const usuariosConversacion = this.informacionConversacionSeleccionada.Usuarios;\n\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i < usuariosConversacion.length; i++) {\n        const usuario = usuariosConversacion[i];\n\n        const encontro = usuariosSeleccionados.find(item => item === usuario.UsuarioNombre);\n\n        if (encontro) {\n          this.ids√úsuariosPrivadosSeleccionados.push(usuario.FKUsuario);\n        }\n      }\n\n      this.usuarioPrivadoSelected = usuariosSeleccionados.toString();\n    }\n  }\n\n  cleanPrivateSelected() {\n    this.usuarioPrivadoSelected = '';\n  }\n\n  responderMensaje(mensaje, slidingItem: IonItemSliding) {\n    this.mensajeAResponser = mensaje;\n    // this.usuarioPrivadoSelected = mensaje;\n    slidingItem.close();\n  }\n\n  private async presentToastEmptyConversation() {\n    const toast = await this.toastCtrl.create({\n      message: 'Debes diligenciar el cuerpo de la comunicaci√≥n.',\n      duration: 3000,\n    });\n    toast.present();\n  }\n\n  async enviarMensaje(nuevoMensaje) {\n    debugger;\n    if (!nuevoMensaje.send || nuevoMensaje.send.length == 0) {\n      this.presentToastEmptyConversation();\n      return;\n    }\n\n    const idUsuario = await this.getInfoUser();\n    let usuariosPrivados = this.ids√úsuariosPrivadosSeleccionados;\n    if (usuariosPrivados.length >= 1) {\n      usuariosPrivados = this.ids√úsuariosPrivadosSeleccionados;\n    } else {\n      usuariosPrivados = [];\n    }\n\n    let idMensajePadre = 0;\n    if (this.mensajeAResponser) {\n      idMensajePadre = this.mensajeAResponser.PKConversacionMensaje;\n      if (this.mensajeAResponser.Privado.length >= 1) {\n        const usuariosPrivadosRespuesta = [];\n        this.mensajeAResponser.Privado.forEach(element => {\n          usuariosPrivadosRespuesta.push(element.FKUsuario);\n        });\n        usuariosPrivados = usuariosPrivadosRespuesta;\n      }\n    }\n\n    if (this.usuariosInactivosSeleccionados.length >= 1) {\n      const usuariosConversacion = this.informacionConversacionSeleccionada.Usuarios;\n\n      usuariosConversacion.forEach(element => {\n        const encontro = this.usuariosInactivosSeleccionados.find(item => item === element.UsuarioNombre);\n\n        if (encontro) {\n          this.idsUsuariosInactivosSeleccionados.push(element.FKUsuario);\n        }\n      });\n    }\n\n    const mensaje = {\n      PKConversacionMensaje: -1,\n      PKConversacion: this.informacionConversacionSeleccionada.PKConversacion,\n      PKUsuario: idUsuario,\n      Mensaje: nuevoMensaje.send,\n      UidMensajeRespuesta: idMensajePadre,\n      LstUsuariosMensajePrivado: usuariosPrivados,\n      LstUsuariosActivar: this.idsUsuariosInactivosSeleccionados,\n      IP: '000.000.000.000',\n    };\n\n    // tslint:disable-next-line: deprecation\n    this.talkService.saveMessageConversation(mensaje).subscribe(response => {\n      debugger;\n      if (response.IsOk === true) {\n        this.formEnvioMensaje.get('send').reset();\n        this.mensajeAResponser = '';\n        this.ids√úsuariosPrivadosSeleccionados = [];\n        this.idsUsuariosInactivosSeleccionados = [];\n        this.usuarioPrivadoSelected = '';\n        this.getInfoConversation();\n      }\n    });\n  }\n\n  cerrarMensajeResponder() {\n    this.mensajeAResponser = undefined;\n  }\n\n  async mostrarInfoMensaje(mensaje) {\n    const idUser: number = await this.getInfoUser();\n    debugger;\n    const usuariosLeidos = this.mostrarUsuariosLeidos(mensaje.FKUsuario, mensaje.Leido);\n    const usuariosSinLeer = this.mostrarUsuariosNoLeidos(mensaje.FKUsuario, mensaje.Leido);\n    const alert = await this.alertController.create({\n      cssClass: 'textoParrafo',\n      mode: 'ios',\n      header: 'Detalle del mensaje',\n      message: `<p>\n      <strong>Mensaje: </strong> ${mensaje.Mensaje}\n      <strong>Enviado por: </strong> ${mensaje.UsuarioNombre}\n      <strong>Fecha: </strong> ${mensaje.FechaCorta}\n      <strong style=\"color:blue\">Leido por: </strong> ${usuariosLeidos}\n      <strong>Pendiente por leer: </strong> ${usuariosSinLeer}\n      </p>`,\n      buttons: ['ACEPTAR'],\n    });\n\n    await alert.present();\n  }\n\n  mostrarUsuariosLeidos(idUser: number, usuarios) {\n    const usuariosLeidos = [];\n    usuarios.forEach(element => {\n      debugger;\n      if (element.FKUsuario != idUser) {\n        const nombre = element.UsuarioNombre;\n        usuariosLeidos.push(nombre);\n      }\n    });\n    return usuariosLeidos.toString() == '' ? 'Ninguno.' : usuariosLeidos.toString();\n  }\n\n  allUsersReadMessage(message): boolean {\n    return this.informacionConversacionSeleccionada.Usuarios.length == message.Leido.length;\n  }\n\n  conversationColor(message): string {\n    if (this.idUsuario == message.FKUsuario) {\n      if (message.EsPrivadoPorMi) return 'chatgreen';\n      else return 'chatblue';\n    } else {\n      if (message.EsPrivadoParaMi) return 'chatgreen';\n      else return 'chatwhite';\n    }\n  }\n\n  textAlignConversation(message): string {\n    return this.idUsuario == message.FKUsuario ? 'left' : 'right';\n  }\n\n  mostrarUsuariosNoLeidos(idUser, usuarios) {\n    let usuariosSinLeer = [];\n    const usuariosConversacion = this.informacionConversacionSeleccionada.Usuarios;\n\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < usuariosConversacion.length; i++) {\n      const usuario = usuariosConversacion[i];\n      const encontro = usuarios.find(item => item.FKUsuario === usuario.FKUsuario);\n      if (!encontro) {\n        usuariosSinLeer.push(usuario.UsuarioNombre);\n      }\n    }\n    usuariosSinLeer.filter(user => user.FKUsuario != idUser);\n\n    return usuariosSinLeer.toString() == '' ? 'Ninguno.' : usuariosSinLeer.toString();\n  }\n\n  async eliminarMensaje(mensaje, slidingItem: IonItemSliding) {\n    const idUsuario = await this.getInfoUser();\n    slidingItem.close();\n    if (mensaje.Leido.length === 0) {\n      const alert = await this.alertController.create({\n        mode: 'ios',\n        header: 'Eliminar Mensaje',\n        message: `Esta seguro que desea eliminar el mensaje de esta conversaci√≥n`,\n        buttons: [\n          {\n            text: 'CANCELAR',\n          },\n          {\n            text: 'ACEPTAR',\n            handler: () => {\n              const objEliminarMensaje = {\n                PKConversacionMensaje: mensaje.PKConversacionMensaje,\n                PKUsuario: idUsuario,\n                Mensaje: mensaje.Mensaje,\n                Eliminar: true,\n              };\n              // tslint:disable-next-line: deprecation\n              this.talkService.deleteMessage(objEliminarMensaje).subscribe(response => {\n                if (response.IsOk === true) {\n                  this.notification('Atenci√≥n', 'Mensaje eliminado con exito');\n                  this.getInfoConversation();\n                }\n              });\n            },\n          },\n        ],\n      });\n      await alert.present();\n    } else {\n      const alertNoSePudoEliminar = await this.alertController.create({\n        mode: 'ios',\n        header: 'Eliminar Mensaje',\n        message: `No se puede eliminar este mensaje, ya fue visto por algun integrante de la conversaci√≥n.`,\n        buttons: ['ACEPTAR'],\n      });\n      await alertNoSePudoEliminar.present();\n    }\n  }\n\n  async editarMensaje(mensaje, slidingItem: IonItemSliding) {\n    const idUsuario = await this.getInfoUser();\n    slidingItem.close();\n\n    if (mensaje.Leido.length === 0) {\n      const alert = await this.alertController.create({\n        mode: 'ios',\n        header: 'Editar Mensaje',\n        message: `${mensaje.Mensaje}`,\n        inputs: [\n          {\n            name: 'editarMensaje',\n            id: 'editarMensaje',\n            type: 'textarea',\n            placeholder: 'Editar Mensaje',\n          },\n        ],\n        buttons: [\n          {\n            text: 'Cancelar',\n            handler: () => {\n              console.log('editar Cancel');\n            },\n          },\n          {\n            text: 'Aceptar',\n            handler: data => {\n              const nuevoMensaje = data.editarMensaje;\n              const objMensajeAEditar = {\n                PKConversacionMensaje: mensaje.PKConversacionMensaje,\n                PKUsuario: idUsuario,\n                Mensaje: nuevoMensaje,\n                Eliminar: false,\n              };\n              // tslint:disable-next-line: deprecation\n              this.talkService.deleteMessage(objMensajeAEditar).subscribe(response => {\n                if (response.IsOk === true) {\n                  this.notification('Atenci√≥n', 'Mensaje editado con exito');\n                  this.getInfoConversation();\n                }\n              });\n            },\n          },\n        ],\n      });\n\n      await alert.present();\n    } else {\n      const alertNoSePudoEditar = await this.alertController.create({\n        mode: 'ios',\n        header: 'Editar Mensaje',\n        message: `No se puede editar este mensaje, ya fue visto por alg√∫n integrante de la conversaci√≥n.`,\n        buttons: ['ACEPTAR'],\n      });\n      await alertNoSePudoEditar.present();\n    }\n  }\n\n  async notification(titulo, notificacion) {\n    const alert = await this.alertController.create({\n      header: titulo,\n      backdropDismiss: false,\n      mode: 'ios',\n      message: notificacion,\n      buttons: ['ACEPTAR'],\n    });\n\n    await alert.present();\n    alert.onDidDismiss();\n  }\n\n  async getInfoUser(): Promise<number> {\n    const infoUsuarioIngresado = await this.storage.get('sesion');\n    const idUSuario = parseInt(infoUsuarioIngresado.idRegistro, 10);\n    return idUSuario;\n  }\n}\n"]}