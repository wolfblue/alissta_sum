{"version":3,"sources":["webpack:///src/app/pages/educa/info-register-event-manual/info-register-event-manual-routing.module.ts","webpack:///src/app/pages/educa/info-register-event-manual/info-register-event-manual.module.ts","webpack:///src/app/pages/educa/info-register-event-manual/info-register-event-manual.page.html","webpack:///src/app/pages/educa/info-register-event-manual/info-register-event-manual.page.ts"],"names":["routes","path","component","InfoRegisterEventManualPageRoutingModule","forChild","imports","exports","MY_FORMATS","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","InfoRegisterEventManualPageModule","provide","useValue","useClass","deps","declarations","providers","InfoRegisterEventManualPage","cacheService","eventService","router","alertController","formBuilder","documentsType","typeCharges","typeSex","getDocumentsTypeUser","getTypesCharge","getTypesSex","sessionStorage","infoResponsibleManualEvent","createFormInfoUserRegister","isResponsibleEmpty","infoUser","JSON","createFormInfoUserRegisterWithInformation","setTimeout","formInfoUserRegisterEvent","patchValue","tipoDocEmp","strTipoIdentificacionEmpresa","documentoEmp","strNumeroDocumentoEmpresa","razonSocial","strRazonSocial","tipoDoc","strTipoDocumentoEmpleado","idPersona","strNumeroDocumentoEmpleado","nombre","strNombreEmpleado","cargo","FK_ID_Cargo","edad","dtmFechaNacimiento","sexo","FK_ID_Sexo","telefono","strTelefono","email","strEmail","nombreEvento","formInfoUserRegisterEventEmpty","group","required","pattern","value","disabled","getDocumentType","subscribe","response","Documentos","Cargos","Sexos","newResponsible","eventoId","newRegisterEvent","FK_ID_Evento","toString","fechaNacimiento","controls","toISOString","split","newRegister","registerNewResponsibleWhenIsEmpty","documentTypeCompany","validateDocumentType","newResponsibleEvent","registerResponsibleManual","confirmationRegister","navigateByUrl","err","resultadoAlerta","mensaje","create","header","mode","message","buttons","alert","present","selector","templateUrl","styleUrls"],"mappings":"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","file":"default~educa-info-register-event-manual-info-register-event-manual-module~info-register-event-manua~14912bf9-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InfoRegisterEventManualPage } from './info-register-event-manual.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InfoRegisterEventManualPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InfoRegisterEventManualPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InfoRegisterEventManualPageRoutingModule } from './info-register-event-manual-routing.module';\n\nimport { InfoRegisterEventManualPage } from './info-register-event-manual.page';\nimport { MAT_DATE_LOCALE, MAT_DATE_FORMATS, DateAdapter } from '@angular/material';\nimport { MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\n\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\nimport { MatDatepickerModule, MatNativeDateModule, MatFormFieldModule, MatInputModule } from '@angular/material';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    InfoRegisterEventManualPageRoutingModule,\n\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    MatInputModule,\n  ],\n  declarations: [InfoRegisterEventManualPage],\n  providers: [\n    { provide: MAT_DATE_LOCALE, useValue: 'es-ES' },\n    {\n      provide: DateAdapter,\n      useClass: MomentDateAdapter,\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS],\n    },\n\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n  ],\n})\nexport class InfoRegisterEventManualPageModule {}\n","<ion-header>\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"2\">\n        <ion-toolbar color=\"tertiary\">\n          <ion-buttons slot=\"start\">\n            <ion-back-button color=\"primary\" mode=\"md\" defaultHref=\"/\"></ion-back-button>\n          </ion-buttons>\n        </ion-toolbar>\n      </ion-col>\n      <ion-col size=\"10\">\n        <ion-title class=\"titulo\">Registro Manual</ion-title>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-header>\n\n<ion-content class=\"ion-padding backgroundContent\">\n  <div class=\"ion-text-center\">\n    <h3 *ngIf=\"nombreEvento\">{{nombreEvento}}</h3>\n  </div>\n\n  <!-- Formulario para cuando encuentre el asistente -->\n  <form *ngIf=\"infoUser\" [formGroup]=\"formInfoUserRegisterEvent\">\n    <ion-card mode=\"ios\">\n      <ion-card-header>\n        <div class=\"ion-text-center\">\n          <ion-card-title>Información Empleador</ion-card-title>\n        </div>\n      </ion-card-header>\n      <ion-card-content>\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Tipo Identificación</ion-label>\n          <ion-select formControlName=\"tipoDocEmp\" interface=\"action-sheet\" class=\"bg-light mt-3 rounded pl-1 pr-1\">\n            <ion-select-option *ngIf=\"infoUser\" [value]=\"infoUser.strTipoIdentificacionEmpresa\"\n              >{{infoUser.strTipoIdentificacionEmpresa}}</ion-select-option\n            >\n          </ion-select>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Número identificación</ion-label>\n          <ion-input formControlName=\"documentoEmp\" class=\"bg-light mt-3 rounded pl-1 pr-1\"></ion-input>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Razón Social</ion-label>\n          <ion-input formControlName=\"razonSocial\" class=\"bg-light mt-3 rounded pl-1 pr-1\"></ion-input>\n        </ion-item>\n      </ion-card-content>\n    </ion-card>\n\n    <ion-card mode=\"ios\">\n      <ion-card-header>\n        <div class=\"ion-text-center\">\n          <ion-card-title>Información Empleado</ion-card-title>\n        </div>\n      </ion-card-header>\n      <ion-card-content>\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Tipo Identificación</ion-label>\n          <ion-select formControlName=\"tipoDoc\" interface=\"action-sheet\" class=\"bg-light mt-3 rounded pl-1 pr-1\">\n            <ion-select-option *ngIf=\"infoUser\" [value]=\"infoUser.strTipoDocumentoEmpleado\"\n              >{{infoUser.strTipoDocumentoEmpleado}}</ion-select-option\n            >\n          </ion-select>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Número identificación</ion-label>\n          <ion-input formControlName=\"idPersona\" class=\"bg-light mt-3 rounded pl-1 pr-1\"></ion-input>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Nombre Completo</ion-label>\n          <ion-input formControlName=\"nombre\" class=\"bg-light mt-3 rounded pl-1 pr-1\"></ion-input>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Sexo</ion-label>\n          <ion-select\n            formControlName=\"sexo\"\n            class=\"bg-light mt-3 rounded pl-1 pr-1\"\n            mode=\"ios\"\n            interface=\"action-sheet\"\n            cancelText=\"CANCELAR\"\n            placeholder=\"Sexo\"\n          >\n            <ion-select-option *ngFor=\"let sex of typeSex\" [value]=\"sex.FK_ID_Sexo\">{{sex.strSexo}}</ion-select-option>\n          </ion-select>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Edad</ion-label>\n          <!-- <ion-input formControlName=\"edad\" \n                     placeholder=\"edad\" \n                     class=\"bg-light mt-3 rounded pl-1 pr-1\" \n                     mode=\"ios\"\n            interface=\"action-sheet\" cancelText=\"CANCELAR\"></ion-input> -->\n          <mat-form-field style=\"width: 100%\" class=\"bg-light mt-3 rounded pl-1 pr-1\">\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"edad\" />\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n          </mat-form-field>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Cargo</ion-label>\n          <ion-select\n            *ngIf=\"infoUser\"\n            formControlName=\"cargo\"\n            class=\"bg-light mt-3 rounded pl-1 pr-1\"\n            placeholder=\"Cargo\"\n            mode=\"ios\"\n            interface=\"action-sheet\"\n            cancelText=\"CANCELAR\"\n          >\n            <ion-select-option *ngFor=\"let charge of typeCharges\" [value]=\"charge.FK_ID_Cargo\">{{charge.strCargo}}</ion-select-option>\n          </ion-select>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Teléfono</ion-label>\n          <ion-input formControlName=\"telefono\" placeholder=\"Teléfono\" class=\"bg-light mt-3 rounded pl-1 pr-1\"> </ion-input>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Correo Electrónico</ion-label>\n          <ion-input formControlName=\"email\" placeholder=\"Correo electrónico\" class=\"bg-light mt-3 rounded pl-1 pr-1\"> </ion-input>\n        </ion-item>\n      </ion-card-content>\n    </ion-card>\n  </form>\n\n  <!-- formulario para cuando no encuentre usuario -->\n  <form *ngIf=\"!infoUser\" [formGroup]=\"formInfoUserRegisterEventEmpty\">\n    <ion-card mode=\"ios\">\n      <ion-card-header>\n        <div class=\"ion-text-center\">\n          <ion-card-title>Información Empleador</ion-card-title>\n        </div>\n      </ion-card-header>\n      <ion-card-content>\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Tipo Identificación</ion-label>\n          <ion-select formControlName=\"tipoDocEmp\" interface=\"action-sheet\" class=\"bg-light mt-3 rounded pl-1 pr-1\">\n            <ion-select-option *ngFor=\"let type of documentsType\" [value]=\"type.SiglaDocumento\"\n              >{{type.strTipoDocumento}}</ion-select-option\n            >\n          </ion-select>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Número identificación</ion-label>\n          <ion-input formControlName=\"documentoEmp\" class=\"bg-light mt-3 rounded pl-1 pr-1\"></ion-input>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Razón Social</ion-label>\n          <ion-input formControlName=\"razonSocial\" class=\"bg-light mt-3 rounded pl-1 pr-1\"></ion-input>\n        </ion-item>\n      </ion-card-content>\n    </ion-card>\n\n    <ion-card mode=\"ios\">\n      <ion-card-header>\n        <div class=\"ion-text-center\">\n          <ion-card-title>Información Empleado</ion-card-title>\n        </div>\n      </ion-card-header>\n      <ion-card-content>\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Tipo Identificación</ion-label>\n          <ion-select formControlName=\"tipoDoc\" interface=\"action-sheet\" class=\"bg-light mt-3 rounded pl-1 pr-1\">\n            <ion-select-option *ngFor=\"let type of documentsType\" [value]=\"type.SiglaDocumento\"\n              >{{type.strTipoDocumento}}</ion-select-option\n            >\n          </ion-select>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Número identificación</ion-label>\n          <ion-input formControlName=\"idPersona\" class=\"bg-light mt-3 rounded pl-1 pr-1\"></ion-input>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Nombre Completo</ion-label>\n          <ion-input formControlName=\"nombre\" class=\"bg-light mt-3 rounded pl-1 pr-1\"></ion-input>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Sexo</ion-label>\n          <ion-select\n            formControlName=\"sexo\"\n            class=\"bg-light mt-3 rounded pl-1 pr-1\"\n            mode=\"ios\"\n            interface=\"action-sheet\"\n            cancelText=\"CANCELAR\"\n            placeholder=\"Sexo\"\n          >\n            <ion-select-option *ngFor=\"let sex of typeSex\" [value]=\"sex.FK_ID_Sexo\">{{sex.strSexo}}</ion-select-option>\n          </ion-select>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Fecha de nacimiento</ion-label>\n          <!-- <ion-input formControlName=\"edad\" \n                     placeholder=\"edad\" \n                     class=\"bg-light mt-3 rounded pl-1 pr-1\" \n                     mode=\"ios\"\n                     interface=\"action-sheet\" \n                     cancelText=\"CANCELAR\"></ion-input> -->\n          <mat-form-field style=\"width: 100%\" class=\"bg-light mt-3 rounded pl-1 pr-1\">\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"edad\" />\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n          </mat-form-field>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Cargo</ion-label>\n          <ion-select\n            formControlName=\"cargo\"\n            class=\"bg-light mt-3 rounded pl-1 pr-1\"\n            placeholder=\"Cargo\"\n            mode=\"ios\"\n            interface=\"action-sheet\"\n            cancelText=\"CANCELAR\"\n          >\n            <ion-select-option *ngFor=\"let charge of typeCharges\" [value]=\"charge.FK_ID_Cargo\">{{charge.strCargo}}</ion-select-option>\n          </ion-select>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Teléfono</ion-label>\n          <ion-input formControlName=\"telefono\" placeholder=\"Teléfono\" class=\"bg-light mt-3 rounded pl-1 pr-1\"> </ion-input>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">Correo Electrónico</ion-label>\n          <ion-input formControlName=\"email\" placeholder=\"Correo electrónico\" class=\"bg-light mt-3 rounded pl-1 pr-1\"> </ion-input>\n        </ion-item>\n      </ion-card-content>\n    </ion-card>\n  </form>\n\n  <!-- Boton para cuando encuentre informacion del asistente -->\n  <ion-grid *ngIf=\"infoUser\">\n    <ion-row>\n      <ion-col size=\"3\"></ion-col>\n      <ion-col size=\"6\">\n        <ion-button (click)=\"registerResponsible(formInfoUserRegisterEvent)\" color=\"primary\" class=\"btn\" expand=\"block\">\n          Registrar\n        </ion-button>\n      </ion-col>\n      <ion-col size=\"3\"></ion-col>\n    </ion-row>\n  </ion-grid>\n\n  <!-- boton para cuando no encuentre información del asistente -->\n  <ion-grid *ngIf=\"!infoUser\">\n    <ion-row>\n      <ion-col size=\"3\"></ion-col>\n      <ion-col size=\"6\">\n        <ion-button (click)=\"registerResponsible(formInfoUserRegisterEventEmpty)\" color=\"primary\" class=\"btn\" expand=\"block\">\n          Registrar\n        </ion-button>\n      </ion-col>\n      <ion-col size=\"3\"></ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CacheService } from '../../../services/cache/cache.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { EventService } from '../../../services/event/event.service';\nimport { AlertController } from '@ionic/angular';\nimport { RegistroAsistenteEvento } from '../../../intarfaces/interfaces';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-info-register-event-manual',\n  templateUrl: './info-register-event-manual.page.html',\n  styleUrls: ['./info-register-event-manual.page.scss'],\n})\nexport class InfoRegisterEventManualPage implements OnInit {\n  /**\n   * Se crea esta variable porque crea un formulario cuando trae información al momento de consultar\n   * al invitado\n   */\n  formInfoUserRegisterEvent: FormGroup;\n\n  /**\n   * Se crea esta variable porque crea un formulario cuando NO trae información al momento de consultar\n   * al invitado\n   */\n  formInfoUserRegisterEventEmpty: FormGroup;\n\n  /**\n   * InfoUser es la variable donde se guarda la información del invitado a registrar.\n   */\n  infoUser;\n\n  /**\n   * Nombre del evento para mostrar cual es el nombre seleccionado\n   */\n  nombreEvento: string;\n\n  /**\n   * Almacena todos los documentos que son permitidos al momento de registrar un asistente\n   * (CC, NIT, CE) etc.\n   */\n  documentsType: [] = [];\n\n  /**\n   * Almacena los diferentes tipos de cargos que posee la herramienta, por el momento son 3\n   * Directivo, RESPONSABLE SGSST, TRABAJADOR\n   */\n  typeCharges: [] = [];\n\n  /**\n   * Array de generos, Masculino y femenino\n   */\n  typeSex: [] = [];\n\n  /**\n   * Esta variable valida si la consulta del invitado trae o no información del asistente.\n   */\n  isResponsibleEmpty: boolean;\n\n  constructor(\n    private cacheService: CacheService,\n    private eventService: EventService,\n    private router: Router,\n    private alertController: AlertController,\n    private formBuilder: FormBuilder\n  ) {}\n\n  /**\n   * Este metodo tiene varias cosas a tener en cuenta, las cuales son:\n   * 1. Carga los documentos, los tipos de cargo y los sexos al momento de cargar la pagina.\n   * 2. valida que valor viene en la variable sessionStorage.infoResponsibleManualEvent para posteriormente\n   *    armar el formulario. Si viene null lo arma vacio si viene con datos crea el formulario con datos y\n   *    bloquea unos campos que no son editables.\n   *\n   */\n  ngOnInit() {\n    this.getDocumentsTypeUser();\n    this.getTypesCharge();\n    this.getTypesSex();\n    if (sessionStorage.infoResponsibleManualEvent === 'null') {\n      this.createFormInfoUserRegister();\n      this.isResponsibleEmpty = true;\n    } else {\n      this.isResponsibleEmpty = false;\n      this.infoUser = JSON.parse(sessionStorage.infoResponsibleManualEvent);\n      this.createFormInfoUserRegisterWithInformation();\n      setTimeout(() => {\n        this.formInfoUserRegisterEvent.patchValue({\n          tipoDocEmp: this.infoUser.strTipoIdentificacionEmpresa,\n          documentoEmp: this.infoUser.strNumeroDocumentoEmpresa,\n          razonSocial: this.infoUser.strRazonSocial,\n          tipoDoc: this.infoUser.strTipoDocumentoEmpleado,\n          idPersona: this.infoUser.strNumeroDocumentoEmpleado,\n          nombre: this.infoUser.strNombreEmpleado,\n          cargo: this.infoUser.FK_ID_Cargo,\n          // edad: this.infoUser.dtmFechaNacimiento.toString().split('T')[0],\n          edad: this.infoUser.dtmFechaNacimiento,\n          sexo: this.infoUser.FK_ID_Sexo,\n          telefono: this.infoUser.strTelefono,\n          email: this.infoUser.strEmail,\n        });\n      }, 1000);\n    }\n    this.nombreEvento = sessionStorage.nombreEvento;\n  }\n\n  createFormInfoUserRegister() {\n    this.formInfoUserRegisterEventEmpty = this.formBuilder.group({\n      tipoDocEmp: ['', Validators.required],\n      documentoEmp: ['', Validators.required],\n      razonSocial: ['', Validators.required],\n      tipoDoc: ['', Validators.required],\n      idPersona: ['', Validators.required],\n      nombre: ['', Validators.required],\n      sexo: ['', Validators.required],\n      edad: ['', Validators.required],\n      cargo: ['', Validators.required],\n      telefono: ['', Validators.required],\n      email: ['', Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*.-]).{6,}$')],\n    });\n  }\n\n  createFormInfoUserRegisterWithInformation() {\n    this.formInfoUserRegisterEvent = this.formBuilder.group({\n      tipoDocEmp: [{ value: '', disabled: true }],\n      documentoEmp: [{ value: '', disabled: true }],\n      razonSocial: [{ value: '', disabled: true }],\n      tipoDoc: [{ value: '', disabled: true }],\n      idPersona: [{ value: '', disabled: true }],\n      nombre: [{ value: '', disabled: true }],\n      sexo: [''],\n      edad: [''],\n      cargo: [''],\n      telefono: [''],\n      email: ['', Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*.-]).{6,}$')],\n    });\n  }\n\n  /**\n   * Metodo para obtener los documentos permitidos para la selección de tipo de documentos\n   */\n  getDocumentsTypeUser() {\n    this.eventService.getDocumentType().subscribe(response => {\n      this.documentsType = response.Documentos;\n    });\n  }\n\n  /**\n   * Metodo para obtener los cargos permitidos para la selección de cargo\n   */\n  getTypesCharge() {\n    this.eventService.getDocumentType().subscribe(response => {\n      this.typeCharges = response.Cargos;\n    });\n  }\n\n  /**\n   * Metodo para obtener el tipo de sexo permitidos\n   */\n  getTypesSex() {\n    this.eventService.getDocumentType().subscribe(response => {\n      this.typeSex = response.Sexos;\n    });\n  }\n\n  /**\n   *\n   * Este metodo recibe el formulario con el fin de armar el objeto que se necesita para realizar el registro\n   * valida si la variable isResponsibleEmpty llega con algun dato o no y luego lanza el metodo para\n   * el registro como tal.\n   */\n  registerResponsible(newResponsible) {\n    const eventoId = this.cacheService.newRegisterEvent.FK_ID_Evento.toString();\n    if (this.isResponsibleEmpty) {\n      const fechaNacimiento = newResponsible.controls.edad.value.toISOString().split('T')[0];\n      const newRegister: RegistroAsistenteEvento = {\n        strTipoIdentificacionEmpresa: newResponsible.value.tipoDocEmp,\n        strNumeroDocumentoEmpresa: newResponsible.value.documentoEmp,\n        strTipoDocumentoEmpleado: newResponsible.value.tipoDoc,\n        strNumeroDocumentoEmpleado: newResponsible.value.idPersona,\n        strNombreEmpleado: newResponsible.value.nombre,\n        dtmFechaNacimiento: fechaNacimiento,\n        FK_ID_Sexo: newResponsible.value.sexo,\n        strTelefono: newResponsible.value.telefono,\n        FK_ID_Cargo: newResponsible.value.cargo,\n        FK_ID_Evento: eventoId,\n        strRazonSocial: newResponsible.value.razonSocial,\n        strEmail: newResponsible.value.email,\n      };\n      this.registerNewResponsibleWhenIsEmpty(newRegister);\n    } else {\n      const documentTypeCompany = this.validateDocumentType(newResponsible.controls.tipoDocEmp.value);\n\n      const newRegister: RegistroAsistenteEvento = {\n        strTipoIdentificacionEmpresa: documentTypeCompany,\n        strNumeroDocumentoEmpresa: newResponsible.controls.documentoEmp.value,\n        strTipoDocumentoEmpleado: newResponsible.controls.tipoDoc.value,\n        strNumeroDocumentoEmpleado: newResponsible.controls.idPersona.value,\n        strNombreEmpleado: newResponsible.controls.nombre.value,\n        dtmFechaNacimiento: newResponsible.value.edad,\n        FK_ID_Sexo: newResponsible.value.sexo,\n        strTelefono: newResponsible.value.telefono,\n        FK_ID_Cargo: newResponsible.value.cargo,\n        FK_ID_Evento: eventoId,\n        strRazonSocial: newResponsible.controls.razonSocial.value,\n        strEmail: newResponsible.value.email,\n      };\n\n      this.registerNewResponsibleWhenIsEmpty(newRegister);\n    }\n  }\n\n  /**\n   * Este metodo lanza el registro como tal del invitado al evento.\n   */\n  registerNewResponsibleWhenIsEmpty(newResponsibleEvent: RegistroAsistenteEvento) {\n    this.eventService.registerResponsibleManual(newResponsibleEvent).subscribe(\n      response => {\n        this.confirmationRegister('Exitoso', 'El registro se realizó correctamente.');\n        this.router.navigateByUrl('u/consultEvent/selectRegisterEvent');\n      },\n      err => {\n        this.confirmationRegister('Fallido.', 'No se pudo realizar el registro del asistente al evento');\n      }\n    );\n  }\n\n  /**\n   *\n   * Este metodo se encarga de validar el tipo del documento para que no exista un error cuando\n   * consultan la información que viene del asistente, puede que no venga con el dato como tal, ejemplo\n   * NIT y no NI, como se reconoce en la BD\n   */\n  validateDocumentType(value: string): string {\n    switch (value) {\n      case 'NIT':\n        return 'NI';\n        break;\n      case 'CÉDULA DE CIUDADANIA':\n        return 'CC';\n        break;\n      case 'CÉDULA DE EXTRANJERÍA':\n        return 'CE';\n        break;\n      case 'NUIP':\n        return 'NU';\n        break;\n      case 'PASAPORTE':\n        return 'PA';\n        break;\n      case 'TARJETA DE IDENTIDAD':\n        return 'ti';\n        break;\n      case 'PERMISO ESPECIAL DE PERMANENCIA':\n        return 'PE';\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Alerta que confirma el exito o fallido del registro manual\n   */\n  async confirmationRegister(resultadoAlerta: string, mensaje: string) {\n    const alert = await this.alertController.create({\n      header: resultadoAlerta,\n      mode: 'ios',\n      message: mensaje,\n      buttons: ['ACEPTAR'],\n    });\n    await alert.present();\n  }\n}\n"]}