{"version":3,"sources":["./src/app/pages/companies/edit-company/edit-company-routing.module.ts","./src/app/pages/companies/edit-company/edit-company.module.ts","./src/app/pages/companies/edit-company/edit-company.page.ts","./src/app/pages/companies/edit-company/edit-company.page.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACD;;;AAEtD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAe;KAC3B;CACF,CAAC;AAMK,MAAM,4BAA4B;;2GAA5B,4BAA4B;kLAA5B,4BAA4B,kBAH9B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,4DAAY;mIAEX,4BAA4B,uFAF7B,4DAAY;6FAEX,4BAA4B;cAJxC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACN;AACyB;AACrB;AAEY;AACoB;AACvB;;AAM/C,MAAM,qBAAqB;;oGAArB,qBAAqB;oKAArB,qBAAqB,kBAHvB,CAAC,4DAAY,EAAE,0DAAW,EAAE,0DAAW,EAAE,kEAAmB,EAAE,sEAAW,EAAE,yFAA4B,CAAC;mIAGtG,qBAAqB,mBAFjB,kEAAe,aADpB,4DAAY,EAAE,0DAAW,EAAE,0DAAW,EAAE,kEAAmB,EAAE,sEAAW,EAAE,yFAA4B;6FAGrG,qBAAqB;cAJjC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,EAAE,0DAAW,EAAE,0DAAW,EAAE,kEAAmB,EAAE,sEAAW,EAAE,yFAA4B,CAAC;gBACjH,YAAY,EAAE,CAAC,kEAAe,CAAC;aAChC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZiD;AACkB;AACX;AACW;AACY;AACA;AACpB;;;;;;;;;;ICiChD,wEAA0F;IAAA,yFAAyB;IAAA,4DAAI;;;IAMrH,2EACE;IAAA,4EAAW;IAAA,uDAAc;IAAA,4DAAY;IACrC,2EAAuD;IACzD,4DAAW;;;IAFE,0DAAc;IAAd,6EAAc;IACD,0DAAkB;IAAlB,+EAAkB;;;IAG9C,wEAA0F;IAAA,4FAAiC;IAAA,4DAAI;;;IAa7H,wFAAgE;IAAA,uDAA4B;IAAA,4DAAoB;;;IAA7F,wEAAW;IAAkC,0DAA4B;IAA5B,qGAA4B;;;IAE9F,wEAA6F;IAAA,uFAA4B;IAAA,4DAAI;;;IAY3H,wFACE;IAAA,uDACF;IAAA,4DAAoB;;;IAFD,wEAAW;IAC5B,0DACF;IADE,iGACF;;;IAEF,wEAA0F;IAAA,oFAAyB;IAAA,4DAAI;;;IAyBvH,wEAAmF;IAAA,iFAAiB;IAAA,4DAAI;;;IAMxG,wEAAgG;IAAA,uFAAkB;IAAA,4DAAI;;;IAMtH,wEAAmF;IAAA,iFAAsB;IAAA,4DAAI;;;IAC7G,wEAAkF;IAAA,gFAAgB;IAAA,4DAAI;;;IAMtG,wEAAyF;IAAA,6FAA6B;IAAA,4DAAI;;;IAC1H,wEAAwF;IAAA,+FAA0B;IAAA,4DAAI;;;;IAvHhI,0EACE;IAD4B,sTAAmB;IAC/C,8EACE;IAAA,mFACE;IAAA,8EACE;IAAA,8EACE;IAAA,+EAA8B;IAAA,qGAAgC;IAAA,4DAAY;IAC1E,0EAA+D;IACjE,4DAAW;IAEX,8EACE;IAAA,+EAA8B;IAAA,qFAAoB;IAAA,4DAAY;IAC9D,0EACE;IAAA,8EAAkF;IACpF,4DAAM;IACR,4DAAW;IAEX,+EACE;IAAA,gFAA8B;IAAA,mEAAO;IAAA,4DAAY;IACjD,4EAAgD;IAClD,4DAAW;IAEX,+EACE;IAAA,gFACE;IAAA,mGACA;IAAA,kFACE;IAD0B,uUAA6B,WAAW,KAAE;IACpE,2EAA0D;IAC5D,4DAAa;IACf,4DAAY;IACZ,2EACE;IAAA,yEAA2D;IAAA,qFAAoB;IAAA,4DAAI;IACrF,4DAAM;IACN,4EAAgE;IAChE,iHAA0F;IAC5F,4DAAW;IAEX,+EACE;IAAA,gFAA8B;IAAA,6EAAiB;IAAA,4DAAY;IAC3D,uFACE;IAAA,+HACE;IAGJ,4DAAkB;IAClB,iHAA0F;IAC5F,4DAAW;IAEX,+EACE;IAAA,gFAA8B;IAAA,uFAA2B;IAAA,4DAAY;IACrE,kFAQE;IAHA,6UAAkC;IAGlC,iJAAgE;IAClE,4DAAa;IACb,iHAA6F;IAC/F,4DAAW;IAEX,+EACE;IAAA,gFAA8B;IAAA,oFAAwB;IAAA,4DAAY;IAClE,kFAOE;IAAA,iJACE;;IAEJ,4DAAa;IACb,iHAA0F;IAC5F,4DAAW;IAEX,+EACE;IAAA,gFAA8B;IAAA,uEAAW;IAAA,4DAAY;IACrD,4EAAoD;IACtD,4DAAW;IAEX,+EACE;IAAA,gFAA8B;IAAA,sFAAqB;IAAA,4DAAY;IAC/D,0EACE;IAAA,+EAAkF;IACpF,4DAAM;IACR,4DAAW;IAEX,+EACE;IAAA,gFAA8B;IAAA,iFAAgB;IAAA,4DAAY;IAC1D,0EACE;IAAA,+EAA+E;IACjF,4DAAM;IACR,4DAAW;IAEX,+EACE;IAAA,gFAA8B;IAAA,4EAAgB;IAAA,4DAAY;IAC1D,4EAA2E;IAC3E,iHAAmF;IACrF,4DAAW;IAEX,+EACE;IAAA,gFAA8B;IAAA,2FAAqB;IAAA,4DAAY;IAC/D,4EAAqG;IACrG,iHAAgG;IAClG,4DAAW;IAEX,+EACE;IAAA,gFAA8B;IAAA,oFAAmB;IAAA,4DAAY;IAC7D,4EAA6D;IAC7D,iHAAmF;IACnF,iHAAkF;IACpF,4DAAW;IAEX,+EACE;IAAA,gFAA8B;IAAA,8EAAa;IAAA,4DAAY;IACvD,4EAAsD;IACtD,iHAAyF;IACzF,iHAAwF;IAC1F,4DAAW;IAEX,+EACE;IAAA,gFAA8B;IAAA,kGAAiC;IAAA,4DAAY;IAC3E,4EAAqE;IACvE,4DAAW;IAEX,+EACE;IAAA,gFAA8B;IAAA,8EAAkB;IAAA,4DAAY;IAC5D,4EAA4D;IAC9D,4DAAW;IACb,4DAAW;IAEX,2EACE;IAAA,kFAA6C;IAAnB,yTAAkB;IAAC,oEAAQ;IAAA,4DAAa;IAClE,kFAA0C;IAAA,sEAAU;IAAA,4DAAa;IACnE,4DAAM;IACR,4DAAmB;IACrB,4DAAW;IACb,4DAAO;;;IA3ID,uFAAuB;IAgCS,2DAA6D;IAA7D,8HAA6D;IAM7E,0DAA6B;IAA7B,sFAA6B;IAKb,0DAA6D;IAA7D,8HAA6D;IAWvF,0DAA2C;IAA3C,2GAA2C;IAEZ,0DAA+B;IAA/B,yFAA+B;IAEpC,0DAAgE;IAAhE,iIAAgE;IAU1F,0DAAwC;IAAxC,wGAAwC;IAET,0DAA2F;IAA3F,2MAA2F;IAIhG,0DAA6D;IAA7D,8HAA6D;IAyB7D,2DAAsD;IAAtD,uHAAsD;IAMtD,0DAAmE;IAAnE,oIAAmE;IAMnE,0DAAsD;IAAtD,uHAAsD;IACtD,0DAAqD;IAArD,sHAAqD;IAMrD,0DAA4D;IAA5D,6HAA4D;IAC5D,0DAA2D;IAA3D,4HAA2D;;ADtHnG;;GAEG;AAMI,MAAM,eAAe;IAgE1B,YACU,aAA4B,EAC5B,KAAqB,EACrB,gBAAkC,EAClC,MAAc,EACd,SAA0B,EAC1B,WAA8B;QAL9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,UAAK,GAAL,KAAK,CAAgB;QACrB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAiB;QAC1B,gBAAW,GAAX,WAAW,CAAmB;QAjDxC;;WAEG;QACM,gBAAW,GAAG,+CAA+C,CAAC;QAEvE;;WAEG;QACM,eAAU,GAAG;YACpB,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE;YAC/B,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE;SAC/B,CAAC;QAEF;;WAEG;QACc,oBAAe,GAAG,YAAY,CAAC;QAEhD;;WAEG;QACc,gBAAW,GAAG,aAAa,CAAC;QAE7C;;WAEG;QACc,cAAS,GAAG,cAAc,CAAC;QAE5C;;WAEG;QACc,kBAAa,GAAG,WAAW,CAAC;QAE7C;;WAEG;QACc,UAAK,GAAG;YACvB,SAAS,EAAE;gBACT,IAAI,EAAE,oFAAoF;gBAC1F,eAAe,EAAE,oBAAoB;aACtC;SACF,CAAC;IASC,CAAC;IAEJ,gBAAgB;QACd,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IAED;;OAEG;IACG,IAAI;;;YACR,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;gBAC1B,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBACxC,MAAM,EAAE,UAAU;oBAClB,IAAI,EAAE,KAAK;oBACX,OAAO,EAAE,0EAA0E;oBACnF,OAAO,EAAE,CAAC,SAAS,CAAC;iBACrB,CAAC,CAAC;gBAEH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;gBAEtB,OAAO;aACR;YAED,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YACnC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,gBAAgB,GAAG,KAAK,CAAC,aAAa,CAAC;YACxE,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC;YACxC,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,KAAK,CAAC,oBAAoB,CAAC;YACtD,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;YACxE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YACtE,IAAI,CAAC,OAAO,CAAC,oBAAoB,GAAG,KAAK,CAAC,MAAM,CAAC;YACjD,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC;YAC1F,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,eAAe,GAAG,KAAK,CAAC,YAAY,CAAC;YACtE,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,eAAe,CAAC;YAChF,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,kBAAkB,GAAG,KAAK,CAAC,gBAAgB,CAAC,kBAAkB,CAAC;YAChG,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,wBAAwB,GAAG,KAAK,CAAC,gBAAgB,CAAC,mBAAmB,CAAC;YACvG,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,kBAAkB,CAAC;YACtF,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,wBAAwB,CAAC;YAC7F,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,eAAe,GAAG,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC;YACnF,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,qBAAqB,GAAG,KAAK,CAAC,aAAa,CAAC,eAAe,CAAC;YAC7F,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,eAAe,CAAC;YAChF,IAAI,CAAC,OAAO,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,qBAAqB,CAAC;YAEvF,MAAM,OAAO,SAAG,IAAI,CAAC,OAAO,CAAC,SAAS,mCAAI,EAAE,CAAC;YAC7C,MAAM,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,KAAK,cAAc,CAAC,CAAC;YAEhE,IAAI,CAAC,KAAK,EAAE;gBACV,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAC7B,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC;aAClC;YAED,IAAI,CAAC,MAAM,EAAE,CAAC;;KACf;IAED;;OAEG;IACH,MAAM;QACJ,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAqB,EAAE,EAAE,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;IAC1E,CAAC;IAED;;OAEG;IACH,kBAAkB;QAChB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAChD,CAAC;IAED;;;;OAIG;IACH,WAAW,CAAC,IAAkC;QAC5C,MAAM,GAAG,GAAG,IAAI,KAAK,cAAc,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,aAAa,CAAC;QAE3E,OAAO,CAAC,CAAM,EAAE,CAAM,EAAE,EAAE;YACxB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAC9C,CAAC,CAAC;IACJ,CAAC;IAEK,WAAW,CAAC,KAAU,EAAE,KAAa;;YACzC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gBAC5C,KAAK;gBACL,SAAS,EAAE,6FAAgB;gBAC3B,cAAc,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,eAAe,EAAE;aACrG,CAAC,CAAC;YAEH,MAAM,OAAO,CAAC,OAAO,EAAE,CAAC;QAC1B,CAAC;KAAA;IAED;;OAEG;IACW,UAAU;;YACtB,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;YAE1C,IAAI;gBACF,IAAI,CAAC,OAAO,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;aAC/D;YAAC,WAAM;gBACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC;aAC9C;YAED,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjB,IAAI,CAAC,MAAM,EAAE,CAAC;gBAEd,OAAO;aACR;YAED,IAAI,CAAC,aAAa,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;YAC/D,IAAI,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC;YACzD,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC;KAAA;IAED;;OAEG;IACK,QAAQ;QACd,MAAM,qBAAqB,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;QAClG,MAAM,4BAA4B,GAAG,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAE,qBAAqB,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAEvG,MAAM,yBAAyB,GAAG,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAE1G,MAAM,aAAa,GAAG,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAEjH,MAAM,oBAAoB,GAAG,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEnH,MAAM,oBAAoB,GAAG,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEvH,MAAM,YAAY,GAAG;YACnB,kBAAkB,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,kBAAkB;YACvE,mBAAmB,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,wBAAwB;SAC/E,CAAC;QAEF,MAAM,uBAAuB,GAAG,IAAI,0DAAW,CAAC,YAAY,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAErF,MAAM,SAAS,GAAG;YAChB,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,eAAe;YAC7D,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,qBAAqB;SACxE,CAAC;QAEF,MAAM,oBAAoB,GAAG,IAAI,0DAAW,CAAC,SAAS,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAE/E,MAAM,iBAAiB,GAAG,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAErH,MAAM,kBAAkB,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,2BAA2B,IAAI,IAAI,CAAC,OAAO,CAAC,2BAA2B,EAAE,CAAC;QACrH,MAAM,yBAAyB,GAAG,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAEjG,MAAM,sBAAsB,GAAG,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,6BAA6B,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAEtH,MAAM,cAAc,GAAG,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;YAC9D,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC;YACxC,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC;YACpC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;SACzB,CAAC,CAAC;QAEH,MAAM,2BAA2B,GAAG,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;YAC5E,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC;YAClC,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC;YACpC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;SACzB,CAAC,CAAC;QAEH,MAAM,aAAa,GAAG,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAEtI,MAAM,mBAAmB,GAAG,IAAI,0DAAW,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QAExI,MAAM,2BAA2B,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,0BAA0B,IAAI,IAAI,CAAC,OAAO,CAAC,gCAAgC,EAAE,CAAC;QAClI,MAAM,kCAAkC,GAAG,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAE,2BAA2B,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAEnH,MAAM,yBAAyB,GAAG,IAAI,0DAAW,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,4BAA4B,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAExH,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,qBAAqB,EAAE,4BAA4B;YACnD,kBAAkB,EAAE,yBAAyB;YAC7C,MAAM,EAAE,aAAa;YACrB,aAAa,EAAE,oBAAoB;YACnC,aAAa,EAAE,oBAAoB;YACnC,gBAAgB,EAAE,uBAAuB;YACzC,aAAa,EAAE,oBAAoB;YACnC,UAAU,EAAE,iBAAiB;YAC7B,kBAAkB,EAAE,yBAAyB;YAC7C,eAAe,EAAE,sBAAsB;YACvC,OAAO,EAAE,cAAc;YACvB,oBAAoB,EAAE,2BAA2B;YACjD,MAAM,EAAE,aAAa;YACrB,YAAY,EAAE,mBAAmB;YACjC,2BAA2B,EAAE,kCAAkC;YAC/D,kBAAkB,EAAE,yBAAyB;SAC9C,CAAC,CAAC;IACL,CAAC;;8EA1QU,eAAe;+FAAf,eAAe;QChB5B,6EACE;QAAA,8EACE;QAAA,yEAAmB;QAAA,2FAA2B;QAAA,4DAAM;QACtD,4DAAc;QAChB,4DAAa;QAEb,8EACE;QAAA,+GACE;QA2IJ,4DAAc;;QA5IsC,0DAAiB;QAAjB,+EAAiB;;6FDSxD,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC","file":"edit-company-edit-company-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EditCompanyPage } from './edit-company.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditCompanyPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditCompanyPageRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { MunicipiosFilterPipe } from 'src/app/pipes/municipiosFilter.pipe';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\nimport { EditCompanyPageRoutingModule } from './edit-company-routing.module';\nimport { EditCompanyPage } from './edit-company.page';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, ReactiveFormsModule, PipesModule, EditCompanyPageRoutingModule],\n  declarations: [EditCompanyPage],\n})\nexport class EditCompanyPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController, PopoverController } from '@ionic/angular';\nimport { PopoverComponent } from 'src/app/components/popover/popover.component';\nimport { CompaniesService } from 'src/app/services/companies/companies.service';\nimport { NavbarService } from '../../navbar/navbar.service';\n\n/**\n * Componente para la vista de edición de datos de empresa.\n */\n@Component({\n  selector: 'app-edit-company',\n  templateUrl: './edit-company.page.html',\n  styleUrls: ['./edit-company.page.scss'],\n})\nexport class EditCompanyPage {\n  /**\n   * Formulario.\n   */\n  formGroup: FormGroup;\n\n  /**\n   * Compañía actual.\n   */\n  company: any;\n\n  /**\n   * Listado de departamentos.\n   */\n  departamentos: any[];\n\n  /**\n   * Listado de municipios.\n   */\n  municipios: any[];\n\n  /**\n   * Expresión regular para validar correos electrónicos.\n   */\n  readonly EMAIL_REGEX = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n  /**\n   * Indicadores de zona.\n   */\n  readonly TIPOS_ZONA = [\n    { label: 'Urbana', value: 'U' },\n    { label: 'Rural', value: 'R' },\n  ];\n\n  /**\n   * Expresión regular para validar números de teléfono celular.\n   */\n  private readonly CELLPHONE_REGEX = /^3[\\d]{9}$/;\n\n  /**\n   * Expresión regular para validar solo números.\n   */\n  private readonly NUMBER_ONLY = /^[0-9]{10}$/;\n\n  /**\n   * Expresión regular para validar números de teléfono fijo.\n   */\n  private readonly TEL_REGEX = /^[\\d]{7,10}$/;\n\n  /**\n   * Expresión regular para código postal.\n   */\n  private readonly ZIPCODE_REGEX = /^[\\d]{6}$/;\n\n  /**\n   * Textos de ayuda.\n   */\n  private readonly HINTS = {\n    direccion: {\n      text: 'al dar clic tendrá la posibilidad de actualizar la dirección de la sede principal.',\n      highlightedText: 'Estimado usuario: ',\n    },\n  };\n\n  constructor(\n    private navbarService: NavbarService,\n    private route: ActivatedRoute,\n    private companiesService: CompaniesService,\n    private router: Router,\n    private alertCtrl: AlertController,\n    private popoverCtrl: PopoverController\n  ) {}\n\n  ionViewWillEnter(): void {\n    this.navbarService.setVisibility(false);\n    this.formGroup = undefined;\n    this.getCompany();\n  }\n\n  ionViewWillLeave(): void {\n    this.navbarService.setVisibility(true);\n  }\n\n  /**\n   * Guarda los cambios.\n   */\n  async save(): Promise<void> {\n    if (this.formGroup.invalid) {\n      const alert = await this.alertCtrl.create({\n        header: 'Atención',\n        mode: 'ios',\n        message: 'Compruebe el correcto diligenciamiento de TODOS los campos obligatorios.',\n        buttons: ['ACEPTAR'],\n      });\n\n      await alert.present();\n\n      return;\n    }\n\n    const value = this.formGroup.value;\n    this.company.eDSedesActualizadas.srtIndicadorZona = value.indicadorZona;\n    this.company.strCelular = value.celular;\n    this.company.strTelefono = value.telefonoNotificacion;\n    this.company.eDSedesActualizadas.strTelefono = this.company.strTelefono;\n    this.company.eDSedesActualizadas.strCelular = this.company.strCelular;\n    this.company.strCorreoElectronico = value.correo;\n    this.company.eDSedesActualizadas.strCorreoElectronico = this.company.strCorreoElectronico;\n    this.company.eDSedesActualizadas.strCodigoPostal = value.codigoPostal;\n    this.company.strCodigoPostal = this.company.eDSedesActualizadas.strCodigoPostal;\n    this.company.eDSedesActualizadas.Fk_Id_Departamento = value.departamentoSede.Pk_Id_Departamento;\n    this.company.eDSedesActualizadas.Nombre_Departamento_Sede = value.departamentoSede.Nombre_Departamento;\n    this.company.Fk_Id_Departamento = this.company.eDSedesActualizadas.Fk_Id_Departamento;\n    this.company.Nombre_Departamento = this.company.eDSedesActualizadas.Nombre_Departamento_Sede;\n    this.company.eDSedesActualizadas.Fk_Id_Municipio = value.municipioSede.IdMunicipio;\n    this.company.eDSedesActualizadas.Nombre_Municipio_Sede = value.municipioSede.NombreMunicipio;\n    this.company.Fk_Id_Municipio = this.company.eDSedesActualizadas.Fk_Id_Municipio;\n    this.company.Nombre_Municipio = this.company.eDSedesActualizadas.Nombre_Municipio_Sede;\n\n    const updated = this.company.__updated ?? [];\n    const found = updated.find((m: string) => m === 'company-data');\n\n    if (!found) {\n      updated.push('company-data');\n      this.company.__updated = updated;\n    }\n\n    this.cancel();\n  }\n\n  /**\n   * Cancela la edición de la empresa.\n   */\n  cancel(): void {\n    const id = this.route.snapshot.params.id;\n    this.router.navigate([`/u/companies/list/${id}`], { replaceUrl: true });\n  }\n\n  /**\n   * Al cambiar un departamento, se restablece el control para el municipio también.\n   */\n  changeDepartamento(): void {\n    this.formGroup.controls.municipioSede.reset();\n  }\n\n  /**\n   * Comparación de objetos para establecer valores en selectores de municipios y departamentos.\n   *\n   * @param mode Modo.\n   */\n  compareWith(mode: 'departamento' | 'municipio'): (a: any, b: any) => boolean {\n    const key = mode === 'departamento' ? 'Pk_Id_Departamento' : 'IdMunicipio';\n\n    return (a: any, b: any) => {\n      return a && b ? a[key] === b[key] : a === b;\n    };\n  }\n\n  async showPopover(event: any, field: string): Promise<void> {\n    const popover = await this.popoverCtrl.create({\n      event,\n      component: PopoverComponent,\n      componentProps: { text: this.HINTS[field].text, highlightedText: this.HINTS[field].highlightedText },\n    });\n\n    await popover.present();\n  }\n\n  /**\n   * Establece la empresa de la vista de edición de datos de empresa.\n   */\n  private async getCompany(): Promise<void> {\n    const id = +this.route.snapshot.params.id;\n\n    try {\n      this.company = await this.companiesService.prepareCompany(id);\n    } catch {\n      this.company = this.companiesService.company;\n    }\n\n    if (!this.company) {\n      this.cancel();\n\n      return;\n    }\n\n    this.departamentos = await this.companiesService.departamentos;\n    this.municipios = await this.companiesService.municipios;\n    this.initForm();\n  }\n\n  /**\n   * Inicializa el formulario.\n   */\n  private initForm(): void {\n    const identificacionEmpresa = `${this.company.str_Sigla_Documento} ${this.company.strNumeroDcto}`;\n    const identificacionEmpresaControl = new FormControl({ value: identificacionEmpresa, disabled: true });\n\n    const razonSocialEmpresaControl = new FormControl({ value: this.company.strRazonSocial, disabled: true });\n\n    const idSedeControl = new FormControl({ value: this.company.eDSedesActualizadas.strNombreSede, disabled: true });\n\n    const direccionSedeControl = new FormControl(this.company.eDSedesActualizadas.strDireccion, [Validators.required]);\n\n    const indicadorZonaControl = new FormControl(this.company.eDSedesActualizadas.srtIndicadorZona, [Validators.required]);\n\n    const departamento = {\n      Pk_Id_Departamento: this.company.eDSedesActualizadas.Fk_Id_Departamento,\n      Nombre_Departamento: this.company.eDSedesActualizadas.Nombre_Departamento_Sede,\n    };\n\n    const departamentoSedeControl = new FormControl(departamento, [Validators.required]);\n\n    const municipio = {\n      IdMunicipio: this.company.eDSedesActualizadas.Fk_Id_Municipio,\n      NombreMunicipio: this.company.eDSedesActualizadas.Nombre_Municipio_Sede,\n    };\n\n    const municipioSedeControl = new FormControl(municipio, [Validators.required]);\n\n    const estadoSedeControl = new FormControl({ value: this.company.eDSedesActualizadas.strNombreSede, disabled: true });\n\n    const actividadEconomica = `${this.company.strCodigoActividadEconomica} ${this.company.strActividadEconomicaNombre}`;\n    const actividadEconomicaControl = new FormControl({ value: actividadEconomica, disabled: true });\n\n    const sectorEconomicoControl = new FormControl({ value: this.company.strDescripcionSectorEconomico, disabled: true });\n\n    const celularControl = new FormControl(this.company.strCelular, [\n      Validators.pattern(this.CELLPHONE_REGEX),\n      Validators.pattern(this.NUMBER_ONLY),\n      Validators.maxLength(10),\n    ]);\n\n    const telefonoNotificacionControl = new FormControl(this.company.strTelefono, [\n      Validators.pattern(this.TEL_REGEX),\n      Validators.pattern(this.NUMBER_ONLY),\n      Validators.maxLength(10),\n    ]);\n\n    const correoControl = new FormControl(this.company.strCorreoElectronico, [Validators.required, Validators.pattern(this.EMAIL_REGEX)]);\n\n    const codigoPostalControl = new FormControl(this.company.eDSedesActualizadas.strCodigoPostal, [Validators.pattern(this.ZIPCODE_REGEX)]);\n\n    const identificacionRepresentante = `${this.company.strSiglaRepresentanteLegal} ${this.company.strNumeroDcto_Representant_Legal}`;\n    const identificacionRepresentanteControl = new FormControl({ value: identificacionRepresentante, disabled: true });\n\n    const representanteLegalControl = new FormControl({ value: this.company.strNombre_Representant_Legal, disabled: true });\n\n    this.formGroup = new FormGroup({\n      identificacionEmpresa: identificacionEmpresaControl,\n      razonSocialEmpresa: razonSocialEmpresaControl,\n      idSede: idSedeControl,\n      direccionSede: direccionSedeControl,\n      indicadorZona: indicadorZonaControl,\n      departamentoSede: departamentoSedeControl,\n      municipioSede: municipioSedeControl,\n      estadoSede: estadoSedeControl,\n      actividadEconomica: actividadEconomicaControl,\n      sectorEconomico: sectorEconomicoControl,\n      celular: celularControl,\n      telefonoNotificacion: telefonoNotificacionControl,\n      correo: correoControl,\n      codigoPostal: codigoPostalControl,\n      identificacionRepresentante: identificacionRepresentanteControl,\n      representanteLegal: representanteLegalControl,\n    });\n  }\n}\n","<ion-header>\n  <ion-toolbar>\n    <div class=\"title\">Actualización Datos Empresa</div>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <form [formGroup]=\"formGroup\" (ngSubmit)=\"save()\" *ngIf=\"formGroup\">\n    <ion-card class=\"ion-margin\">\n      <ion-card-content>\n        <ion-list lines=\"none\">\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">TD/Número Identificación Empresa</ion-label>\n            <ion-input formControlName=\"identificacionEmpresa\"></ion-input>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Razón Social Empresa</ion-label>\n            <div class=\"textarea-wrapper\">\n              <ion-textarea autoGrow=\"true\" formControlName=\"razonSocialEmpresa\"></ion-textarea>\n            </div>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">ID Sede</ion-label>\n            <ion-input formControlName=\"idSede\"></ion-input>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">\n              Dirección Empresa Sede Principal\n              <ion-button class=\"tooltip\" (click)=\"showPopover($event, 'direccion')\">\n                <ion-icon name=\"help-outline\" slot=\"icon-only\"></ion-icon>\n              </ion-button>\n            </ion-label>\n            <div class=\"label-link-wrapper\">\n              <a class=\"label-link\" routerLink=\"./../../../edit-address\">Actualizar Dirección</a>\n            </div>\n            <ion-input formControlName=\"direccionSede\" readonly></ion-input>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.direccionSede.hasError('required')\">Dirección es obligatorio.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Indicador de zona</ion-label>\n            <ion-radio-group formControlName=\"indicadorZona\">\n              <ion-item *ngFor=\"let tz of TIPOS_ZONA\">\n                <ion-label>{{ tz.label }}</ion-label>\n                <ion-radio slot=\"start\" [value]=\"tz.value\"></ion-radio>\n              </ion-item>\n            </ion-radio-group>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.indicadorZona.hasError('required')\">Indicador de zona es obligatorio.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Departamento Sede Principal</ion-label>\n            <ion-select\n              mode=\"ios\"\n              interface=\"action-sheet\"\n              cancelText=\"CANCELAR\"\n              formControlName=\"departamentoSede\"\n              (ionChange)=\"changeDepartamento()\"\n              [compareWith]=\"compareWith('departamento')\"\n            >\n              <ion-select-option [value]=\"d\" *ngFor=\"let d of departamentos\"> {{ d.Nombre_Departamento }} </ion-select-option>\n            </ion-select>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.departamentoSede.hasError('required')\">Departamento es obligatorio.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Municipio Sede Principal</ion-label>\n            <ion-select\n              mode=\"ios\"\n              interface=\"action-sheet\"\n              cancelText=\"CANCELAR\"\n              formControlName=\"municipioSede\"\n              [compareWith]=\"compareWith('municipio')\"\n            >\n              <ion-select-option [value]=\"m\" *ngFor=\"let m of municipios | municipiosFilter : formGroup.controls.departamentoSede.value\">\n                {{ m.NombreMunicipio }}\n              </ion-select-option>\n            </ion-select>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.municipioSede.hasError('required')\">Municipio es obligatorio.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Estado Sede</ion-label>\n            <ion-input formControlName=\"estadoSede\"></ion-input>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Código/Nombre AE Ppal</ion-label>\n            <div class=\"textarea-wrapper\">\n              <ion-textarea autoGrow=\"true\" formControlName=\"actividadEconomica\"></ion-textarea>\n            </div>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Sector Económico</ion-label>\n            <div class=\"textarea-wrapper\">\n              <ion-textarea autoGrow=\"true\" formControlName=\"sectorEconomico\"></ion-textarea>\n            </div>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Celular Contacto</ion-label>\n            <ion-input type=\"tel\" maxlength=\"10\" formControlName=\"celular\"></ion-input>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.celular.hasError('pattern')\">Celular inválido.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Teléfono Notificación</ion-label>\n            <ion-input type=\"tel\" ngModel=\"60\" maxlength=\"10\" formControlName=\"telefonoNotificacion\"></ion-input>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.telefonoNotificacion.hasError('pattern')\">Teléfono inválido.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Correo Notificación</ion-label>\n            <ion-input type=\"email\" formControlName=\"correo\"></ion-input>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.correo.hasError('required')\">Correo es obligatorio.</p>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.correo.hasError('pattern')\">Correo inválido.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Código Postal</ion-label>\n            <ion-input formControlName=\"codigoPostal\"></ion-input>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.codigoPostal.hasError('required')\">Código postal es obligatorio.</p>\n            <p class=\"invalid-feedback\" *ngIf=\"formGroup.controls.codigoPostal.hasError('pattern')\">Código postal es inválido.</p>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">TD/No. Identificación Rpte. Legal</ion-label>\n            <ion-input formControlName=\"identificacionRepresentante\"></ion-input>\n          </ion-item>\n\n          <ion-item class=\"ion-margin-bottom\">\n            <ion-label position=\"stacked\">Nombre Rpte. Legal</ion-label>\n            <ion-input formControlName=\"representanteLegal\"></ion-input>\n          </ion-item>\n        </ion-list>\n\n        <div class=\"actions-wrapper ion-margin-top\">\n          <ion-button color=\"light\" (click)=\"cancel()\">Cancelar</ion-button>\n          <ion-button type=\"submit\" color=\"primary\">Actualizar</ion-button>\n        </div>\n      </ion-card-content>\n    </ion-card>\n  </form>\n</ion-content>\n"],"sourceRoot":"webpack:///"}