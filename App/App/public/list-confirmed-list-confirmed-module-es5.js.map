{"version":3,"sources":["webpack:///src/app/pages/companies/list-confirmed/list-confirmed-routing.module.ts","webpack:///src/app/pages/companies/list-confirmed/list-confirmed.module.ts","webpack:///src/app/pages/companies/list-confirmed/list-confirmed.page.html","webpack:///src/app/pages/companies/list-confirmed/list-confirmed.page.ts"],"names":["routes","path","component","ListConfirmedPageRoutingModule","forChild","imports","exports","ListConfirmedPageModule","declarations","ListConfirmedPage","companiesService","alertService","ngZone","retrieveCompanies","id","prepareCompany","company","__confirmed","saveChanges","onError","run","showAlert","alert","present","discardChanges","showLoading","loading","save","pipe","hideLoading","subscribe","next","r","result","split","error","updatedCompanies","companies","filter","c","selector","templateUrl","styleUrls"],"mappings":"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","file":"list-confirmed-list-confirmed-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ListConfirmedPage } from './list-confirmed.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListConfirmedPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListConfirmedPageRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\nimport { ListConfirmedPageRoutingModule } from './list-confirmed-routing.module';\nimport { ListConfirmedPage } from './list-confirmed.page';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, ListConfirmedPageRoutingModule, PipesModule],\n  declarations: [ListConfirmedPage],\n})\nexport class ListConfirmedPageModule {}\n","<ion-header class=\"ion-no-border\">\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"2\">\n        <ion-back-button mode=\"md\" color=\"primary\" defaultHref=\"/\"></ion-back-button>\n      </ion-col>\n      <ion-col size=\"10\">\n        <ion-searchbar animated color=\"primary\" placeholder=\"Buscar\" (ionChange)=\"term = $event.detail.value\"> </ion-searchbar>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n  <!-- Listado de empresas confirmadas -->\n  <ng-container *ngIf=\"companies?.length; else noCompaniesTmp\">\n    <ng-container *ngFor=\"let c of companies | filterCompanies : ['strRazonSocial', 'strNumeroDcto', 'stringObservaciones']: term\">\n      <ng-container *ngTemplateOutlet=\"companyTmp; context: { company: c }\"></ng-container>\n    </ng-container>\n  </ng-container>\n</ion-content>\n\n<!-- Plantilla para vista sin empresas -->\n<ng-template #noCompaniesTmp>\n  <div class=\"no-companies-wrapper\">\n    <div class=\"message ion-padding\">\n      <img src=\"../../../assets/icon/icono_observaciones.svg\" />\n      <h3>No tiene empresas para enviar.</h3>\n    </div>\n  </div>\n</ng-template>\n\n<!-- Plantilla de empresa -->\n<ng-template #companyTmp let-company=\"company\">\n  <ion-card class=\"ion-no-margin\">\n    <ion-card-header>\n      <div class=\"header-wrapper\">\n        <div class=\"title\">\n          <ion-item lines=\"none\">{{ company.strRazonSocial }}</ion-item>\n          <ion-item lines=\"none\">{{ company.str_Sigla_Documento }}: {{ company.strNumeroDcto }}</ion-item>\n        </div>\n        <ion-icon\n          [attr.name]=\"company.__showDetails ? 'chevron-up-outline' : 'chevron-down-outline'\"\n          (click)=\"company.__showDetails = !company.__showDetails\"\n        >\n        </ion-icon>\n      </div>\n    </ion-card-header>\n    <ion-card-content>\n      <ion-item lines=\"none\">\n        <div class=\"field\">\n          <h4>Dirección Empresa Sede Principal</h4>\n          {{ company.eDSedesActualizadas.strDireccion }}\n        </div>\n      </ion-item>\n\n      <ion-item lines=\"none\">\n        <div class=\"field\">\n          <h4>Indicador de zona</h4>\n          {{ company.eDSedesActualizadas.srtIndicadorZona }}\n        </div>\n      </ion-item>\n\n      <ng-container *ngIf=\"company.__showDetails\">\n        <ion-item lines=\"none\">\n          <div class=\"field\">\n            <h4>Departamento Sede Principal</h4>\n            {{ company.eDSedesActualizadas.Nombre_Departamento_Sede }}\n          </div>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <div class=\"field\">\n            <h4>Municipio Sede Principal</h4>\n            {{ company.eDSedesActualizadas.Nombre_Municipio_Sede }}\n          </div>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <div class=\"field\">\n            <h4>Código/A.E. Principal</h4>\n            {{ company.strCodigoActividadEconomica }} - {{ company.strActividadEconomicaNombre }}\n          </div>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <div class=\"field\">\n            <h4>Sector Económico</h4>\n            {{ company.strDescripcionSectorEconomico }}\n          </div>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <div class=\"field\">\n            <h4>Celular Contacto</h4>\n            {{ company.strCelular }}\n          </div>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <div class=\"field\">\n            <h4>Teléfono Notificación</h4>\n            {{ company.strTelefono }}\n          </div>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <div class=\"field\">\n            <h4>Correo Notificación</h4>\n            {{ company.strCorreoElectronico }}\n          </div>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <div class=\"field\">\n            <h4>Código Postal</h4>\n            {{ company.eDSedesActualizadas.strCodigoPostal }}\n          </div>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <div class=\"field\">\n            <h4>TD/No. Identificación Representante Legal</h4>\n            {{ company.strSiglaRepresentanteLegal }} - {{ company.strNumeroDcto_Representant_Legal }}\n          </div>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <div class=\"field\">\n            <h4>Nombre Representante Legal</h4>\n            {{ company.strNombre_Representant_Legal }}\n          </div>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <div class=\"field\">\n            <h4>Observaciones</h4>\n            <ion-textarea rows=\"1\" readonly=\"true\" [value]=\"company.strObservaciones\"></ion-textarea>\n          </div>\n        </ion-item>\n      </ng-container>\n\n      <ion-item lines=\"none\">\n        <ion-button fill=\"clear\" slot=\"start\" (click)=\"edit(company.Pk_Id_AS_004_Empresas_AMigrar)\"> Editar </ion-button>\n        <ion-button fill=\"clear\" slot=\"end\" (click)=\"send(company.Pk_Id_AS_004_Empresas_AMigrar)\"> Enviar </ion-button>\n      </ion-item>\n    </ion-card-content>\n  </ion-card>\n</ng-template>\n","import { Component, NgZone } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\nimport { AlertService } from 'src/app/services/alert/alert.service';\nimport { CompaniesService } from 'src/app/services/companies/companies.service';\n\n/**\n * Componente para la vista de listado de empresas confirmadas.\n */\n@Component({\n  selector: 'app-list-confirmed',\n  templateUrl: './list-confirmed.page.html',\n  styleUrls: ['./list-confirmed.page.scss'],\n})\nexport class ListConfirmedPage {\n  /**\n   * Listado de empresas confirmadas.\n   */\n  companies: any[];\n\n  /**\n   * Término de búsqueda para la casilla de filtrado de empresas.\n   */\n  term: string;\n\n  constructor(\n    private companiesService: CompaniesService,\n    private alertService: AlertService,\n    private ngZone: NgZone\n  ) {}\n\n  ionViewWillEnter(): void {\n    this.retrieveCompanies();\n  }\n\n  /**\n   * Permite la edición de la empresa indicada.\n   *\n   * @param id Identificador de empresa.\n   */\n  async edit(id: number): Promise<void> {\n    const company = await this.companiesService.prepareCompany(id);\n    delete company.__confirmed;\n    await this.companiesService.saveChanges();\n    this.retrieveCompanies();\n  }\n\n  /**\n   * Envía los datos al servidor para su procesamiento.\n   *\n   * @param id Identificador de empresa.\n   */\n  async send(id: number): Promise<void> {\n    const onError = (): void => {\n      this.ngZone.run(async () => {\n        const alert = await this.alertService.showAlert(\n          'Error',\n          'Ha ocurrido un error en el servidor y no se pudieron guardar los datos. Intente más tarde.'\n        );\n\n        await alert.present();\n        this.companiesService.discardChanges();\n      });\n    };\n\n    const loading = await this.alertService.showLoading();\n    await this.companiesService.prepareCompany(id);\n\n    this.companiesService\n      .save()\n      .pipe(finalize(() => this.alertService.hideLoading(loading)))\n      .subscribe({\n        next: r => {\n          this.ngZone.run(async () => {\n            const result = r.split(';')[0];\n\n            if (result !== 'true') {\n              onError();\n\n              return;\n            }\n\n            const alert = await this.alertService.showAlert('Empresa actualizada', 'Los datos se han registrado exitosamente.');\n\n            await alert.present();\n            await this.retrieveCompanies();\n          });\n        },\n        error: onError,\n      });\n  }\n\n  /**\n   * Establece las empresas confirmadas que se encuentren en el almacén de datos.\n   */\n  private async retrieveCompanies(): Promise<void> {\n    const companies = await this.companiesService.updatedCompanies;\n\n    this.companies = companies.filter(c => c.__confirmed);\n  }\n}\n"]}